# coding: utf-8

"""
Copyright 2015 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class CartaoResponse(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        CartaoResponse - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'data_validade': 'str',
            'descricao_estagio': 'str',
            'descricao_status': 'str',
            'estagio': 'int',
            'flag_cancelamento': 'bool',
            'id_cartao': 'int',
            'numero_cartao': 'str',
            'portador': 'str',
            'portador_id': 'int',
            'status': 'int',
            'status_data': 'datetime'
        }

        self.attribute_map = {
            'data_validade': 'dataValidade',
            'descricao_estagio': 'descricaoEstagio',
            'descricao_status': 'descricaoStatus',
            'estagio': 'estagio',
            'flag_cancelamento': 'flagCancelamento',
            'id_cartao': 'idCartao',
            'numero_cartao': 'numeroCartao',
            'portador': 'portador',
            'portador_id': 'portadorId',
            'status': 'status',
            'status_data': 'statusData'
        }

        self._data_validade = None
        self._descricao_estagio = None
        self._descricao_status = None
        self._estagio = None
        self._flag_cancelamento = None
        self._id_cartao = None
        self._numero_cartao = None
        self._portador = None
        self._portador_id = None
        self._status = None
        self._status_data = None

    @property
    def data_validade(self):
        """
        Gets the data_validade of this CartaoResponse.


        :return: The data_validade of this CartaoResponse.
        :rtype: str
        """
        return self._data_validade

    @data_validade.setter
    def data_validade(self, data_validade):
        """
        Sets the data_validade of this CartaoResponse.


        :param data_validade: The data_validade of this CartaoResponse.
        :type: str
        """
        self._data_validade = data_validade

    @property
    def descricao_estagio(self):
        """
        Gets the descricao_estagio of this CartaoResponse.


        :return: The descricao_estagio of this CartaoResponse.
        :rtype: str
        """
        return self._descricao_estagio

    @descricao_estagio.setter
    def descricao_estagio(self, descricao_estagio):
        """
        Sets the descricao_estagio of this CartaoResponse.


        :param descricao_estagio: The descricao_estagio of this CartaoResponse.
        :type: str
        """
        self._descricao_estagio = descricao_estagio

    @property
    def descricao_status(self):
        """
        Gets the descricao_status of this CartaoResponse.


        :return: The descricao_status of this CartaoResponse.
        :rtype: str
        """
        return self._descricao_status

    @descricao_status.setter
    def descricao_status(self, descricao_status):
        """
        Sets the descricao_status of this CartaoResponse.


        :param descricao_status: The descricao_status of this CartaoResponse.
        :type: str
        """
        self._descricao_status = descricao_status

    @property
    def estagio(self):
        """
        Gets the estagio of this CartaoResponse.


        :return: The estagio of this CartaoResponse.
        :rtype: int
        """
        return self._estagio

    @estagio.setter
    def estagio(self, estagio):
        """
        Sets the estagio of this CartaoResponse.


        :param estagio: The estagio of this CartaoResponse.
        :type: int
        """
        self._estagio = estagio

    @property
    def flag_cancelamento(self):
        """
        Gets the flag_cancelamento of this CartaoResponse.


        :return: The flag_cancelamento of this CartaoResponse.
        :rtype: bool
        """
        return self._flag_cancelamento

    @flag_cancelamento.setter
    def flag_cancelamento(self, flag_cancelamento):
        """
        Sets the flag_cancelamento of this CartaoResponse.


        :param flag_cancelamento: The flag_cancelamento of this CartaoResponse.
        :type: bool
        """
        self._flag_cancelamento = flag_cancelamento

    @property
    def id_cartao(self):
        """
        Gets the id_cartao of this CartaoResponse.


        :return: The id_cartao of this CartaoResponse.
        :rtype: int
        """
        return self._id_cartao

    @id_cartao.setter
    def id_cartao(self, id_cartao):
        """
        Sets the id_cartao of this CartaoResponse.


        :param id_cartao: The id_cartao of this CartaoResponse.
        :type: int
        """
        self._id_cartao = id_cartao

    @property
    def numero_cartao(self):
        """
        Gets the numero_cartao of this CartaoResponse.


        :return: The numero_cartao of this CartaoResponse.
        :rtype: str
        """
        return self._numero_cartao

    @numero_cartao.setter
    def numero_cartao(self, numero_cartao):
        """
        Sets the numero_cartao of this CartaoResponse.


        :param numero_cartao: The numero_cartao of this CartaoResponse.
        :type: str
        """
        self._numero_cartao = numero_cartao

    @property
    def portador(self):
        """
        Gets the portador of this CartaoResponse.


        :return: The portador of this CartaoResponse.
        :rtype: str
        """
        return self._portador

    @portador.setter
    def portador(self, portador):
        """
        Sets the portador of this CartaoResponse.


        :param portador: The portador of this CartaoResponse.
        :type: str
        """
        self._portador = portador

    @property
    def portador_id(self):
        """
        Gets the portador_id of this CartaoResponse.


        :return: The portador_id of this CartaoResponse.
        :rtype: int
        """
        return self._portador_id

    @portador_id.setter
    def portador_id(self, portador_id):
        """
        Sets the portador_id of this CartaoResponse.


        :param portador_id: The portador_id of this CartaoResponse.
        :type: int
        """
        self._portador_id = portador_id

    @property
    def status(self):
        """
        Gets the status of this CartaoResponse.


        :return: The status of this CartaoResponse.
        :rtype: int
        """
        return self._status

    @status.setter
    def status(self, status):
        """
        Sets the status of this CartaoResponse.


        :param status: The status of this CartaoResponse.
        :type: int
        """
        self._status = status

    @property
    def status_data(self):
        """
        Gets the status_data of this CartaoResponse.


        :return: The status_data of this CartaoResponse.
        :rtype: datetime
        """
        return self._status_data

    @status_data.setter
    def status_data(self, status_data):
        """
        Sets the status_data of this CartaoResponse.


        :param status_data: The status_data of this CartaoResponse.
        :type: datetime
        """
        self._status_data = status_data

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other): 
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """ 
        Returns true if both objects are not equal
        """
        return not self == other

