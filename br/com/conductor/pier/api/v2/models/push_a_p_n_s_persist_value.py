# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class PushAPNSPersistValue(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        PushAPNSPersistValue - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id_pessoa': 'int',
            'id_conta': 'int',
            'token_dispositivo': 'str',
            'certificado': 'str',
            'senha': 'str',
            'titulo': 'str',
            'conteudo': 'str',
            'tipo_evento': 'str',
            'icone': 'str',
            'som': 'str'
        }

        self.attribute_map = {
            'id_pessoa': 'idPessoa',
            'id_conta': 'idConta',
            'token_dispositivo': 'tokenDispositivo',
            'certificado': 'certificado',
            'senha': 'senha',
            'titulo': 'titulo',
            'conteudo': 'conteudo',
            'tipo_evento': 'tipoEvento',
            'icone': 'icone',
            'som': 'som'
        }

        self._id_pessoa = None
        self._id_conta = None
        self._token_dispositivo = None
        self._certificado = None
        self._senha = None
        self._titulo = None
        self._conteudo = None
        self._tipo_evento = None
        self._icone = None
        self._som = None

    @property
    def id_pessoa(self):
        """
        Gets the id_pessoa of this PushAPNSPersistValue.
        {{{push_a_p_n_s_persist_id_pessoa_value}}}

        :return: The id_pessoa of this PushAPNSPersistValue.
        :rtype: int
        """
        return self._id_pessoa

    @id_pessoa.setter
    def id_pessoa(self, id_pessoa):
        """
        Sets the id_pessoa of this PushAPNSPersistValue.
        {{{push_a_p_n_s_persist_id_pessoa_value}}}

        :param id_pessoa: The id_pessoa of this PushAPNSPersistValue.
        :type: int
        """
        self._id_pessoa = id_pessoa

    @property
    def id_conta(self):
        """
        Gets the id_conta of this PushAPNSPersistValue.
        {{{push_a_p_n_s_persist_id_conta_value}}}

        :return: The id_conta of this PushAPNSPersistValue.
        :rtype: int
        """
        return self._id_conta

    @id_conta.setter
    def id_conta(self, id_conta):
        """
        Sets the id_conta of this PushAPNSPersistValue.
        {{{push_a_p_n_s_persist_id_conta_value}}}

        :param id_conta: The id_conta of this PushAPNSPersistValue.
        :type: int
        """
        self._id_conta = id_conta

    @property
    def token_dispositivo(self):
        """
        Gets the token_dispositivo of this PushAPNSPersistValue.
        {{{push_a_p_n_s_persist_token_dispositivo_value}}}

        :return: The token_dispositivo of this PushAPNSPersistValue.
        :rtype: str
        """
        return self._token_dispositivo

    @token_dispositivo.setter
    def token_dispositivo(self, token_dispositivo):
        """
        Sets the token_dispositivo of this PushAPNSPersistValue.
        {{{push_a_p_n_s_persist_token_dispositivo_value}}}

        :param token_dispositivo: The token_dispositivo of this PushAPNSPersistValue.
        :type: str
        """
        self._token_dispositivo = token_dispositivo

    @property
    def certificado(self):
        """
        Gets the certificado of this PushAPNSPersistValue.
        {{{push_a_p_n_s_persist_certificado_value}}}

        :return: The certificado of this PushAPNSPersistValue.
        :rtype: str
        """
        return self._certificado

    @certificado.setter
    def certificado(self, certificado):
        """
        Sets the certificado of this PushAPNSPersistValue.
        {{{push_a_p_n_s_persist_certificado_value}}}

        :param certificado: The certificado of this PushAPNSPersistValue.
        :type: str
        """
        self._certificado = certificado

    @property
    def senha(self):
        """
        Gets the senha of this PushAPNSPersistValue.
        {{{push_a_p_n_s_persist_senha_value}}}

        :return: The senha of this PushAPNSPersistValue.
        :rtype: str
        """
        return self._senha

    @senha.setter
    def senha(self, senha):
        """
        Sets the senha of this PushAPNSPersistValue.
        {{{push_a_p_n_s_persist_senha_value}}}

        :param senha: The senha of this PushAPNSPersistValue.
        :type: str
        """
        self._senha = senha

    @property
    def titulo(self):
        """
        Gets the titulo of this PushAPNSPersistValue.
        {{{push_a_p_n_s_persist_titulo_value}}}

        :return: The titulo of this PushAPNSPersistValue.
        :rtype: str
        """
        return self._titulo

    @titulo.setter
    def titulo(self, titulo):
        """
        Sets the titulo of this PushAPNSPersistValue.
        {{{push_a_p_n_s_persist_titulo_value}}}

        :param titulo: The titulo of this PushAPNSPersistValue.
        :type: str
        """
        self._titulo = titulo

    @property
    def conteudo(self):
        """
        Gets the conteudo of this PushAPNSPersistValue.
        {{{push_a_p_n_s_persist_conteudo_value}}}

        :return: The conteudo of this PushAPNSPersistValue.
        :rtype: str
        """
        return self._conteudo

    @conteudo.setter
    def conteudo(self, conteudo):
        """
        Sets the conteudo of this PushAPNSPersistValue.
        {{{push_a_p_n_s_persist_conteudo_value}}}

        :param conteudo: The conteudo of this PushAPNSPersistValue.
        :type: str
        """
        self._conteudo = conteudo

    @property
    def tipo_evento(self):
        """
        Gets the tipo_evento of this PushAPNSPersistValue.
        {{{push_f_c_m_g_c_m_persist_tipo_evento_value}}}

        :return: The tipo_evento of this PushAPNSPersistValue.
        :rtype: str
        """
        return self._tipo_evento

    @tipo_evento.setter
    def tipo_evento(self, tipo_evento):
        """
        Sets the tipo_evento of this PushAPNSPersistValue.
        {{{push_f_c_m_g_c_m_persist_tipo_evento_value}}}

        :param tipo_evento: The tipo_evento of this PushAPNSPersistValue.
        :type: str
        """
        allowed_values = ["RISCO_FRAUDE", "CODIGO_SEGURANCA", "OUTROS", "OTP_3D_SECURE"]
        if tipo_evento not in allowed_values:
            raise ValueError(
                "Invalid value for `tipo_evento`, must be one of {0}"
                .format(allowed_values)
            )
        self._tipo_evento = tipo_evento

    @property
    def icone(self):
        """
        Gets the icone of this PushAPNSPersistValue.
        {{{push_f_c_m_g_c_m_persist_icone_value}}}

        :return: The icone of this PushAPNSPersistValue.
        :rtype: str
        """
        return self._icone

    @icone.setter
    def icone(self, icone):
        """
        Sets the icone of this PushAPNSPersistValue.
        {{{push_f_c_m_g_c_m_persist_icone_value}}}

        :param icone: The icone of this PushAPNSPersistValue.
        :type: str
        """
        self._icone = icone

    @property
    def som(self):
        """
        Gets the som of this PushAPNSPersistValue.
        {{{push_f_c_m_g_c_m_persist_som_value}}}

        :return: The som of this PushAPNSPersistValue.
        :rtype: str
        """
        return self._som

    @som.setter
    def som(self, som):
        """
        Sets the som of this PushAPNSPersistValue.
        {{{push_f_c_m_g_c_m_persist_som_value}}}

        :param som: The som of this PushAPNSPersistValue.
        :type: str
        """
        self._som = som

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

