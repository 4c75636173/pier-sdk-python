# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class ConfiguracaoEmailPersist(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        ConfiguracaoEmailPersist - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'host': 'str',
            'port': 'str',
            'port_tlsstarttls': 'str',
            'port_ssl': 'str',
            'protocolo': 'str',
            'requer_autenticacao': 'bool',
            'requer_ssl': 'bool',
            'requer_tls': 'bool',
            'usuario': 'str',
            'senha': 'str'
        }

        self.attribute_map = {
            'host': 'host',
            'port': 'port',
            'port_tlsstarttls': 'portTLSSTARTTLS',
            'port_ssl': 'portSSL',
            'protocolo': 'protocolo',
            'requer_autenticacao': 'requerAutenticacao',
            'requer_ssl': 'requerSSL',
            'requer_tls': 'requerTLS',
            'usuario': 'usuario',
            'senha': 'senha'
        }

        self._host = None
        self._port = None
        self._port_tlsstarttls = None
        self._port_ssl = None
        self._protocolo = None
        self._requer_autenticacao = None
        self._requer_ssl = None
        self._requer_tls = None
        self._usuario = None
        self._senha = None

    @property
    def host(self):
        """
        Gets the host of this ConfiguracaoEmailPersist.
        IP (Host) do servidor de e-mail.

        :return: The host of this ConfiguracaoEmailPersist.
        :rtype: str
        """
        return self._host

    @host.setter
    def host(self, host):
        """
        Sets the host of this ConfiguracaoEmailPersist.
        IP (Host) do servidor de e-mail.

        :param host: The host of this ConfiguracaoEmailPersist.
        :type: str
        """
        self._host = host

    @property
    def port(self):
        """
        Gets the port of this ConfiguracaoEmailPersist.
        Porta usada pelo servidor de e-mail.

        :return: The port of this ConfiguracaoEmailPersist.
        :rtype: str
        """
        return self._port

    @port.setter
    def port(self, port):
        """
        Sets the port of this ConfiguracaoEmailPersist.
        Porta usada pelo servidor de e-mail.

        :param port: The port of this ConfiguracaoEmailPersist.
        :type: str
        """
        self._port = port

    @property
    def port_tlsstarttls(self):
        """
        Gets the port_tlsstarttls of this ConfiguracaoEmailPersist.
        Porta usada pelo servi\u00C3\u00A7o TLS/STARTTLS.

        :return: The port_tlsstarttls of this ConfiguracaoEmailPersist.
        :rtype: str
        """
        return self._port_tlsstarttls

    @port_tlsstarttls.setter
    def port_tlsstarttls(self, port_tlsstarttls):
        """
        Sets the port_tlsstarttls of this ConfiguracaoEmailPersist.
        Porta usada pelo servi\u00C3\u00A7o TLS/STARTTLS.

        :param port_tlsstarttls: The port_tlsstarttls of this ConfiguracaoEmailPersist.
        :type: str
        """
        self._port_tlsstarttls = port_tlsstarttls

    @property
    def port_ssl(self):
        """
        Gets the port_ssl of this ConfiguracaoEmailPersist.
        Porta usada pelo servi\u00C3\u00A7o SSL.

        :return: The port_ssl of this ConfiguracaoEmailPersist.
        :rtype: str
        """
        return self._port_ssl

    @port_ssl.setter
    def port_ssl(self, port_ssl):
        """
        Sets the port_ssl of this ConfiguracaoEmailPersist.
        Porta usada pelo servi\u00C3\u00A7o SSL.

        :param port_ssl: The port_ssl of this ConfiguracaoEmailPersist.
        :type: str
        """
        self._port_ssl = port_ssl

    @property
    def protocolo(self):
        """
        Gets the protocolo of this ConfiguracaoEmailPersist.
        Protocolo de comunica\u00C3\u00A7\u00C3\u00A3o usado pelo servi\u00C3\u00A7o de e-mail.

        :return: The protocolo of this ConfiguracaoEmailPersist.
        :rtype: str
        """
        return self._protocolo

    @protocolo.setter
    def protocolo(self, protocolo):
        """
        Sets the protocolo of this ConfiguracaoEmailPersist.
        Protocolo de comunica\u00C3\u00A7\u00C3\u00A3o usado pelo servi\u00C3\u00A7o de e-mail.

        :param protocolo: The protocolo of this ConfiguracaoEmailPersist.
        :type: str
        """
        self._protocolo = protocolo

    @property
    def requer_autenticacao(self):
        """
        Gets the requer_autenticacao of this ConfiguracaoEmailPersist.
        O servi\u00C3\u00A7o de e-mail requer autentica\u00C3\u00A7\u00C3\u00A3o.

        :return: The requer_autenticacao of this ConfiguracaoEmailPersist.
        :rtype: bool
        """
        return self._requer_autenticacao

    @requer_autenticacao.setter
    def requer_autenticacao(self, requer_autenticacao):
        """
        Sets the requer_autenticacao of this ConfiguracaoEmailPersist.
        O servi\u00C3\u00A7o de e-mail requer autentica\u00C3\u00A7\u00C3\u00A3o.

        :param requer_autenticacao: The requer_autenticacao of this ConfiguracaoEmailPersist.
        :type: bool
        """
        self._requer_autenticacao = requer_autenticacao

    @property
    def requer_ssl(self):
        """
        Gets the requer_ssl of this ConfiguracaoEmailPersist.
        O servi\u00C3\u00A7o de e-mail requer SSL.

        :return: The requer_ssl of this ConfiguracaoEmailPersist.
        :rtype: bool
        """
        return self._requer_ssl

    @requer_ssl.setter
    def requer_ssl(self, requer_ssl):
        """
        Sets the requer_ssl of this ConfiguracaoEmailPersist.
        O servi\u00C3\u00A7o de e-mail requer SSL.

        :param requer_ssl: The requer_ssl of this ConfiguracaoEmailPersist.
        :type: bool
        """
        self._requer_ssl = requer_ssl

    @property
    def requer_tls(self):
        """
        Gets the requer_tls of this ConfiguracaoEmailPersist.
        O servi\u00C3\u00A7o de e-mail requer TLS.

        :return: The requer_tls of this ConfiguracaoEmailPersist.
        :rtype: bool
        """
        return self._requer_tls

    @requer_tls.setter
    def requer_tls(self, requer_tls):
        """
        Sets the requer_tls of this ConfiguracaoEmailPersist.
        O servi\u00C3\u00A7o de e-mail requer TLS.

        :param requer_tls: The requer_tls of this ConfiguracaoEmailPersist.
        :type: bool
        """
        self._requer_tls = requer_tls

    @property
    def usuario(self):
        """
        Gets the usuario of this ConfiguracaoEmailPersist.
        Usuario do servi\u00C3\u00A7o de e-mail.

        :return: The usuario of this ConfiguracaoEmailPersist.
        :rtype: str
        """
        return self._usuario

    @usuario.setter
    def usuario(self, usuario):
        """
        Sets the usuario of this ConfiguracaoEmailPersist.
        Usuario do servi\u00C3\u00A7o de e-mail.

        :param usuario: The usuario of this ConfiguracaoEmailPersist.
        :type: str
        """
        self._usuario = usuario

    @property
    def senha(self):
        """
        Gets the senha of this ConfiguracaoEmailPersist.
        Senha de usu\u00C3\u00A1rio do servi\u00C3\u00A7o de e-mail.

        :return: The senha of this ConfiguracaoEmailPersist.
        :rtype: str
        """
        return self._senha

    @senha.setter
    def senha(self, senha):
        """
        Sets the senha of this ConfiguracaoEmailPersist.
        Senha de usu\u00C3\u00A1rio do servi\u00C3\u00A7o de e-mail.

        :param senha: The senha of this ConfiguracaoEmailPersist.
        :type: str
        """
        self._senha = senha

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

