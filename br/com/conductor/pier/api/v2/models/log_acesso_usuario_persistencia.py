# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class LogAcessoUsuarioPersistencia(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        LogAcessoUsuarioPersistencia - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id_usuario': 'int',
            'login': 'str',
            'mensagem': 'str',
            'versao_app': 'str',
            'device': 'str',
            'senha_ok': 'int',
            'tentativas_incorretas': 'int',
            'id_plataforma': 'int',
            'status': 'str'
        }

        self.attribute_map = {
            'id_usuario': 'idUsuario',
            'login': 'login',
            'mensagem': 'mensagem',
            'versao_app': 'versaoAPP',
            'device': 'device',
            'senha_ok': 'senhaOK',
            'tentativas_incorretas': 'tentativasIncorretas',
            'id_plataforma': 'idPlataforma',
            'status': 'status'
        }

        self._id_usuario = None
        self._login = None
        self._mensagem = None
        self._versao_app = None
        self._device = None
        self._senha_ok = None
        self._tentativas_incorretas = None
        self._id_plataforma = None
        self._status = None

    @property
    def id_usuario(self):
        """
        Gets the id_usuario of this LogAcessoUsuarioPersistencia.
        {{{log_acesso_usuario_persistencia_id_usuario_descricao}}}

        :return: The id_usuario of this LogAcessoUsuarioPersistencia.
        :rtype: int
        """
        return self._id_usuario

    @id_usuario.setter
    def id_usuario(self, id_usuario):
        """
        Sets the id_usuario of this LogAcessoUsuarioPersistencia.
        {{{log_acesso_usuario_persistencia_id_usuario_descricao}}}

        :param id_usuario: The id_usuario of this LogAcessoUsuarioPersistencia.
        :type: int
        """
        self._id_usuario = id_usuario

    @property
    def login(self):
        """
        Gets the login of this LogAcessoUsuarioPersistencia.
        {{{log_acesso_usuario_persistencia_login_descricao}}}

        :return: The login of this LogAcessoUsuarioPersistencia.
        :rtype: str
        """
        return self._login

    @login.setter
    def login(self, login):
        """
        Sets the login of this LogAcessoUsuarioPersistencia.
        {{{log_acesso_usuario_persistencia_login_descricao}}}

        :param login: The login of this LogAcessoUsuarioPersistencia.
        :type: str
        """
        self._login = login

    @property
    def mensagem(self):
        """
        Gets the mensagem of this LogAcessoUsuarioPersistencia.
        {{{log_acesso_usuario_persistencia_message_descricao}}}

        :return: The mensagem of this LogAcessoUsuarioPersistencia.
        :rtype: str
        """
        return self._mensagem

    @mensagem.setter
    def mensagem(self, mensagem):
        """
        Sets the mensagem of this LogAcessoUsuarioPersistencia.
        {{{log_acesso_usuario_persistencia_message_descricao}}}

        :param mensagem: The mensagem of this LogAcessoUsuarioPersistencia.
        :type: str
        """
        self._mensagem = mensagem

    @property
    def versao_app(self):
        """
        Gets the versao_app of this LogAcessoUsuarioPersistencia.
        {{{log_acesso_usuario_persistencia_versao_app_descricao}}}

        :return: The versao_app of this LogAcessoUsuarioPersistencia.
        :rtype: str
        """
        return self._versao_app

    @versao_app.setter
    def versao_app(self, versao_app):
        """
        Sets the versao_app of this LogAcessoUsuarioPersistencia.
        {{{log_acesso_usuario_persistencia_versao_app_descricao}}}

        :param versao_app: The versao_app of this LogAcessoUsuarioPersistencia.
        :type: str
        """
        self._versao_app = versao_app

    @property
    def device(self):
        """
        Gets the device of this LogAcessoUsuarioPersistencia.
        {{{log_acesso_usuario_persistencia_versao_app_descricao}}}

        :return: The device of this LogAcessoUsuarioPersistencia.
        :rtype: str
        """
        return self._device

    @device.setter
    def device(self, device):
        """
        Sets the device of this LogAcessoUsuarioPersistencia.
        {{{log_acesso_usuario_persistencia_versao_app_descricao}}}

        :param device: The device of this LogAcessoUsuarioPersistencia.
        :type: str
        """
        self._device = device

    @property
    def senha_ok(self):
        """
        Gets the senha_ok of this LogAcessoUsuarioPersistencia.
        {{{log_acesso_usuario_persistencia_senha_ok_descricao}}}

        :return: The senha_ok of this LogAcessoUsuarioPersistencia.
        :rtype: int
        """
        return self._senha_ok

    @senha_ok.setter
    def senha_ok(self, senha_ok):
        """
        Sets the senha_ok of this LogAcessoUsuarioPersistencia.
        {{{log_acesso_usuario_persistencia_senha_ok_descricao}}}

        :param senha_ok: The senha_ok of this LogAcessoUsuarioPersistencia.
        :type: int
        """
        self._senha_ok = senha_ok

    @property
    def tentativas_incorretas(self):
        """
        Gets the tentativas_incorretas of this LogAcessoUsuarioPersistencia.
        {{{log_acesso_usuario_persistencia_tentativas_incorretas_descricao}}}

        :return: The tentativas_incorretas of this LogAcessoUsuarioPersistencia.
        :rtype: int
        """
        return self._tentativas_incorretas

    @tentativas_incorretas.setter
    def tentativas_incorretas(self, tentativas_incorretas):
        """
        Sets the tentativas_incorretas of this LogAcessoUsuarioPersistencia.
        {{{log_acesso_usuario_persistencia_tentativas_incorretas_descricao}}}

        :param tentativas_incorretas: The tentativas_incorretas of this LogAcessoUsuarioPersistencia.
        :type: int
        """
        self._tentativas_incorretas = tentativas_incorretas

    @property
    def id_plataforma(self):
        """
        Gets the id_plataforma of this LogAcessoUsuarioPersistencia.
        {{{log_acesso_usuario_persistencia_id_plataforma_descricao}}}

        :return: The id_plataforma of this LogAcessoUsuarioPersistencia.
        :rtype: int
        """
        return self._id_plataforma

    @id_plataforma.setter
    def id_plataforma(self, id_plataforma):
        """
        Sets the id_plataforma of this LogAcessoUsuarioPersistencia.
        {{{log_acesso_usuario_persistencia_id_plataforma_descricao}}}

        :param id_plataforma: The id_plataforma of this LogAcessoUsuarioPersistencia.
        :type: int
        """
        self._id_plataforma = id_plataforma

    @property
    def status(self):
        """
        Gets the status of this LogAcessoUsuarioPersistencia.
        {{{log_acesso_usuario_persistencia_status_log_acesso}}}

        :return: The status of this LogAcessoUsuarioPersistencia.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """
        Sets the status of this LogAcessoUsuarioPersistencia.
        {{{log_acesso_usuario_persistencia_status_log_acesso}}}

        :param status: The status of this LogAcessoUsuarioPersistencia.
        :type: str
        """
        allowed_values = ["SUCESSO", "SENHA_INVALIDA", "BLOQUEDO", "CADASTRADO", "SENHA_ALTERADO"]
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status`, must be one of {0}"
                .format(allowed_values)
            )
        self._status = status

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

