# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class DetalheOperacaoResponse(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        DetalheOperacaoResponse - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id_operacao': 'int',
            'codigo_processamento': 'str',
            'codigo_processamento_cancelamento': 'str',
            'nome_operacao': 'str',
            'descricao_operacao': 'str',
            'plano_minimo': 'int',
            'plano_maximo': 'int',
            'valor_minimo': 'float',
            'valor_maximo': 'float',
            'flag_cobra_juros': 'bool',
            'taxa_juros': 'float',
            'flag_cobra_tarifa': 'bool',
            'taxa_tarifa': 'float',
            'valor_tac': 'float',
            'percentual_tac': 'float',
            'valor_operacao': 'float',
            'carencia': 'int',
            'excedente_permitido': 'float',
            'flag_permitir_parcelamento': 'bool'
        }

        self.attribute_map = {
            'id_operacao': 'idOperacao',
            'codigo_processamento': 'codigoProcessamento',
            'codigo_processamento_cancelamento': 'codigoProcessamentoCancelamento',
            'nome_operacao': 'nomeOperacao',
            'descricao_operacao': 'descricaoOperacao',
            'plano_minimo': 'planoMinimo',
            'plano_maximo': 'planoMaximo',
            'valor_minimo': 'valorMinimo',
            'valor_maximo': 'valorMaximo',
            'flag_cobra_juros': 'flagCobraJuros',
            'taxa_juros': 'taxaJuros',
            'flag_cobra_tarifa': 'flagCobraTarifa',
            'taxa_tarifa': 'taxaTarifa',
            'valor_tac': 'valorTac',
            'percentual_tac': 'percentualTac',
            'valor_operacao': 'valorOperacao',
            'carencia': 'carencia',
            'excedente_permitido': 'excedentePermitido',
            'flag_permitir_parcelamento': 'flagPermitirParcelamento'
        }

        self._id_operacao = None
        self._codigo_processamento = None
        self._codigo_processamento_cancelamento = None
        self._nome_operacao = None
        self._descricao_operacao = None
        self._plano_minimo = None
        self._plano_maximo = None
        self._valor_minimo = None
        self._valor_maximo = None
        self._flag_cobra_juros = None
        self._taxa_juros = None
        self._flag_cobra_tarifa = None
        self._taxa_tarifa = None
        self._valor_tac = None
        self._percentual_tac = None
        self._valor_operacao = None
        self._carencia = None
        self._excedente_permitido = None
        self._flag_permitir_parcelamento = None

    @property
    def id_operacao(self):
        """
        Gets the id_operacao of this DetalheOperacaoResponse.
        C\u00C3\u00B3digo que identifica a opera\u00C3\u00A7\u00C3\u00A3o

        :return: The id_operacao of this DetalheOperacaoResponse.
        :rtype: int
        """
        return self._id_operacao

    @id_operacao.setter
    def id_operacao(self, id_operacao):
        """
        Sets the id_operacao of this DetalheOperacaoResponse.
        C\u00C3\u00B3digo que identifica a opera\u00C3\u00A7\u00C3\u00A3o

        :param id_operacao: The id_operacao of this DetalheOperacaoResponse.
        :type: int
        """
        self._id_operacao = id_operacao

    @property
    def codigo_processamento(self):
        """
        Gets the codigo_processamento of this DetalheOperacaoResponse.
        C\u00C3\u00B3digo de processamento usado em transa\u00C3\u00A7\u00C3\u00B5es com o autorizador

        :return: The codigo_processamento of this DetalheOperacaoResponse.
        :rtype: str
        """
        return self._codigo_processamento

    @codigo_processamento.setter
    def codigo_processamento(self, codigo_processamento):
        """
        Sets the codigo_processamento of this DetalheOperacaoResponse.
        C\u00C3\u00B3digo de processamento usado em transa\u00C3\u00A7\u00C3\u00B5es com o autorizador

        :param codigo_processamento: The codigo_processamento of this DetalheOperacaoResponse.
        :type: str
        """
        self._codigo_processamento = codigo_processamento

    @property
    def codigo_processamento_cancelamento(self):
        """
        Gets the codigo_processamento_cancelamento of this DetalheOperacaoResponse.
        C\u00C3\u00B3digo de processamento usado para cancelar transa\u00C3\u00A7\u00C3\u00B5es no autorizador

        :return: The codigo_processamento_cancelamento of this DetalheOperacaoResponse.
        :rtype: str
        """
        return self._codigo_processamento_cancelamento

    @codigo_processamento_cancelamento.setter
    def codigo_processamento_cancelamento(self, codigo_processamento_cancelamento):
        """
        Sets the codigo_processamento_cancelamento of this DetalheOperacaoResponse.
        C\u00C3\u00B3digo de processamento usado para cancelar transa\u00C3\u00A7\u00C3\u00B5es no autorizador

        :param codigo_processamento_cancelamento: The codigo_processamento_cancelamento of this DetalheOperacaoResponse.
        :type: str
        """
        self._codigo_processamento_cancelamento = codigo_processamento_cancelamento

    @property
    def nome_operacao(self):
        """
        Gets the nome_operacao of this DetalheOperacaoResponse.
        Nome da opera\u00C3\u00A7\u00C3\u00A3o

        :return: The nome_operacao of this DetalheOperacaoResponse.
        :rtype: str
        """
        return self._nome_operacao

    @nome_operacao.setter
    def nome_operacao(self, nome_operacao):
        """
        Sets the nome_operacao of this DetalheOperacaoResponse.
        Nome da opera\u00C3\u00A7\u00C3\u00A3o

        :param nome_operacao: The nome_operacao of this DetalheOperacaoResponse.
        :type: str
        """
        self._nome_operacao = nome_operacao

    @property
    def descricao_operacao(self):
        """
        Gets the descricao_operacao of this DetalheOperacaoResponse.
        Descri\u00C3\u00A7\u00C3\u00A3o da opera\u00C3\u00A7\u00C3\u00A3o

        :return: The descricao_operacao of this DetalheOperacaoResponse.
        :rtype: str
        """
        return self._descricao_operacao

    @descricao_operacao.setter
    def descricao_operacao(self, descricao_operacao):
        """
        Sets the descricao_operacao of this DetalheOperacaoResponse.
        Descri\u00C3\u00A7\u00C3\u00A3o da opera\u00C3\u00A7\u00C3\u00A3o

        :param descricao_operacao: The descricao_operacao of this DetalheOperacaoResponse.
        :type: str
        """
        self._descricao_operacao = descricao_operacao

    @property
    def plano_minimo(self):
        """
        Gets the plano_minimo of this DetalheOperacaoResponse.
        Quantidade m\u00C3\u00ADnima de meses permitido para opera\u00C3\u00A7\u00C3\u00A3o

        :return: The plano_minimo of this DetalheOperacaoResponse.
        :rtype: int
        """
        return self._plano_minimo

    @plano_minimo.setter
    def plano_minimo(self, plano_minimo):
        """
        Sets the plano_minimo of this DetalheOperacaoResponse.
        Quantidade m\u00C3\u00ADnima de meses permitido para opera\u00C3\u00A7\u00C3\u00A3o

        :param plano_minimo: The plano_minimo of this DetalheOperacaoResponse.
        :type: int
        """
        self._plano_minimo = plano_minimo

    @property
    def plano_maximo(self):
        """
        Gets the plano_maximo of this DetalheOperacaoResponse.
        Quantidade M\u00C3\u00A1ximo de meses permitido para opera\u00C3\u00A7\u00C3\u00A3o

        :return: The plano_maximo of this DetalheOperacaoResponse.
        :rtype: int
        """
        return self._plano_maximo

    @plano_maximo.setter
    def plano_maximo(self, plano_maximo):
        """
        Sets the plano_maximo of this DetalheOperacaoResponse.
        Quantidade M\u00C3\u00A1ximo de meses permitido para opera\u00C3\u00A7\u00C3\u00A3o

        :param plano_maximo: The plano_maximo of this DetalheOperacaoResponse.
        :type: int
        """
        self._plano_maximo = plano_maximo

    @property
    def valor_minimo(self):
        """
        Gets the valor_minimo of this DetalheOperacaoResponse.
         Valor m\u00C3\u00ADnimo permitido permitido para opera\u00C3\u00A7\u00C3\u00A3o

        :return: The valor_minimo of this DetalheOperacaoResponse.
        :rtype: float
        """
        return self._valor_minimo

    @valor_minimo.setter
    def valor_minimo(self, valor_minimo):
        """
        Sets the valor_minimo of this DetalheOperacaoResponse.
         Valor m\u00C3\u00ADnimo permitido permitido para opera\u00C3\u00A7\u00C3\u00A3o

        :param valor_minimo: The valor_minimo of this DetalheOperacaoResponse.
        :type: float
        """
        self._valor_minimo = valor_minimo

    @property
    def valor_maximo(self):
        """
        Gets the valor_maximo of this DetalheOperacaoResponse.
         Valor m\u00C3\u00A1ximo permitido permitido para opera\u00C3\u00A7\u00C3\u00A3o

        :return: The valor_maximo of this DetalheOperacaoResponse.
        :rtype: float
        """
        return self._valor_maximo

    @valor_maximo.setter
    def valor_maximo(self, valor_maximo):
        """
        Sets the valor_maximo of this DetalheOperacaoResponse.
         Valor m\u00C3\u00A1ximo permitido permitido para opera\u00C3\u00A7\u00C3\u00A3o

        :param valor_maximo: The valor_maximo of this DetalheOperacaoResponse.
        :type: float
        """
        self._valor_maximo = valor_maximo

    @property
    def flag_cobra_juros(self):
        """
        Gets the flag_cobra_juros of this DetalheOperacaoResponse.
        Flag indicativa para crobran\u00C3\u00A7a de juros

        :return: The flag_cobra_juros of this DetalheOperacaoResponse.
        :rtype: bool
        """
        return self._flag_cobra_juros

    @flag_cobra_juros.setter
    def flag_cobra_juros(self, flag_cobra_juros):
        """
        Sets the flag_cobra_juros of this DetalheOperacaoResponse.
        Flag indicativa para crobran\u00C3\u00A7a de juros

        :param flag_cobra_juros: The flag_cobra_juros of this DetalheOperacaoResponse.
        :type: bool
        """
        self._flag_cobra_juros = flag_cobra_juros

    @property
    def taxa_juros(self):
        """
        Gets the taxa_juros of this DetalheOperacaoResponse.
        Valor do juros a ser cobrado, caso opera\u00C3\u00A7\u00C3\u00A3o cobre juros

        :return: The taxa_juros of this DetalheOperacaoResponse.
        :rtype: float
        """
        return self._taxa_juros

    @taxa_juros.setter
    def taxa_juros(self, taxa_juros):
        """
        Sets the taxa_juros of this DetalheOperacaoResponse.
        Valor do juros a ser cobrado, caso opera\u00C3\u00A7\u00C3\u00A3o cobre juros

        :param taxa_juros: The taxa_juros of this DetalheOperacaoResponse.
        :type: float
        """
        self._taxa_juros = taxa_juros

    @property
    def flag_cobra_tarifa(self):
        """
        Gets the flag_cobra_tarifa of this DetalheOperacaoResponse.
        Flag indicativa para crobran\u00C3\u00A7a de tarifas

        :return: The flag_cobra_tarifa of this DetalheOperacaoResponse.
        :rtype: bool
        """
        return self._flag_cobra_tarifa

    @flag_cobra_tarifa.setter
    def flag_cobra_tarifa(self, flag_cobra_tarifa):
        """
        Sets the flag_cobra_tarifa of this DetalheOperacaoResponse.
        Flag indicativa para crobran\u00C3\u00A7a de tarifas

        :param flag_cobra_tarifa: The flag_cobra_tarifa of this DetalheOperacaoResponse.
        :type: bool
        """
        self._flag_cobra_tarifa = flag_cobra_tarifa

    @property
    def taxa_tarifa(self):
        """
        Gets the taxa_tarifa of this DetalheOperacaoResponse.
        Valor da tarifa a ser cobrado, caso opera\u00C3\u00A7\u00C3\u00A3o cobre tarifas

        :return: The taxa_tarifa of this DetalheOperacaoResponse.
        :rtype: float
        """
        return self._taxa_tarifa

    @taxa_tarifa.setter
    def taxa_tarifa(self, taxa_tarifa):
        """
        Sets the taxa_tarifa of this DetalheOperacaoResponse.
        Valor da tarifa a ser cobrado, caso opera\u00C3\u00A7\u00C3\u00A3o cobre tarifas

        :param taxa_tarifa: The taxa_tarifa of this DetalheOperacaoResponse.
        :type: float
        """
        self._taxa_tarifa = taxa_tarifa

    @property
    def valor_tac(self):
        """
        Gets the valor_tac of this DetalheOperacaoResponse.
        Valor da taxa de abertura de conta

        :return: The valor_tac of this DetalheOperacaoResponse.
        :rtype: float
        """
        return self._valor_tac

    @valor_tac.setter
    def valor_tac(self, valor_tac):
        """
        Sets the valor_tac of this DetalheOperacaoResponse.
        Valor da taxa de abertura de conta

        :param valor_tac: The valor_tac of this DetalheOperacaoResponse.
        :type: float
        """
        self._valor_tac = valor_tac

    @property
    def percentual_tac(self):
        """
        Gets the percentual_tac of this DetalheOperacaoResponse.
        Percentual da taxa de abertura de conta

        :return: The percentual_tac of this DetalheOperacaoResponse.
        :rtype: float
        """
        return self._percentual_tac

    @percentual_tac.setter
    def percentual_tac(self, percentual_tac):
        """
        Sets the percentual_tac of this DetalheOperacaoResponse.
        Percentual da taxa de abertura de conta

        :param percentual_tac: The percentual_tac of this DetalheOperacaoResponse.
        :type: float
        """
        self._percentual_tac = percentual_tac

    @property
    def valor_operacao(self):
        """
        Gets the valor_operacao of this DetalheOperacaoResponse.
        Valor da opera\u00C3\u00A7\u00C3\u00A3o

        :return: The valor_operacao of this DetalheOperacaoResponse.
        :rtype: float
        """
        return self._valor_operacao

    @valor_operacao.setter
    def valor_operacao(self, valor_operacao):
        """
        Sets the valor_operacao of this DetalheOperacaoResponse.
        Valor da opera\u00C3\u00A7\u00C3\u00A3o

        :param valor_operacao: The valor_operacao of this DetalheOperacaoResponse.
        :type: float
        """
        self._valor_operacao = valor_operacao

    @property
    def carencia(self):
        """
        Gets the carencia of this DetalheOperacaoResponse.
        Quantidade de meses para car\u00C3\u00AAncia

        :return: The carencia of this DetalheOperacaoResponse.
        :rtype: int
        """
        return self._carencia

    @carencia.setter
    def carencia(self, carencia):
        """
        Sets the carencia of this DetalheOperacaoResponse.
        Quantidade de meses para car\u00C3\u00AAncia

        :param carencia: The carencia of this DetalheOperacaoResponse.
        :type: int
        """
        self._carencia = carencia

    @property
    def excedente_permitido(self):
        """
        Gets the excedente_permitido of this DetalheOperacaoResponse.
        Valor excedente permitido para opera\u00C3\u00A7\u00C3\u00A3o

        :return: The excedente_permitido of this DetalheOperacaoResponse.
        :rtype: float
        """
        return self._excedente_permitido

    @excedente_permitido.setter
    def excedente_permitido(self, excedente_permitido):
        """
        Sets the excedente_permitido of this DetalheOperacaoResponse.
        Valor excedente permitido para opera\u00C3\u00A7\u00C3\u00A3o

        :param excedente_permitido: The excedente_permitido of this DetalheOperacaoResponse.
        :type: float
        """
        self._excedente_permitido = excedente_permitido

    @property
    def flag_permitir_parcelamento(self):
        """
        Gets the flag_permitir_parcelamento of this DetalheOperacaoResponse.
        Permitir transa\u00C3\u00A7\u00C3\u00B5es parceladas

        :return: The flag_permitir_parcelamento of this DetalheOperacaoResponse.
        :rtype: bool
        """
        return self._flag_permitir_parcelamento

    @flag_permitir_parcelamento.setter
    def flag_permitir_parcelamento(self, flag_permitir_parcelamento):
        """
        Sets the flag_permitir_parcelamento of this DetalheOperacaoResponse.
        Permitir transa\u00C3\u00A7\u00C3\u00B5es parceladas

        :param flag_permitir_parcelamento: The flag_permitir_parcelamento of this DetalheOperacaoResponse.
        :type: bool
        """
        self._flag_permitir_parcelamento = flag_permitir_parcelamento

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

