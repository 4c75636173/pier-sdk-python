# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class PessoaDetalheResponse(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        PessoaDetalheResponse - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id_pessoa': 'int',
            'nome_mae': 'str',
            'id_estado_civil': 'int',
            'id_profissao': 'str',
            'id_natureza_ocupacao': 'int',
            'id_nacionalidade': 'int',
            'numero_agencia': 'int',
            'numero_conta_corrente': 'str',
            'email': 'str',
            'nome_empresa': 'str'
        }

        self.attribute_map = {
            'id_pessoa': 'idPessoa',
            'nome_mae': 'nomeMae',
            'id_estado_civil': 'idEstadoCivil',
            'id_profissao': 'idProfissao',
            'id_natureza_ocupacao': 'idNaturezaOcupacao',
            'id_nacionalidade': 'idNacionalidade',
            'numero_agencia': 'numeroAgencia',
            'numero_conta_corrente': 'numeroContaCorrente',
            'email': 'email',
            'nome_empresa': 'nomeEmpresa'
        }

        self._id_pessoa = None
        self._nome_mae = None
        self._id_estado_civil = None
        self._id_profissao = None
        self._id_natureza_ocupacao = None
        self._id_nacionalidade = None
        self._numero_agencia = None
        self._numero_conta_corrente = None
        self._email = None
        self._nome_empresa = None

    @property
    def id_pessoa(self):
        """
        Gets the id_pessoa of this PessoaDetalheResponse.
        C\u00C3\u00B3digo identificador da pessoa

        :return: The id_pessoa of this PessoaDetalheResponse.
        :rtype: int
        """
        return self._id_pessoa

    @id_pessoa.setter
    def id_pessoa(self, id_pessoa):
        """
        Sets the id_pessoa of this PessoaDetalheResponse.
        C\u00C3\u00B3digo identificador da pessoa

        :param id_pessoa: The id_pessoa of this PessoaDetalheResponse.
        :type: int
        """
        self._id_pessoa = id_pessoa

    @property
    def nome_mae(self):
        """
        Gets the nome_mae of this PessoaDetalheResponse.
        Apresenta o nome da m\u00C3\u00A3e da pessoa fisica

        :return: The nome_mae of this PessoaDetalheResponse.
        :rtype: str
        """
        return self._nome_mae

    @nome_mae.setter
    def nome_mae(self, nome_mae):
        """
        Sets the nome_mae of this PessoaDetalheResponse.
        Apresenta o nome da m\u00C3\u00A3e da pessoa fisica

        :param nome_mae: The nome_mae of this PessoaDetalheResponse.
        :type: str
        """
        self._nome_mae = nome_mae

    @property
    def id_estado_civil(self):
        """
        Gets the id_estado_civil of this PessoaDetalheResponse.
        Id Estado civil da pessoa fisica

        :return: The id_estado_civil of this PessoaDetalheResponse.
        :rtype: int
        """
        return self._id_estado_civil

    @id_estado_civil.setter
    def id_estado_civil(self, id_estado_civil):
        """
        Sets the id_estado_civil of this PessoaDetalheResponse.
        Id Estado civil da pessoa fisica

        :param id_estado_civil: The id_estado_civil of this PessoaDetalheResponse.
        :type: int
        """
        self._id_estado_civil = id_estado_civil

    @property
    def id_profissao(self):
        """
        Gets the id_profissao of this PessoaDetalheResponse.
        Profiss\u00C3\u00A3o da pessoa fisica

        :return: The id_profissao of this PessoaDetalheResponse.
        :rtype: str
        """
        return self._id_profissao

    @id_profissao.setter
    def id_profissao(self, id_profissao):
        """
        Sets the id_profissao of this PessoaDetalheResponse.
        Profiss\u00C3\u00A3o da pessoa fisica

        :param id_profissao: The id_profissao of this PessoaDetalheResponse.
        :type: str
        """
        self._id_profissao = id_profissao

    @property
    def id_natureza_ocupacao(self):
        """
        Gets the id_natureza_ocupacao of this PessoaDetalheResponse.
        Id Natureza Ocupa\u00C3\u00A7\u00C3\u00A3o da pessoa fisica

        :return: The id_natureza_ocupacao of this PessoaDetalheResponse.
        :rtype: int
        """
        return self._id_natureza_ocupacao

    @id_natureza_ocupacao.setter
    def id_natureza_ocupacao(self, id_natureza_ocupacao):
        """
        Sets the id_natureza_ocupacao of this PessoaDetalheResponse.
        Id Natureza Ocupa\u00C3\u00A7\u00C3\u00A3o da pessoa fisica

        :param id_natureza_ocupacao: The id_natureza_ocupacao of this PessoaDetalheResponse.
        :type: int
        """
        self._id_natureza_ocupacao = id_natureza_ocupacao

    @property
    def id_nacionalidade(self):
        """
        Gets the id_nacionalidade of this PessoaDetalheResponse.
        Id Nacionalidade da pessoa fisica

        :return: The id_nacionalidade of this PessoaDetalheResponse.
        :rtype: int
        """
        return self._id_nacionalidade

    @id_nacionalidade.setter
    def id_nacionalidade(self, id_nacionalidade):
        """
        Sets the id_nacionalidade of this PessoaDetalheResponse.
        Id Nacionalidade da pessoa fisica

        :param id_nacionalidade: The id_nacionalidade of this PessoaDetalheResponse.
        :type: int
        """
        self._id_nacionalidade = id_nacionalidade

    @property
    def numero_agencia(self):
        """
        Gets the numero_agencia of this PessoaDetalheResponse.
        N\u00C3\u00BAmero da ag\u00C3\u00AAncia.

        :return: The numero_agencia of this PessoaDetalheResponse.
        :rtype: int
        """
        return self._numero_agencia

    @numero_agencia.setter
    def numero_agencia(self, numero_agencia):
        """
        Sets the numero_agencia of this PessoaDetalheResponse.
        N\u00C3\u00BAmero da ag\u00C3\u00AAncia.

        :param numero_agencia: The numero_agencia of this PessoaDetalheResponse.
        :type: int
        """
        self._numero_agencia = numero_agencia

    @property
    def numero_conta_corrente(self):
        """
        Gets the numero_conta_corrente of this PessoaDetalheResponse.
        N\u00C3\u00BAmero da conta corrente.

        :return: The numero_conta_corrente of this PessoaDetalheResponse.
        :rtype: str
        """
        return self._numero_conta_corrente

    @numero_conta_corrente.setter
    def numero_conta_corrente(self, numero_conta_corrente):
        """
        Sets the numero_conta_corrente of this PessoaDetalheResponse.
        N\u00C3\u00BAmero da conta corrente.

        :param numero_conta_corrente: The numero_conta_corrente of this PessoaDetalheResponse.
        :type: str
        """
        self._numero_conta_corrente = numero_conta_corrente

    @property
    def email(self):
        """
        Gets the email of this PessoaDetalheResponse.
        Email da pessoa fisica

        :return: The email of this PessoaDetalheResponse.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """
        Sets the email of this PessoaDetalheResponse.
        Email da pessoa fisica

        :param email: The email of this PessoaDetalheResponse.
        :type: str
        """
        self._email = email

    @property
    def nome_empresa(self):
        """
        Gets the nome_empresa of this PessoaDetalheResponse.
        Nome que deve ser impresso no cart\u00C3\u00A3o

        :return: The nome_empresa of this PessoaDetalheResponse.
        :rtype: str
        """
        return self._nome_empresa

    @nome_empresa.setter
    def nome_empresa(self, nome_empresa):
        """
        Sets the nome_empresa of this PessoaDetalheResponse.
        Nome que deve ser impresso no cart\u00C3\u00A3o

        :param nome_empresa: The nome_empresa of this PessoaDetalheResponse.
        :type: str
        """
        self._nome_empresa = nome_empresa

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

