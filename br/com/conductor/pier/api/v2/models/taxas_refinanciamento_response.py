# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class TaxasRefinanciamentoResponse(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        TaxasRefinanciamentoResponse - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'int',
            'id_conta': 'int',
            'id_produto': 'int',
            'id_plano_conta': 'int',
            'id_plano_pct': 'int',
            'id_plano_credito_taxa': 'int',
            'data_entrada': 'str',
            'vencimento': 'str',
            'recuperacao_encargos_financeiros': 'float',
            'comissao_garantia': 'float',
            'agenciamento': 'float',
            'taxa_maxima_proximo_periodo': 'float',
            'taxa_encargos_financiamento': 'float',
            'taxa_maxima_saque': 'float',
            'taxa_saque': 'float',
            'taxa_maxima_compra_juros': 'float',
            'taxa_compra_juros': 'float',
            'taxa_permanencia': 'float',
            'taxa_refinanciamento': 'float',
            'taxa_recuperacao_refinanciamento': 'float',
            'taxa_perc_calc_pagamento_minimo': 'float',
            'plano_taxa_default': 'int'
        }

        self.attribute_map = {
            'id': 'id',
            'id_conta': 'idConta',
            'id_produto': 'idProduto',
            'id_plano_conta': 'idPlanoConta',
            'id_plano_pct': 'idPlanoPct',
            'id_plano_credito_taxa': 'idPlanoCreditoTaxa',
            'data_entrada': 'dataEntrada',
            'vencimento': 'vencimento',
            'recuperacao_encargos_financeiros': 'recuperacaoEncargosFinanceiros',
            'comissao_garantia': 'comissaoGarantia',
            'agenciamento': 'agenciamento',
            'taxa_maxima_proximo_periodo': 'taxaMaximaProximoPeriodo',
            'taxa_encargos_financiamento': 'taxaEncargosFinanciamento',
            'taxa_maxima_saque': 'taxaMaximaSaque',
            'taxa_saque': 'taxaSaque',
            'taxa_maxima_compra_juros': 'taxaMaximaCompraJuros',
            'taxa_compra_juros': 'taxaCompraJuros',
            'taxa_permanencia': 'taxaPermanencia',
            'taxa_refinanciamento': 'taxaRefinanciamento',
            'taxa_recuperacao_refinanciamento': 'taxaRecuperacaoRefinanciamento',
            'taxa_perc_calc_pagamento_minimo': 'taxaPercCalcPagamentoMinimo',
            'plano_taxa_default': 'planoTaxaDefault'
        }

        self._id = None
        self._id_conta = None
        self._id_produto = None
        self._id_plano_conta = None
        self._id_plano_pct = None
        self._id_plano_credito_taxa = None
        self._data_entrada = None
        self._vencimento = None
        self._recuperacao_encargos_financeiros = None
        self._comissao_garantia = None
        self._agenciamento = None
        self._taxa_maxima_proximo_periodo = None
        self._taxa_encargos_financiamento = None
        self._taxa_maxima_saque = None
        self._taxa_saque = None
        self._taxa_maxima_compra_juros = None
        self._taxa_compra_juros = None
        self._taxa_permanencia = None
        self._taxa_refinanciamento = None
        self._taxa_recuperacao_refinanciamento = None
        self._taxa_perc_calc_pagamento_minimo = None
        self._plano_taxa_default = None

    @property
    def id(self):
        """
        Gets the id of this TaxasRefinanciamentoResponse.
        ID das taxas

        :return: The id of this TaxasRefinanciamentoResponse.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this TaxasRefinanciamentoResponse.
        ID das taxas

        :param id: The id of this TaxasRefinanciamentoResponse.
        :type: int
        """
        self._id = id

    @property
    def id_conta(self):
        """
        Gets the id_conta of this TaxasRefinanciamentoResponse.
        ID da conta

        :return: The id_conta of this TaxasRefinanciamentoResponse.
        :rtype: int
        """
        return self._id_conta

    @id_conta.setter
    def id_conta(self, id_conta):
        """
        Sets the id_conta of this TaxasRefinanciamentoResponse.
        ID da conta

        :param id_conta: The id_conta of this TaxasRefinanciamentoResponse.
        :type: int
        """
        self._id_conta = id_conta

    @property
    def id_produto(self):
        """
        Gets the id_produto of this TaxasRefinanciamentoResponse.
        ID do produto

        :return: The id_produto of this TaxasRefinanciamentoResponse.
        :rtype: int
        """
        return self._id_produto

    @id_produto.setter
    def id_produto(self, id_produto):
        """
        Sets the id_produto of this TaxasRefinanciamentoResponse.
        ID do produto

        :param id_produto: The id_produto of this TaxasRefinanciamentoResponse.
        :type: int
        """
        self._id_produto = id_produto

    @property
    def id_plano_conta(self):
        """
        Gets the id_plano_conta of this TaxasRefinanciamentoResponse.
        ID do plano de contas

        :return: The id_plano_conta of this TaxasRefinanciamentoResponse.
        :rtype: int
        """
        return self._id_plano_conta

    @id_plano_conta.setter
    def id_plano_conta(self, id_plano_conta):
        """
        Sets the id_plano_conta of this TaxasRefinanciamentoResponse.
        ID do plano de contas

        :param id_plano_conta: The id_plano_conta of this TaxasRefinanciamentoResponse.
        :type: int
        """
        self._id_plano_conta = id_plano_conta

    @property
    def id_plano_pct(self):
        """
        Gets the id_plano_pct of this TaxasRefinanciamentoResponse.
        ID do plano PCT

        :return: The id_plano_pct of this TaxasRefinanciamentoResponse.
        :rtype: int
        """
        return self._id_plano_pct

    @id_plano_pct.setter
    def id_plano_pct(self, id_plano_pct):
        """
        Sets the id_plano_pct of this TaxasRefinanciamentoResponse.
        ID do plano PCT

        :param id_plano_pct: The id_plano_pct of this TaxasRefinanciamentoResponse.
        :type: int
        """
        self._id_plano_pct = id_plano_pct

    @property
    def id_plano_credito_taxa(self):
        """
        Gets the id_plano_credito_taxa of this TaxasRefinanciamentoResponse.
        ID do plano credito taxa

        :return: The id_plano_credito_taxa of this TaxasRefinanciamentoResponse.
        :rtype: int
        """
        return self._id_plano_credito_taxa

    @id_plano_credito_taxa.setter
    def id_plano_credito_taxa(self, id_plano_credito_taxa):
        """
        Sets the id_plano_credito_taxa of this TaxasRefinanciamentoResponse.
        ID do plano credito taxa

        :param id_plano_credito_taxa: The id_plano_credito_taxa of this TaxasRefinanciamentoResponse.
        :type: int
        """
        self._id_plano_credito_taxa = id_plano_credito_taxa

    @property
    def data_entrada(self):
        """
        Gets the data_entrada of this TaxasRefinanciamentoResponse.
        Data de entrada

        :return: The data_entrada of this TaxasRefinanciamentoResponse.
        :rtype: str
        """
        return self._data_entrada

    @data_entrada.setter
    def data_entrada(self, data_entrada):
        """
        Sets the data_entrada of this TaxasRefinanciamentoResponse.
        Data de entrada

        :param data_entrada: The data_entrada of this TaxasRefinanciamentoResponse.
        :type: str
        """
        self._data_entrada = data_entrada

    @property
    def vencimento(self):
        """
        Gets the vencimento of this TaxasRefinanciamentoResponse.
        Vencimento das taxas

        :return: The vencimento of this TaxasRefinanciamentoResponse.
        :rtype: str
        """
        return self._vencimento

    @vencimento.setter
    def vencimento(self, vencimento):
        """
        Sets the vencimento of this TaxasRefinanciamentoResponse.
        Vencimento das taxas

        :param vencimento: The vencimento of this TaxasRefinanciamentoResponse.
        :type: str
        """
        self._vencimento = vencimento

    @property
    def recuperacao_encargos_financeiros(self):
        """
        Gets the recuperacao_encargos_financeiros of this TaxasRefinanciamentoResponse.
        Recupera\u00C3\u00A7\u00C3\u00A3o de encargos financeiro

        :return: The recuperacao_encargos_financeiros of this TaxasRefinanciamentoResponse.
        :rtype: float
        """
        return self._recuperacao_encargos_financeiros

    @recuperacao_encargos_financeiros.setter
    def recuperacao_encargos_financeiros(self, recuperacao_encargos_financeiros):
        """
        Sets the recuperacao_encargos_financeiros of this TaxasRefinanciamentoResponse.
        Recupera\u00C3\u00A7\u00C3\u00A3o de encargos financeiro

        :param recuperacao_encargos_financeiros: The recuperacao_encargos_financeiros of this TaxasRefinanciamentoResponse.
        :type: float
        """
        self._recuperacao_encargos_financeiros = recuperacao_encargos_financeiros

    @property
    def comissao_garantia(self):
        """
        Gets the comissao_garantia of this TaxasRefinanciamentoResponse.
        Descri\u00C3\u00A7\u00C3\u00A3o da comiss\u00C3\u00A3o de garantia

        :return: The comissao_garantia of this TaxasRefinanciamentoResponse.
        :rtype: float
        """
        return self._comissao_garantia

    @comissao_garantia.setter
    def comissao_garantia(self, comissao_garantia):
        """
        Sets the comissao_garantia of this TaxasRefinanciamentoResponse.
        Descri\u00C3\u00A7\u00C3\u00A3o da comiss\u00C3\u00A3o de garantia

        :param comissao_garantia: The comissao_garantia of this TaxasRefinanciamentoResponse.
        :type: float
        """
        self._comissao_garantia = comissao_garantia

    @property
    def agenciamento(self):
        """
        Gets the agenciamento of this TaxasRefinanciamentoResponse.
        Descri\u00C3\u00A7\u00C3\u00A3o do agenciamento

        :return: The agenciamento of this TaxasRefinanciamentoResponse.
        :rtype: float
        """
        return self._agenciamento

    @agenciamento.setter
    def agenciamento(self, agenciamento):
        """
        Sets the agenciamento of this TaxasRefinanciamentoResponse.
        Descri\u00C3\u00A7\u00C3\u00A3o do agenciamento

        :param agenciamento: The agenciamento of this TaxasRefinanciamentoResponse.
        :type: float
        """
        self._agenciamento = agenciamento

    @property
    def taxa_maxima_proximo_periodo(self):
        """
        Gets the taxa_maxima_proximo_periodo of this TaxasRefinanciamentoResponse.
        Taxa m\u00C3\u00A1xima do proximo per\u00C3\u00ADodo

        :return: The taxa_maxima_proximo_periodo of this TaxasRefinanciamentoResponse.
        :rtype: float
        """
        return self._taxa_maxima_proximo_periodo

    @taxa_maxima_proximo_periodo.setter
    def taxa_maxima_proximo_periodo(self, taxa_maxima_proximo_periodo):
        """
        Sets the taxa_maxima_proximo_periodo of this TaxasRefinanciamentoResponse.
        Taxa m\u00C3\u00A1xima do proximo per\u00C3\u00ADodo

        :param taxa_maxima_proximo_periodo: The taxa_maxima_proximo_periodo of this TaxasRefinanciamentoResponse.
        :type: float
        """
        self._taxa_maxima_proximo_periodo = taxa_maxima_proximo_periodo

    @property
    def taxa_encargos_financiamento(self):
        """
        Gets the taxa_encargos_financiamento of this TaxasRefinanciamentoResponse.
        Taxa de encargos do financiamento

        :return: The taxa_encargos_financiamento of this TaxasRefinanciamentoResponse.
        :rtype: float
        """
        return self._taxa_encargos_financiamento

    @taxa_encargos_financiamento.setter
    def taxa_encargos_financiamento(self, taxa_encargos_financiamento):
        """
        Sets the taxa_encargos_financiamento of this TaxasRefinanciamentoResponse.
        Taxa de encargos do financiamento

        :param taxa_encargos_financiamento: The taxa_encargos_financiamento of this TaxasRefinanciamentoResponse.
        :type: float
        """
        self._taxa_encargos_financiamento = taxa_encargos_financiamento

    @property
    def taxa_maxima_saque(self):
        """
        Gets the taxa_maxima_saque of this TaxasRefinanciamentoResponse.
        Taxa m\u00C3\u00A1xima de saque

        :return: The taxa_maxima_saque of this TaxasRefinanciamentoResponse.
        :rtype: float
        """
        return self._taxa_maxima_saque

    @taxa_maxima_saque.setter
    def taxa_maxima_saque(self, taxa_maxima_saque):
        """
        Sets the taxa_maxima_saque of this TaxasRefinanciamentoResponse.
        Taxa m\u00C3\u00A1xima de saque

        :param taxa_maxima_saque: The taxa_maxima_saque of this TaxasRefinanciamentoResponse.
        :type: float
        """
        self._taxa_maxima_saque = taxa_maxima_saque

    @property
    def taxa_saque(self):
        """
        Gets the taxa_saque of this TaxasRefinanciamentoResponse.
        Taxa de saque

        :return: The taxa_saque of this TaxasRefinanciamentoResponse.
        :rtype: float
        """
        return self._taxa_saque

    @taxa_saque.setter
    def taxa_saque(self, taxa_saque):
        """
        Sets the taxa_saque of this TaxasRefinanciamentoResponse.
        Taxa de saque

        :param taxa_saque: The taxa_saque of this TaxasRefinanciamentoResponse.
        :type: float
        """
        self._taxa_saque = taxa_saque

    @property
    def taxa_maxima_compra_juros(self):
        """
        Gets the taxa_maxima_compra_juros of this TaxasRefinanciamentoResponse.
        Taxa m\u00C3\u00A1xima de compras juros

        :return: The taxa_maxima_compra_juros of this TaxasRefinanciamentoResponse.
        :rtype: float
        """
        return self._taxa_maxima_compra_juros

    @taxa_maxima_compra_juros.setter
    def taxa_maxima_compra_juros(self, taxa_maxima_compra_juros):
        """
        Sets the taxa_maxima_compra_juros of this TaxasRefinanciamentoResponse.
        Taxa m\u00C3\u00A1xima de compras juros

        :param taxa_maxima_compra_juros: The taxa_maxima_compra_juros of this TaxasRefinanciamentoResponse.
        :type: float
        """
        self._taxa_maxima_compra_juros = taxa_maxima_compra_juros

    @property
    def taxa_compra_juros(self):
        """
        Gets the taxa_compra_juros of this TaxasRefinanciamentoResponse.
        Taxa de juros compra

        :return: The taxa_compra_juros of this TaxasRefinanciamentoResponse.
        :rtype: float
        """
        return self._taxa_compra_juros

    @taxa_compra_juros.setter
    def taxa_compra_juros(self, taxa_compra_juros):
        """
        Sets the taxa_compra_juros of this TaxasRefinanciamentoResponse.
        Taxa de juros compra

        :param taxa_compra_juros: The taxa_compra_juros of this TaxasRefinanciamentoResponse.
        :type: float
        """
        self._taxa_compra_juros = taxa_compra_juros

    @property
    def taxa_permanencia(self):
        """
        Gets the taxa_permanencia of this TaxasRefinanciamentoResponse.
        Taxa de permanencia

        :return: The taxa_permanencia of this TaxasRefinanciamentoResponse.
        :rtype: float
        """
        return self._taxa_permanencia

    @taxa_permanencia.setter
    def taxa_permanencia(self, taxa_permanencia):
        """
        Sets the taxa_permanencia of this TaxasRefinanciamentoResponse.
        Taxa de permanencia

        :param taxa_permanencia: The taxa_permanencia of this TaxasRefinanciamentoResponse.
        :type: float
        """
        self._taxa_permanencia = taxa_permanencia

    @property
    def taxa_refinanciamento(self):
        """
        Gets the taxa_refinanciamento of this TaxasRefinanciamentoResponse.
        Taxa de permanencia

        :return: The taxa_refinanciamento of this TaxasRefinanciamentoResponse.
        :rtype: float
        """
        return self._taxa_refinanciamento

    @taxa_refinanciamento.setter
    def taxa_refinanciamento(self, taxa_refinanciamento):
        """
        Sets the taxa_refinanciamento of this TaxasRefinanciamentoResponse.
        Taxa de permanencia

        :param taxa_refinanciamento: The taxa_refinanciamento of this TaxasRefinanciamentoResponse.
        :type: float
        """
        self._taxa_refinanciamento = taxa_refinanciamento

    @property
    def taxa_recuperacao_refinanciamento(self):
        """
        Gets the taxa_recuperacao_refinanciamento of this TaxasRefinanciamentoResponse.
        Taxa de permanencia

        :return: The taxa_recuperacao_refinanciamento of this TaxasRefinanciamentoResponse.
        :rtype: float
        """
        return self._taxa_recuperacao_refinanciamento

    @taxa_recuperacao_refinanciamento.setter
    def taxa_recuperacao_refinanciamento(self, taxa_recuperacao_refinanciamento):
        """
        Sets the taxa_recuperacao_refinanciamento of this TaxasRefinanciamentoResponse.
        Taxa de permanencia

        :param taxa_recuperacao_refinanciamento: The taxa_recuperacao_refinanciamento of this TaxasRefinanciamentoResponse.
        :type: float
        """
        self._taxa_recuperacao_refinanciamento = taxa_recuperacao_refinanciamento

    @property
    def taxa_perc_calc_pagamento_minimo(self):
        """
        Gets the taxa_perc_calc_pagamento_minimo of this TaxasRefinanciamentoResponse.
        Taxa Percelamento pagamento minimo

        :return: The taxa_perc_calc_pagamento_minimo of this TaxasRefinanciamentoResponse.
        :rtype: float
        """
        return self._taxa_perc_calc_pagamento_minimo

    @taxa_perc_calc_pagamento_minimo.setter
    def taxa_perc_calc_pagamento_minimo(self, taxa_perc_calc_pagamento_minimo):
        """
        Sets the taxa_perc_calc_pagamento_minimo of this TaxasRefinanciamentoResponse.
        Taxa Percelamento pagamento minimo

        :param taxa_perc_calc_pagamento_minimo: The taxa_perc_calc_pagamento_minimo of this TaxasRefinanciamentoResponse.
        :type: float
        """
        self._taxa_perc_calc_pagamento_minimo = taxa_perc_calc_pagamento_minimo

    @property
    def plano_taxa_default(self):
        """
        Gets the plano_taxa_default of this TaxasRefinanciamentoResponse.
        Plano de taxa padr\u00C3\u00A3o

        :return: The plano_taxa_default of this TaxasRefinanciamentoResponse.
        :rtype: int
        """
        return self._plano_taxa_default

    @plano_taxa_default.setter
    def plano_taxa_default(self, plano_taxa_default):
        """
        Sets the plano_taxa_default of this TaxasRefinanciamentoResponse.
        Plano de taxa padr\u00C3\u00A3o

        :param plano_taxa_default: The plano_taxa_default of this TaxasRefinanciamentoResponse.
        :type: int
        """
        self._plano_taxa_default = plano_taxa_default

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

