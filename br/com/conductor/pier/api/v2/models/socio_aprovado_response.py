# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class SocioAprovadoResponse(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        SocioAprovadoResponse - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'int',
            'nome': 'str',
            'cpf': 'str',
            'data_nascimento': 'str',
            'sexo': 'str',
            'numero_identidade': 'str',
            'orgao_expedidor_identidade': 'str',
            'unidade_federativa_identidade': 'str',
            'data_emissao_identidade': 'str',
            'estado_civil': 'str',
            'profissao': 'str',
            'nacionalidade': 'str',
            'email': 'str',
            'telefones': 'list[TelefonePessoaAprovadaResponse]'
        }

        self.attribute_map = {
            'id': 'id',
            'nome': 'nome',
            'cpf': 'cpf',
            'data_nascimento': 'dataNascimento',
            'sexo': 'sexo',
            'numero_identidade': 'numeroIdentidade',
            'orgao_expedidor_identidade': 'orgaoExpedidorIdentidade',
            'unidade_federativa_identidade': 'unidadeFederativaIdentidade',
            'data_emissao_identidade': 'dataEmissaoIdentidade',
            'estado_civil': 'estadoCivil',
            'profissao': 'profissao',
            'nacionalidade': 'nacionalidade',
            'email': 'email',
            'telefones': 'telefones'
        }

        self._id = None
        self._nome = None
        self._cpf = None
        self._data_nascimento = None
        self._sexo = None
        self._numero_identidade = None
        self._orgao_expedidor_identidade = None
        self._unidade_federativa_identidade = None
        self._data_emissao_identidade = None
        self._estado_civil = None
        self._profissao = None
        self._nacionalidade = None
        self._email = None
        self._telefones = None

    @property
    def id(self):
        """
        Gets the id of this SocioAprovadoResponse.
        {{{socio_aprovado_response_id_value}}}

        :return: The id of this SocioAprovadoResponse.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this SocioAprovadoResponse.
        {{{socio_aprovado_response_id_value}}}

        :param id: The id of this SocioAprovadoResponse.
        :type: int
        """
        self._id = id

    @property
    def nome(self):
        """
        Gets the nome of this SocioAprovadoResponse.
        {{{socio_aprovado_response_nome_value}}}

        :return: The nome of this SocioAprovadoResponse.
        :rtype: str
        """
        return self._nome

    @nome.setter
    def nome(self, nome):
        """
        Sets the nome of this SocioAprovadoResponse.
        {{{socio_aprovado_response_nome_value}}}

        :param nome: The nome of this SocioAprovadoResponse.
        :type: str
        """
        self._nome = nome

    @property
    def cpf(self):
        """
        Gets the cpf of this SocioAprovadoResponse.
        {{{socio_aprovado_response_cpf_value}}}

        :return: The cpf of this SocioAprovadoResponse.
        :rtype: str
        """
        return self._cpf

    @cpf.setter
    def cpf(self, cpf):
        """
        Sets the cpf of this SocioAprovadoResponse.
        {{{socio_aprovado_response_cpf_value}}}

        :param cpf: The cpf of this SocioAprovadoResponse.
        :type: str
        """
        self._cpf = cpf

    @property
    def data_nascimento(self):
        """
        Gets the data_nascimento of this SocioAprovadoResponse.
        {{{socio_aprovado_response_data_nascimento_value}}}

        :return: The data_nascimento of this SocioAprovadoResponse.
        :rtype: str
        """
        return self._data_nascimento

    @data_nascimento.setter
    def data_nascimento(self, data_nascimento):
        """
        Sets the data_nascimento of this SocioAprovadoResponse.
        {{{socio_aprovado_response_data_nascimento_value}}}

        :param data_nascimento: The data_nascimento of this SocioAprovadoResponse.
        :type: str
        """
        self._data_nascimento = data_nascimento

    @property
    def sexo(self):
        """
        Gets the sexo of this SocioAprovadoResponse.
        {{{socio_aprovado_response_sexo_value}}}

        :return: The sexo of this SocioAprovadoResponse.
        :rtype: str
        """
        return self._sexo

    @sexo.setter
    def sexo(self, sexo):
        """
        Sets the sexo of this SocioAprovadoResponse.
        {{{socio_aprovado_response_sexo_value}}}

        :param sexo: The sexo of this SocioAprovadoResponse.
        :type: str
        """
        self._sexo = sexo

    @property
    def numero_identidade(self):
        """
        Gets the numero_identidade of this SocioAprovadoResponse.
        {{{socio_aprovado_response_numero_identidade_value}}}

        :return: The numero_identidade of this SocioAprovadoResponse.
        :rtype: str
        """
        return self._numero_identidade

    @numero_identidade.setter
    def numero_identidade(self, numero_identidade):
        """
        Sets the numero_identidade of this SocioAprovadoResponse.
        {{{socio_aprovado_response_numero_identidade_value}}}

        :param numero_identidade: The numero_identidade of this SocioAprovadoResponse.
        :type: str
        """
        self._numero_identidade = numero_identidade

    @property
    def orgao_expedidor_identidade(self):
        """
        Gets the orgao_expedidor_identidade of this SocioAprovadoResponse.
        {{{socio_aprovado_response_orgao_expedidor_identidade_value}}}

        :return: The orgao_expedidor_identidade of this SocioAprovadoResponse.
        :rtype: str
        """
        return self._orgao_expedidor_identidade

    @orgao_expedidor_identidade.setter
    def orgao_expedidor_identidade(self, orgao_expedidor_identidade):
        """
        Sets the orgao_expedidor_identidade of this SocioAprovadoResponse.
        {{{socio_aprovado_response_orgao_expedidor_identidade_value}}}

        :param orgao_expedidor_identidade: The orgao_expedidor_identidade of this SocioAprovadoResponse.
        :type: str
        """
        self._orgao_expedidor_identidade = orgao_expedidor_identidade

    @property
    def unidade_federativa_identidade(self):
        """
        Gets the unidade_federativa_identidade of this SocioAprovadoResponse.
        {{{socio_aprovado_response_unidade_federativa_identidade_value}}}

        :return: The unidade_federativa_identidade of this SocioAprovadoResponse.
        :rtype: str
        """
        return self._unidade_federativa_identidade

    @unidade_federativa_identidade.setter
    def unidade_federativa_identidade(self, unidade_federativa_identidade):
        """
        Sets the unidade_federativa_identidade of this SocioAprovadoResponse.
        {{{socio_aprovado_response_unidade_federativa_identidade_value}}}

        :param unidade_federativa_identidade: The unidade_federativa_identidade of this SocioAprovadoResponse.
        :type: str
        """
        self._unidade_federativa_identidade = unidade_federativa_identidade

    @property
    def data_emissao_identidade(self):
        """
        Gets the data_emissao_identidade of this SocioAprovadoResponse.
        {{{socio_aprovado_response_data_emissao_identidade_value}}}

        :return: The data_emissao_identidade of this SocioAprovadoResponse.
        :rtype: str
        """
        return self._data_emissao_identidade

    @data_emissao_identidade.setter
    def data_emissao_identidade(self, data_emissao_identidade):
        """
        Sets the data_emissao_identidade of this SocioAprovadoResponse.
        {{{socio_aprovado_response_data_emissao_identidade_value}}}

        :param data_emissao_identidade: The data_emissao_identidade of this SocioAprovadoResponse.
        :type: str
        """
        self._data_emissao_identidade = data_emissao_identidade

    @property
    def estado_civil(self):
        """
        Gets the estado_civil of this SocioAprovadoResponse.
        {{{socio_aprovado_response_estado_civil_value}}}

        :return: The estado_civil of this SocioAprovadoResponse.
        :rtype: str
        """
        return self._estado_civil

    @estado_civil.setter
    def estado_civil(self, estado_civil):
        """
        Sets the estado_civil of this SocioAprovadoResponse.
        {{{socio_aprovado_response_estado_civil_value}}}

        :param estado_civil: The estado_civil of this SocioAprovadoResponse.
        :type: str
        """
        self._estado_civil = estado_civil

    @property
    def profissao(self):
        """
        Gets the profissao of this SocioAprovadoResponse.
        {{{socio_aprovado_response_profissao_value}}}

        :return: The profissao of this SocioAprovadoResponse.
        :rtype: str
        """
        return self._profissao

    @profissao.setter
    def profissao(self, profissao):
        """
        Sets the profissao of this SocioAprovadoResponse.
        {{{socio_aprovado_response_profissao_value}}}

        :param profissao: The profissao of this SocioAprovadoResponse.
        :type: str
        """
        self._profissao = profissao

    @property
    def nacionalidade(self):
        """
        Gets the nacionalidade of this SocioAprovadoResponse.
        {{{socio_aprovado_response_nacionalidade_value}}}

        :return: The nacionalidade of this SocioAprovadoResponse.
        :rtype: str
        """
        return self._nacionalidade

    @nacionalidade.setter
    def nacionalidade(self, nacionalidade):
        """
        Sets the nacionalidade of this SocioAprovadoResponse.
        {{{socio_aprovado_response_nacionalidade_value}}}

        :param nacionalidade: The nacionalidade of this SocioAprovadoResponse.
        :type: str
        """
        self._nacionalidade = nacionalidade

    @property
    def email(self):
        """
        Gets the email of this SocioAprovadoResponse.
        {{{socio_aprovado_response_email_value}}}

        :return: The email of this SocioAprovadoResponse.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """
        Sets the email of this SocioAprovadoResponse.
        {{{socio_aprovado_response_email_value}}}

        :param email: The email of this SocioAprovadoResponse.
        :type: str
        """
        self._email = email

    @property
    def telefones(self):
        """
        Gets the telefones of this SocioAprovadoResponse.
        {{{socio_aprovado_response_telefones_value}}}

        :return: The telefones of this SocioAprovadoResponse.
        :rtype: list[TelefonePessoaAprovadaResponse]
        """
        return self._telefones

    @telefones.setter
    def telefones(self, telefones):
        """
        Sets the telefones of this SocioAprovadoResponse.
        {{{socio_aprovado_response_telefones_value}}}

        :param telefones: The telefones of this SocioAprovadoResponse.
        :type: list[TelefonePessoaAprovadaResponse]
        """
        self._telefones = telefones

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

