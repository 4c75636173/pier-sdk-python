# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class CartaoImpressaoProvisorioResponse(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        CartaoImpressaoProvisorioResponse - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'flag_virtual': 'int',
            'id_conta': 'int',
            'id_pessoa': 'int',
            'id_cartao': 'int',
            'numero_cartao': 'str',
            'nome_plastico': 'str',
            'data_validade': 'str'
        }

        self.attribute_map = {
            'flag_virtual': 'flagVirtual',
            'id_conta': 'idConta',
            'id_pessoa': 'idPessoa',
            'id_cartao': 'idCartao',
            'numero_cartao': 'numeroCartao',
            'nome_plastico': 'nomePlastico',
            'data_validade': 'dataValidade'
        }

        self._flag_virtual = None
        self._id_conta = None
        self._id_pessoa = None
        self._id_cartao = None
        self._numero_cartao = None
        self._nome_plastico = None
        self._data_validade = None

    @property
    def flag_virtual(self):
        """
        Gets the flag_virtual of this CartaoImpressaoProvisorioResponse.


        :return: The flag_virtual of this CartaoImpressaoProvisorioResponse.
        :rtype: int
        """
        return self._flag_virtual

    @flag_virtual.setter
    def flag_virtual(self, flag_virtual):
        """
        Sets the flag_virtual of this CartaoImpressaoProvisorioResponse.


        :param flag_virtual: The flag_virtual of this CartaoImpressaoProvisorioResponse.
        :type: int
        """
        self._flag_virtual = flag_virtual

    @property
    def id_conta(self):
        """
        Gets the id_conta of this CartaoImpressaoProvisorioResponse.
        {{{cartao_impressao_provisorio_response_id_conta_value}}}

        :return: The id_conta of this CartaoImpressaoProvisorioResponse.
        :rtype: int
        """
        return self._id_conta

    @id_conta.setter
    def id_conta(self, id_conta):
        """
        Sets the id_conta of this CartaoImpressaoProvisorioResponse.
        {{{cartao_impressao_provisorio_response_id_conta_value}}}

        :param id_conta: The id_conta of this CartaoImpressaoProvisorioResponse.
        :type: int
        """
        self._id_conta = id_conta

    @property
    def id_pessoa(self):
        """
        Gets the id_pessoa of this CartaoImpressaoProvisorioResponse.
        {{{cartao_impressao_provisorio_response_id_pessoa_value}}}

        :return: The id_pessoa of this CartaoImpressaoProvisorioResponse.
        :rtype: int
        """
        return self._id_pessoa

    @id_pessoa.setter
    def id_pessoa(self, id_pessoa):
        """
        Sets the id_pessoa of this CartaoImpressaoProvisorioResponse.
        {{{cartao_impressao_provisorio_response_id_pessoa_value}}}

        :param id_pessoa: The id_pessoa of this CartaoImpressaoProvisorioResponse.
        :type: int
        """
        self._id_pessoa = id_pessoa

    @property
    def id_cartao(self):
        """
        Gets the id_cartao of this CartaoImpressaoProvisorioResponse.
        {{{cartao_impressao_provisorio_response_id_cartao_value}}}

        :return: The id_cartao of this CartaoImpressaoProvisorioResponse.
        :rtype: int
        """
        return self._id_cartao

    @id_cartao.setter
    def id_cartao(self, id_cartao):
        """
        Sets the id_cartao of this CartaoImpressaoProvisorioResponse.
        {{{cartao_impressao_provisorio_response_id_cartao_value}}}

        :param id_cartao: The id_cartao of this CartaoImpressaoProvisorioResponse.
        :type: int
        """
        self._id_cartao = id_cartao

    @property
    def numero_cartao(self):
        """
        Gets the numero_cartao of this CartaoImpressaoProvisorioResponse.
        {{{cartao_impressao_provisorio_response_numero_cartao_value}}}

        :return: The numero_cartao of this CartaoImpressaoProvisorioResponse.
        :rtype: str
        """
        return self._numero_cartao

    @numero_cartao.setter
    def numero_cartao(self, numero_cartao):
        """
        Sets the numero_cartao of this CartaoImpressaoProvisorioResponse.
        {{{cartao_impressao_provisorio_response_numero_cartao_value}}}

        :param numero_cartao: The numero_cartao of this CartaoImpressaoProvisorioResponse.
        :type: str
        """
        self._numero_cartao = numero_cartao

    @property
    def nome_plastico(self):
        """
        Gets the nome_plastico of this CartaoImpressaoProvisorioResponse.
        {{{cartao_impressao_provisorio_response_nome_plastico_value}}}

        :return: The nome_plastico of this CartaoImpressaoProvisorioResponse.
        :rtype: str
        """
        return self._nome_plastico

    @nome_plastico.setter
    def nome_plastico(self, nome_plastico):
        """
        Sets the nome_plastico of this CartaoImpressaoProvisorioResponse.
        {{{cartao_impressao_provisorio_response_nome_plastico_value}}}

        :param nome_plastico: The nome_plastico of this CartaoImpressaoProvisorioResponse.
        :type: str
        """
        self._nome_plastico = nome_plastico

    @property
    def data_validade(self):
        """
        Gets the data_validade of this CartaoImpressaoProvisorioResponse.
        {{{cartao_impressao_provisorio_response_data_validade_value}}}

        :return: The data_validade of this CartaoImpressaoProvisorioResponse.
        :rtype: str
        """
        return self._data_validade

    @data_validade.setter
    def data_validade(self, data_validade):
        """
        Sets the data_validade of this CartaoImpressaoProvisorioResponse.
        {{{cartao_impressao_provisorio_response_data_validade_value}}}

        :param data_validade: The data_validade of this CartaoImpressaoProvisorioResponse.
        :type: str
        """
        self._data_validade = data_validade

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

