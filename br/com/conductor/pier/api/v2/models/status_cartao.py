# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class StatusCartao(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        StatusCartao - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'int',
            'nome': 'str',
            'flag_cancela_cartao': 'int',
            'flag_cancela_no_desbloqueio': 'int',
            'id_status_destino_desbloqueio': 'int',
            'id_status_destino_conta': 'int',
            'flag_cobra_tarifa': 'int',
            'flag_permite_nova_via_cartao': 'int'
        }

        self.attribute_map = {
            'id': 'id',
            'nome': 'nome',
            'flag_cancela_cartao': 'flagCancelaCartao',
            'flag_cancela_no_desbloqueio': 'flagCancelaNoDesbloqueio',
            'id_status_destino_desbloqueio': 'idStatusDestinoDesbloqueio',
            'id_status_destino_conta': 'idStatusDestinoConta',
            'flag_cobra_tarifa': 'flagCobraTarifa',
            'flag_permite_nova_via_cartao': 'flagPermiteNovaViaCartao'
        }

        self._id = None
        self._nome = None
        self._flag_cancela_cartao = None
        self._flag_cancela_no_desbloqueio = None
        self._id_status_destino_desbloqueio = None
        self._id_status_destino_conta = None
        self._flag_cobra_tarifa = None
        self._flag_permite_nova_via_cartao = None

    @property
    def id(self):
        """
        Gets the id of this StatusCartao.
        C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Status do Cart\u00C3\u00A3o (id) 

        :return: The id of this StatusCartao.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this StatusCartao.
        C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Status do Cart\u00C3\u00A3o (id) 

        :param id: The id of this StatusCartao.
        :type: int
        """
        self._id = id

    @property
    def nome(self):
        """
        Gets the nome of this StatusCartao.
        Nome atribu\u00C3\u00ADdo ao Status de Entrega do Cart\u00C3\u00A3o.

        :return: The nome of this StatusCartao.
        :rtype: str
        """
        return self._nome

    @nome.setter
    def nome(self, nome):
        """
        Sets the nome of this StatusCartao.
        Nome atribu\u00C3\u00ADdo ao Status de Entrega do Cart\u00C3\u00A3o.

        :param nome: The nome of this StatusCartao.
        :type: str
        """
        self._nome = nome

    @property
    def flag_cancela_cartao(self):
        """
        Gets the flag_cancela_cartao of this StatusCartao.
        Quando ativa, indica que ao ser atribu\u00C3\u00ADdo um idStatusCartao com essa caracter\u00C3\u00ADstica, o cart\u00C3\u00A3o ter\u00C3\u00A1 o seu idStatusCartao alterado para o que fora escolhido. Caso contr\u00C3\u00A1rio, o idStatusCartao s\u00C3\u00B3 ser\u00C3\u00A1 alterado ap\u00C3\u00B3s o desbloqueio de um novo cart\u00C3\u00A3o do mesmo Portador e Conta.

        :return: The flag_cancela_cartao of this StatusCartao.
        :rtype: int
        """
        return self._flag_cancela_cartao

    @flag_cancela_cartao.setter
    def flag_cancela_cartao(self, flag_cancela_cartao):
        """
        Sets the flag_cancela_cartao of this StatusCartao.
        Quando ativa, indica que ao ser atribu\u00C3\u00ADdo um idStatusCartao com essa caracter\u00C3\u00ADstica, o cart\u00C3\u00A3o ter\u00C3\u00A1 o seu idStatusCartao alterado para o que fora escolhido. Caso contr\u00C3\u00A1rio, o idStatusCartao s\u00C3\u00B3 ser\u00C3\u00A1 alterado ap\u00C3\u00B3s o desbloqueio de um novo cart\u00C3\u00A3o do mesmo Portador e Conta.

        :param flag_cancela_cartao: The flag_cancela_cartao of this StatusCartao.
        :type: int
        """
        self._flag_cancela_cartao = flag_cancela_cartao

    @property
    def flag_cancela_no_desbloqueio(self):
        """
        Gets the flag_cancela_no_desbloqueio of this StatusCartao.
        Quando ativa, indica que o cart\u00C3\u00A3o ativo que o portador possuir na mesma conta do cart\u00C3\u00A3o a ser desbloqueado, e que o status dele possua essa caracter\u00C3\u00ADstica, dever\u00C3\u00A1 ser cancelado quando um novo cart\u00C3\u00A3o for desbloqueado.

        :return: The flag_cancela_no_desbloqueio of this StatusCartao.
        :rtype: int
        """
        return self._flag_cancela_no_desbloqueio

    @flag_cancela_no_desbloqueio.setter
    def flag_cancela_no_desbloqueio(self, flag_cancela_no_desbloqueio):
        """
        Sets the flag_cancela_no_desbloqueio of this StatusCartao.
        Quando ativa, indica que o cart\u00C3\u00A3o ativo que o portador possuir na mesma conta do cart\u00C3\u00A3o a ser desbloqueado, e que o status dele possua essa caracter\u00C3\u00ADstica, dever\u00C3\u00A1 ser cancelado quando um novo cart\u00C3\u00A3o for desbloqueado.

        :param flag_cancela_no_desbloqueio: The flag_cancela_no_desbloqueio of this StatusCartao.
        :type: int
        """
        self._flag_cancela_no_desbloqueio = flag_cancela_no_desbloqueio

    @property
    def id_status_destino_desbloqueio(self):
        """
        Gets the id_status_destino_desbloqueio of this StatusCartao.
        Indica qual o idStatusCartao que ser\u00C3\u00A1 atribu\u00C3\u00ADdo aos cart\u00C3\u00B5es que forem cancelados devido ao desbloqueio de um novo cart\u00C3\u00A3o.

        :return: The id_status_destino_desbloqueio of this StatusCartao.
        :rtype: int
        """
        return self._id_status_destino_desbloqueio

    @id_status_destino_desbloqueio.setter
    def id_status_destino_desbloqueio(self, id_status_destino_desbloqueio):
        """
        Sets the id_status_destino_desbloqueio of this StatusCartao.
        Indica qual o idStatusCartao que ser\u00C3\u00A1 atribu\u00C3\u00ADdo aos cart\u00C3\u00B5es que forem cancelados devido ao desbloqueio de um novo cart\u00C3\u00A3o.

        :param id_status_destino_desbloqueio: The id_status_destino_desbloqueio of this StatusCartao.
        :type: int
        """
        self._id_status_destino_desbloqueio = id_status_destino_desbloqueio

    @property
    def id_status_destino_conta(self):
        """
        Gets the id_status_destino_conta of this StatusCartao.
        Indica qual o idStatusCartao que ser\u00C3\u00A1 atribu\u00C3\u00ADdo a conta, caso ela seja cancelada devido ao bloqueio de um cart\u00C3\u00A3o quando for utilizado um idStatusCartao no processo de Bloqueio que possua essa caracter\u00C3\u00ADstica.

        :return: The id_status_destino_conta of this StatusCartao.
        :rtype: int
        """
        return self._id_status_destino_conta

    @id_status_destino_conta.setter
    def id_status_destino_conta(self, id_status_destino_conta):
        """
        Sets the id_status_destino_conta of this StatusCartao.
        Indica qual o idStatusCartao que ser\u00C3\u00A1 atribu\u00C3\u00ADdo a conta, caso ela seja cancelada devido ao bloqueio de um cart\u00C3\u00A3o quando for utilizado um idStatusCartao no processo de Bloqueio que possua essa caracter\u00C3\u00ADstica.

        :param id_status_destino_conta: The id_status_destino_conta of this StatusCartao.
        :type: int
        """
        self._id_status_destino_conta = id_status_destino_conta

    @property
    def flag_cobra_tarifa(self):
        """
        Gets the flag_cobra_tarifa of this StatusCartao.
        Quando ativa, indica que cart\u00C3\u00B5es que tiverem um idStatusCartao atribu\u00C3\u00ADdo com essa caracter\u00C3\u00ADstica, incluir\u00C3\u00A3o a cobran\u00C3\u00A7a de uma tarifa para a conta de acordo com os valores definidos nos par\u00C3\u00A2metros do emissor.

        :return: The flag_cobra_tarifa of this StatusCartao.
        :rtype: int
        """
        return self._flag_cobra_tarifa

    @flag_cobra_tarifa.setter
    def flag_cobra_tarifa(self, flag_cobra_tarifa):
        """
        Sets the flag_cobra_tarifa of this StatusCartao.
        Quando ativa, indica que cart\u00C3\u00B5es que tiverem um idStatusCartao atribu\u00C3\u00ADdo com essa caracter\u00C3\u00ADstica, incluir\u00C3\u00A3o a cobran\u00C3\u00A7a de uma tarifa para a conta de acordo com os valores definidos nos par\u00C3\u00A2metros do emissor.

        :param flag_cobra_tarifa: The flag_cobra_tarifa of this StatusCartao.
        :type: int
        """
        self._flag_cobra_tarifa = flag_cobra_tarifa

    @property
    def flag_permite_nova_via_cartao(self):
        """
        Gets the flag_permite_nova_via_cartao of this StatusCartao.
        Par\u00C3\u00A2metro que define se o status do cart\u00C3\u00A3o permite a solicita\u00C3\u00A7\u00C3\u00A3o de uma nova via, sendo: 0: Inativo e 1: Ativo.

        :return: The flag_permite_nova_via_cartao of this StatusCartao.
        :rtype: int
        """
        return self._flag_permite_nova_via_cartao

    @flag_permite_nova_via_cartao.setter
    def flag_permite_nova_via_cartao(self, flag_permite_nova_via_cartao):
        """
        Sets the flag_permite_nova_via_cartao of this StatusCartao.
        Par\u00C3\u00A2metro que define se o status do cart\u00C3\u00A3o permite a solicita\u00C3\u00A7\u00C3\u00A3o de uma nova via, sendo: 0: Inativo e 1: Ativo.

        :param flag_permite_nova_via_cartao: The flag_permite_nova_via_cartao of this StatusCartao.
        :type: int
        """
        self._flag_permite_nova_via_cartao = flag_permite_nova_via_cartao

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

