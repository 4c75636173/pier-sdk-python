# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class StatusCartaoResponse(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        StatusCartaoResponse - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'int',
            'nome': 'str',
            'permite_desbloquear': 'int',
            'permite_atribuir_como_bloqueio': 'int',
            'permite_atribuir_como_cancelamento': 'int',
            'cobrar_tarifa_ao_emitir_nova_via': 'int'
        }

        self.attribute_map = {
            'id': 'id',
            'nome': 'nome',
            'permite_desbloquear': 'permiteDesbloquear',
            'permite_atribuir_como_bloqueio': 'permiteAtribuirComoBloqueio',
            'permite_atribuir_como_cancelamento': 'permiteAtribuirComoCancelamento',
            'cobrar_tarifa_ao_emitir_nova_via': 'cobrarTarifaAoEmitirNovaVia'
        }

        self._id = None
        self._nome = None
        self._permite_desbloquear = None
        self._permite_atribuir_como_bloqueio = None
        self._permite_atribuir_como_cancelamento = None
        self._cobrar_tarifa_ao_emitir_nova_via = None

    @property
    def id(self):
        """
        Gets the id of this StatusCartaoResponse.
        {{{status_cartao_response_id_value}}}

        :return: The id of this StatusCartaoResponse.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this StatusCartaoResponse.
        {{{status_cartao_response_id_value}}}

        :param id: The id of this StatusCartaoResponse.
        :type: int
        """
        self._id = id

    @property
    def nome(self):
        """
        Gets the nome of this StatusCartaoResponse.
        {{{status_cartao_response_nome_value}}}

        :return: The nome of this StatusCartaoResponse.
        :rtype: str
        """
        return self._nome

    @nome.setter
    def nome(self, nome):
        """
        Sets the nome of this StatusCartaoResponse.
        {{{status_cartao_response_nome_value}}}

        :param nome: The nome of this StatusCartaoResponse.
        :type: str
        """
        self._nome = nome

    @property
    def permite_desbloquear(self):
        """
        Gets the permite_desbloquear of this StatusCartaoResponse.
        {{{status_cartao_response_permite_desbloquear_value}}}

        :return: The permite_desbloquear of this StatusCartaoResponse.
        :rtype: int
        """
        return self._permite_desbloquear

    @permite_desbloquear.setter
    def permite_desbloquear(self, permite_desbloquear):
        """
        Sets the permite_desbloquear of this StatusCartaoResponse.
        {{{status_cartao_response_permite_desbloquear_value}}}

        :param permite_desbloquear: The permite_desbloquear of this StatusCartaoResponse.
        :type: int
        """
        self._permite_desbloquear = permite_desbloquear

    @property
    def permite_atribuir_como_bloqueio(self):
        """
        Gets the permite_atribuir_como_bloqueio of this StatusCartaoResponse.
        {{{status_cartao_response_permite_atribuir_como_bloqueio_value}}}

        :return: The permite_atribuir_como_bloqueio of this StatusCartaoResponse.
        :rtype: int
        """
        return self._permite_atribuir_como_bloqueio

    @permite_atribuir_como_bloqueio.setter
    def permite_atribuir_como_bloqueio(self, permite_atribuir_como_bloqueio):
        """
        Sets the permite_atribuir_como_bloqueio of this StatusCartaoResponse.
        {{{status_cartao_response_permite_atribuir_como_bloqueio_value}}}

        :param permite_atribuir_como_bloqueio: The permite_atribuir_como_bloqueio of this StatusCartaoResponse.
        :type: int
        """
        self._permite_atribuir_como_bloqueio = permite_atribuir_como_bloqueio

    @property
    def permite_atribuir_como_cancelamento(self):
        """
        Gets the permite_atribuir_como_cancelamento of this StatusCartaoResponse.
        {{{status_cartao_response_permite_atribuir_como_cancelamento_value}}}

        :return: The permite_atribuir_como_cancelamento of this StatusCartaoResponse.
        :rtype: int
        """
        return self._permite_atribuir_como_cancelamento

    @permite_atribuir_como_cancelamento.setter
    def permite_atribuir_como_cancelamento(self, permite_atribuir_como_cancelamento):
        """
        Sets the permite_atribuir_como_cancelamento of this StatusCartaoResponse.
        {{{status_cartao_response_permite_atribuir_como_cancelamento_value}}}

        :param permite_atribuir_como_cancelamento: The permite_atribuir_como_cancelamento of this StatusCartaoResponse.
        :type: int
        """
        self._permite_atribuir_como_cancelamento = permite_atribuir_como_cancelamento

    @property
    def cobrar_tarifa_ao_emitir_nova_via(self):
        """
        Gets the cobrar_tarifa_ao_emitir_nova_via of this StatusCartaoResponse.
        {{{status_cartao_response_cobrar_tarifa_ao_emitir_nova_via_value}}}

        :return: The cobrar_tarifa_ao_emitir_nova_via of this StatusCartaoResponse.
        :rtype: int
        """
        return self._cobrar_tarifa_ao_emitir_nova_via

    @cobrar_tarifa_ao_emitir_nova_via.setter
    def cobrar_tarifa_ao_emitir_nova_via(self, cobrar_tarifa_ao_emitir_nova_via):
        """
        Sets the cobrar_tarifa_ao_emitir_nova_via of this StatusCartaoResponse.
        {{{status_cartao_response_cobrar_tarifa_ao_emitir_nova_via_value}}}

        :param cobrar_tarifa_ao_emitir_nova_via: The cobrar_tarifa_ao_emitir_nova_via of this StatusCartaoResponse.
        :type: int
        """
        self._cobrar_tarifa_ao_emitir_nova_via = cobrar_tarifa_ao_emitir_nova_via

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

