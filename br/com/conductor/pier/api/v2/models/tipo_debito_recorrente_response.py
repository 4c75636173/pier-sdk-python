# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class TipoDebitoRecorrenteResponse(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        TipoDebitoRecorrenteResponse - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'int',
            'descricao': 'str',
            'valor': 'float',
            'flag_ativo': 'bool'
        }

        self.attribute_map = {
            'id': 'id',
            'descricao': 'descricao',
            'valor': 'valor',
            'flag_ativo': 'flagAtivo'
        }

        self._id = None
        self._descricao = None
        self._valor = None
        self._flag_ativo = None

    @property
    def id(self):
        """
        Gets the id of this TipoDebitoRecorrenteResponse.
        C\u00F3digo de identifica\u00E7\u00E3o do tipo de d\u00E9bito recorrente (id).

        :return: The id of this TipoDebitoRecorrenteResponse.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this TipoDebitoRecorrenteResponse.
        C\u00F3digo de identifica\u00E7\u00E3o do tipo de d\u00E9bito recorrente (id).

        :param id: The id of this TipoDebitoRecorrenteResponse.
        :type: int
        """
        self._id = id

    @property
    def descricao(self):
        """
        Gets the descricao of this TipoDebitoRecorrenteResponse.
        Descri\u00E7\u00E3o do tipo de d\u00E9bito recorrente.

        :return: The descricao of this TipoDebitoRecorrenteResponse.
        :rtype: str
        """
        return self._descricao

    @descricao.setter
    def descricao(self, descricao):
        """
        Sets the descricao of this TipoDebitoRecorrenteResponse.
        Descri\u00E7\u00E3o do tipo de d\u00E9bito recorrente.

        :param descricao: The descricao of this TipoDebitoRecorrenteResponse.
        :type: str
        """
        self._descricao = descricao

    @property
    def valor(self):
        """
        Gets the valor of this TipoDebitoRecorrenteResponse.
        Valor do tipo de d\u00E9bito recorrente.

        :return: The valor of this TipoDebitoRecorrenteResponse.
        :rtype: float
        """
        return self._valor

    @valor.setter
    def valor(self, valor):
        """
        Sets the valor of this TipoDebitoRecorrenteResponse.
        Valor do tipo de d\u00E9bito recorrente.

        :param valor: The valor of this TipoDebitoRecorrenteResponse.
        :type: float
        """
        self._valor = valor

    @property
    def flag_ativo(self):
        """
        Gets the flag_ativo of this TipoDebitoRecorrenteResponse.
        Flag que identifica se o tipo d\u00E9bito recorrente est\u00E1 ativo.

        :return: The flag_ativo of this TipoDebitoRecorrenteResponse.
        :rtype: bool
        """
        return self._flag_ativo

    @flag_ativo.setter
    def flag_ativo(self, flag_ativo):
        """
        Sets the flag_ativo of this TipoDebitoRecorrenteResponse.
        Flag que identifica se o tipo d\u00E9bito recorrente est\u00E1 ativo.

        :param flag_ativo: The flag_ativo of this TipoDebitoRecorrenteResponse.
        :type: bool
        """
        self._flag_ativo = flag_ativo

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

