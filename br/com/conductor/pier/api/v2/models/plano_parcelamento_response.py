# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class PlanoParcelamentoResponse(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        PlanoParcelamentoResponse - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'int',
            'data_fechamento_fatura': 'str',
            'data_vencimento_padrao': 'str',
            'valor_total_fatura': 'float',
            'quantidade_parcelas': 'int',
            'valor_parcela': 'float',
            'valor_entrada': 'float',
            'taxa_refinanciamento': 'float',
            'custo_efetivo_total': 'float',
            'valor_total_refinanciamento': 'float',
            'valor_iof': 'float',
            'valor_tac': 'float',
            'status_adesao': 'int',
            'data_inclusao': 'str',
            'data_processamento_adesao': 'str',
            'id_conta': 'int',
            'descricao_servico_tipo': 'str',
            'com_entrada': 'bool',
            'nome_campanha': 'str'
        }

        self.attribute_map = {
            'id': 'id',
            'data_fechamento_fatura': 'dataFechamentoFatura',
            'data_vencimento_padrao': 'dataVencimentoPadrao',
            'valor_total_fatura': 'valorTotalFatura',
            'quantidade_parcelas': 'quantidadeParcelas',
            'valor_parcela': 'valorParcela',
            'valor_entrada': 'valorEntrada',
            'taxa_refinanciamento': 'taxaRefinanciamento',
            'custo_efetivo_total': 'custoEfetivoTotal',
            'valor_total_refinanciamento': 'valorTotalRefinanciamento',
            'valor_iof': 'valorIOF',
            'valor_tac': 'valorTAC',
            'status_adesao': 'statusAdesao',
            'data_inclusao': 'dataInclusao',
            'data_processamento_adesao': 'dataProcessamentoAdesao',
            'id_conta': 'idConta',
            'descricao_servico_tipo': 'descricaoServicoTipo',
            'com_entrada': 'comEntrada',
            'nome_campanha': 'nomeCampanha'
        }

        self._id = None
        self._data_fechamento_fatura = None
        self._data_vencimento_padrao = None
        self._valor_total_fatura = None
        self._quantidade_parcelas = None
        self._valor_parcela = None
        self._valor_entrada = None
        self._taxa_refinanciamento = None
        self._custo_efetivo_total = None
        self._valor_total_refinanciamento = None
        self._valor_iof = None
        self._valor_tac = None
        self._status_adesao = None
        self._data_inclusao = None
        self._data_processamento_adesao = None
        self._id_conta = None
        self._descricao_servico_tipo = None
        self._com_entrada = None
        self._nome_campanha = None

    @property
    def id(self):
        """
        Gets the id of this PlanoParcelamentoResponse.
        Identificador do parcelamento

        :return: The id of this PlanoParcelamentoResponse.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this PlanoParcelamentoResponse.
        Identificador do parcelamento

        :param id: The id of this PlanoParcelamentoResponse.
        :type: int
        """
        self._id = id

    @property
    def data_fechamento_fatura(self):
        """
        Gets the data_fechamento_fatura of this PlanoParcelamentoResponse.
        Data de fechamento da fatura

        :return: The data_fechamento_fatura of this PlanoParcelamentoResponse.
        :rtype: str
        """
        return self._data_fechamento_fatura

    @data_fechamento_fatura.setter
    def data_fechamento_fatura(self, data_fechamento_fatura):
        """
        Sets the data_fechamento_fatura of this PlanoParcelamentoResponse.
        Data de fechamento da fatura

        :param data_fechamento_fatura: The data_fechamento_fatura of this PlanoParcelamentoResponse.
        :type: str
        """
        self._data_fechamento_fatura = data_fechamento_fatura

    @property
    def data_vencimento_padrao(self):
        """
        Gets the data_vencimento_padrao of this PlanoParcelamentoResponse.
        Data de vencimento padr\u00C3\u00A3o

        :return: The data_vencimento_padrao of this PlanoParcelamentoResponse.
        :rtype: str
        """
        return self._data_vencimento_padrao

    @data_vencimento_padrao.setter
    def data_vencimento_padrao(self, data_vencimento_padrao):
        """
        Sets the data_vencimento_padrao of this PlanoParcelamentoResponse.
        Data de vencimento padr\u00C3\u00A3o

        :param data_vencimento_padrao: The data_vencimento_padrao of this PlanoParcelamentoResponse.
        :type: str
        """
        self._data_vencimento_padrao = data_vencimento_padrao

    @property
    def valor_total_fatura(self):
        """
        Gets the valor_total_fatura of this PlanoParcelamentoResponse.
        Valor total da fatura

        :return: The valor_total_fatura of this PlanoParcelamentoResponse.
        :rtype: float
        """
        return self._valor_total_fatura

    @valor_total_fatura.setter
    def valor_total_fatura(self, valor_total_fatura):
        """
        Sets the valor_total_fatura of this PlanoParcelamentoResponse.
        Valor total da fatura

        :param valor_total_fatura: The valor_total_fatura of this PlanoParcelamentoResponse.
        :type: float
        """
        self._valor_total_fatura = valor_total_fatura

    @property
    def quantidade_parcelas(self):
        """
        Gets the quantidade_parcelas of this PlanoParcelamentoResponse.
        Quantidade de parcelas

        :return: The quantidade_parcelas of this PlanoParcelamentoResponse.
        :rtype: int
        """
        return self._quantidade_parcelas

    @quantidade_parcelas.setter
    def quantidade_parcelas(self, quantidade_parcelas):
        """
        Sets the quantidade_parcelas of this PlanoParcelamentoResponse.
        Quantidade de parcelas

        :param quantidade_parcelas: The quantidade_parcelas of this PlanoParcelamentoResponse.
        :type: int
        """
        self._quantidade_parcelas = quantidade_parcelas

    @property
    def valor_parcela(self):
        """
        Gets the valor_parcela of this PlanoParcelamentoResponse.
        Valor da parcela

        :return: The valor_parcela of this PlanoParcelamentoResponse.
        :rtype: float
        """
        return self._valor_parcela

    @valor_parcela.setter
    def valor_parcela(self, valor_parcela):
        """
        Sets the valor_parcela of this PlanoParcelamentoResponse.
        Valor da parcela

        :param valor_parcela: The valor_parcela of this PlanoParcelamentoResponse.
        :type: float
        """
        self._valor_parcela = valor_parcela

    @property
    def valor_entrada(self):
        """
        Gets the valor_entrada of this PlanoParcelamentoResponse.
        Valor de entrada

        :return: The valor_entrada of this PlanoParcelamentoResponse.
        :rtype: float
        """
        return self._valor_entrada

    @valor_entrada.setter
    def valor_entrada(self, valor_entrada):
        """
        Sets the valor_entrada of this PlanoParcelamentoResponse.
        Valor de entrada

        :param valor_entrada: The valor_entrada of this PlanoParcelamentoResponse.
        :type: float
        """
        self._valor_entrada = valor_entrada

    @property
    def taxa_refinanciamento(self):
        """
        Gets the taxa_refinanciamento of this PlanoParcelamentoResponse.
        Taxa de refinanciamento

        :return: The taxa_refinanciamento of this PlanoParcelamentoResponse.
        :rtype: float
        """
        return self._taxa_refinanciamento

    @taxa_refinanciamento.setter
    def taxa_refinanciamento(self, taxa_refinanciamento):
        """
        Sets the taxa_refinanciamento of this PlanoParcelamentoResponse.
        Taxa de refinanciamento

        :param taxa_refinanciamento: The taxa_refinanciamento of this PlanoParcelamentoResponse.
        :type: float
        """
        self._taxa_refinanciamento = taxa_refinanciamento

    @property
    def custo_efetivo_total(self):
        """
        Gets the custo_efetivo_total of this PlanoParcelamentoResponse.
        Custo efetivo total

        :return: The custo_efetivo_total of this PlanoParcelamentoResponse.
        :rtype: float
        """
        return self._custo_efetivo_total

    @custo_efetivo_total.setter
    def custo_efetivo_total(self, custo_efetivo_total):
        """
        Sets the custo_efetivo_total of this PlanoParcelamentoResponse.
        Custo efetivo total

        :param custo_efetivo_total: The custo_efetivo_total of this PlanoParcelamentoResponse.
        :type: float
        """
        self._custo_efetivo_total = custo_efetivo_total

    @property
    def valor_total_refinanciamento(self):
        """
        Gets the valor_total_refinanciamento of this PlanoParcelamentoResponse.
        Valor total de refinanciamento

        :return: The valor_total_refinanciamento of this PlanoParcelamentoResponse.
        :rtype: float
        """
        return self._valor_total_refinanciamento

    @valor_total_refinanciamento.setter
    def valor_total_refinanciamento(self, valor_total_refinanciamento):
        """
        Sets the valor_total_refinanciamento of this PlanoParcelamentoResponse.
        Valor total de refinanciamento

        :param valor_total_refinanciamento: The valor_total_refinanciamento of this PlanoParcelamentoResponse.
        :type: float
        """
        self._valor_total_refinanciamento = valor_total_refinanciamento

    @property
    def valor_iof(self):
        """
        Gets the valor_iof of this PlanoParcelamentoResponse.
        Valor do IOF

        :return: The valor_iof of this PlanoParcelamentoResponse.
        :rtype: float
        """
        return self._valor_iof

    @valor_iof.setter
    def valor_iof(self, valor_iof):
        """
        Sets the valor_iof of this PlanoParcelamentoResponse.
        Valor do IOF

        :param valor_iof: The valor_iof of this PlanoParcelamentoResponse.
        :type: float
        """
        self._valor_iof = valor_iof

    @property
    def valor_tac(self):
        """
        Gets the valor_tac of this PlanoParcelamentoResponse.
        Valor do TAC

        :return: The valor_tac of this PlanoParcelamentoResponse.
        :rtype: float
        """
        return self._valor_tac

    @valor_tac.setter
    def valor_tac(self, valor_tac):
        """
        Sets the valor_tac of this PlanoParcelamentoResponse.
        Valor do TAC

        :param valor_tac: The valor_tac of this PlanoParcelamentoResponse.
        :type: float
        """
        self._valor_tac = valor_tac

    @property
    def status_adesao(self):
        """
        Gets the status_adesao of this PlanoParcelamentoResponse.
        Status da ades\u00C3\u00A3o

        :return: The status_adesao of this PlanoParcelamentoResponse.
        :rtype: int
        """
        return self._status_adesao

    @status_adesao.setter
    def status_adesao(self, status_adesao):
        """
        Sets the status_adesao of this PlanoParcelamentoResponse.
        Status da ades\u00C3\u00A3o

        :param status_adesao: The status_adesao of this PlanoParcelamentoResponse.
        :type: int
        """
        self._status_adesao = status_adesao

    @property
    def data_inclusao(self):
        """
        Gets the data_inclusao of this PlanoParcelamentoResponse.
        Data de inclus\u00C3\u00A3o

        :return: The data_inclusao of this PlanoParcelamentoResponse.
        :rtype: str
        """
        return self._data_inclusao

    @data_inclusao.setter
    def data_inclusao(self, data_inclusao):
        """
        Sets the data_inclusao of this PlanoParcelamentoResponse.
        Data de inclus\u00C3\u00A3o

        :param data_inclusao: The data_inclusao of this PlanoParcelamentoResponse.
        :type: str
        """
        self._data_inclusao = data_inclusao

    @property
    def data_processamento_adesao(self):
        """
        Gets the data_processamento_adesao of this PlanoParcelamentoResponse.
        Data de processamento da ades\u00C3\u00A3o

        :return: The data_processamento_adesao of this PlanoParcelamentoResponse.
        :rtype: str
        """
        return self._data_processamento_adesao

    @data_processamento_adesao.setter
    def data_processamento_adesao(self, data_processamento_adesao):
        """
        Sets the data_processamento_adesao of this PlanoParcelamentoResponse.
        Data de processamento da ades\u00C3\u00A3o

        :param data_processamento_adesao: The data_processamento_adesao of this PlanoParcelamentoResponse.
        :type: str
        """
        self._data_processamento_adesao = data_processamento_adesao

    @property
    def id_conta(self):
        """
        Gets the id_conta of this PlanoParcelamentoResponse.
        Identificador da conta

        :return: The id_conta of this PlanoParcelamentoResponse.
        :rtype: int
        """
        return self._id_conta

    @id_conta.setter
    def id_conta(self, id_conta):
        """
        Sets the id_conta of this PlanoParcelamentoResponse.
        Identificador da conta

        :param id_conta: The id_conta of this PlanoParcelamentoResponse.
        :type: int
        """
        self._id_conta = id_conta

    @property
    def descricao_servico_tipo(self):
        """
        Gets the descricao_servico_tipo of this PlanoParcelamentoResponse.
        Descri\u00C3\u00A7\u00C3\u00A3o do tipo de servi\u00C3\u00A7o

        :return: The descricao_servico_tipo of this PlanoParcelamentoResponse.
        :rtype: str
        """
        return self._descricao_servico_tipo

    @descricao_servico_tipo.setter
    def descricao_servico_tipo(self, descricao_servico_tipo):
        """
        Sets the descricao_servico_tipo of this PlanoParcelamentoResponse.
        Descri\u00C3\u00A7\u00C3\u00A3o do tipo de servi\u00C3\u00A7o

        :param descricao_servico_tipo: The descricao_servico_tipo of this PlanoParcelamentoResponse.
        :type: str
        """
        self._descricao_servico_tipo = descricao_servico_tipo

    @property
    def com_entrada(self):
        """
        Gets the com_entrada of this PlanoParcelamentoResponse.
        Indica se a fatura foi com entrada

        :return: The com_entrada of this PlanoParcelamentoResponse.
        :rtype: bool
        """
        return self._com_entrada

    @com_entrada.setter
    def com_entrada(self, com_entrada):
        """
        Sets the com_entrada of this PlanoParcelamentoResponse.
        Indica se a fatura foi com entrada

        :param com_entrada: The com_entrada of this PlanoParcelamentoResponse.
        :type: bool
        """
        self._com_entrada = com_entrada

    @property
    def nome_campanha(self):
        """
        Gets the nome_campanha of this PlanoParcelamentoResponse.
        Nome da campanha

        :return: The nome_campanha of this PlanoParcelamentoResponse.
        :rtype: str
        """
        return self._nome_campanha

    @nome_campanha.setter
    def nome_campanha(self, nome_campanha):
        """
        Sets the nome_campanha of this PlanoParcelamentoResponse.
        Nome da campanha

        :param nome_campanha: The nome_campanha of this PlanoParcelamentoResponse.
        :type: str
        """
        self._nome_campanha = nome_campanha

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

