# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class CartaoEmbossingResponse(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        CartaoEmbossingResponse - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'flag_virtual': 'int',
            'id_conta': 'int',
            'id_pessoa': 'int',
            'id_cartao': 'int',
            'id_bandeira': 'int',
            'id_tipo_cartao': 'int',
            'data_geracao': 'str',
            'data_validade': 'str',
            'nome_origem_comercial': 'str',
            'cpf': 'str'
        }

        self.attribute_map = {
            'flag_virtual': 'flagVirtual',
            'id_conta': 'idConta',
            'id_pessoa': 'idPessoa',
            'id_cartao': 'idCartao',
            'id_bandeira': 'idBandeira',
            'id_tipo_cartao': 'idTipoCartao',
            'data_geracao': 'dataGeracao',
            'data_validade': 'dataValidade',
            'nome_origem_comercial': 'nomeOrigemComercial',
            'cpf': 'cpf'
        }

        self._flag_virtual = None
        self._id_conta = None
        self._id_pessoa = None
        self._id_cartao = None
        self._id_bandeira = None
        self._id_tipo_cartao = None
        self._data_geracao = None
        self._data_validade = None
        self._nome_origem_comercial = None
        self._cpf = None

    @property
    def flag_virtual(self):
        """
        Gets the flag_virtual of this CartaoEmbossingResponse.
        Apresenta o status que informa se o cart\u00C3\u00A3o \u00C3\u00A9 virtual 

        :return: The flag_virtual of this CartaoEmbossingResponse.
        :rtype: int
        """
        return self._flag_virtual

    @flag_virtual.setter
    def flag_virtual(self, flag_virtual):
        """
        Sets the flag_virtual of this CartaoEmbossingResponse.
        Apresenta o status que informa se o cart\u00C3\u00A3o \u00C3\u00A9 virtual 

        :param flag_virtual: The flag_virtual of this CartaoEmbossingResponse.
        :type: int
        """
        self._flag_virtual = flag_virtual

    @property
    def id_conta(self):
        """
        Gets the id_conta of this CartaoEmbossingResponse.
        Apresenta o C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da Conta (id) a qual o cart\u00C3\u00A3o gerado pertence.

        :return: The id_conta of this CartaoEmbossingResponse.
        :rtype: int
        """
        return self._id_conta

    @id_conta.setter
    def id_conta(self, id_conta):
        """
        Sets the id_conta of this CartaoEmbossingResponse.
        Apresenta o C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da Conta (id) a qual o cart\u00C3\u00A3o gerado pertence.

        :param id_conta: The id_conta of this CartaoEmbossingResponse.
        :type: int
        """
        self._id_conta = id_conta

    @property
    def id_pessoa(self):
        """
        Gets the id_pessoa of this CartaoEmbossingResponse.
        Apresenta o C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da Pessoa (id) portadora do cart\u00C3\u00A3o gerado.

        :return: The id_pessoa of this CartaoEmbossingResponse.
        :rtype: int
        """
        return self._id_pessoa

    @id_pessoa.setter
    def id_pessoa(self, id_pessoa):
        """
        Sets the id_pessoa of this CartaoEmbossingResponse.
        Apresenta o C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da Pessoa (id) portadora do cart\u00C3\u00A3o gerado.

        :param id_pessoa: The id_pessoa of this CartaoEmbossingResponse.
        :type: int
        """
        self._id_pessoa = id_pessoa

    @property
    def id_cartao(self):
        """
        Gets the id_cartao of this CartaoEmbossingResponse.
        Apresenta o C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Cart\u00C3\u00A3o (id) que foi gerado.

        :return: The id_cartao of this CartaoEmbossingResponse.
        :rtype: int
        """
        return self._id_cartao

    @id_cartao.setter
    def id_cartao(self, id_cartao):
        """
        Sets the id_cartao of this CartaoEmbossingResponse.
        Apresenta o C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Cart\u00C3\u00A3o (id) que foi gerado.

        :param id_cartao: The id_cartao of this CartaoEmbossingResponse.
        :type: int
        """
        self._id_cartao = id_cartao

    @property
    def id_bandeira(self):
        """
        Gets the id_bandeira of this CartaoEmbossingResponse.
        Apresenta o C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da Bandeira (id) a qual o Cart\u00C3\u00A3o pertence, quando bandeirado.

        :return: The id_bandeira of this CartaoEmbossingResponse.
        :rtype: int
        """
        return self._id_bandeira

    @id_bandeira.setter
    def id_bandeira(self, id_bandeira):
        """
        Sets the id_bandeira of this CartaoEmbossingResponse.
        Apresenta o C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o da Bandeira (id) a qual o Cart\u00C3\u00A3o pertence, quando bandeirado.

        :param id_bandeira: The id_bandeira of this CartaoEmbossingResponse.
        :type: int
        """
        self._id_bandeira = id_bandeira

    @property
    def id_tipo_cartao(self):
        """
        Gets the id_tipo_cartao of this CartaoEmbossingResponse.
        Apresenta o C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Tipo do Cart\u00C3\u00A3o (id) atribu\u00C3\u00ADdo ao Cart\u00C3\u00A3o.

        :return: The id_tipo_cartao of this CartaoEmbossingResponse.
        :rtype: int
        """
        return self._id_tipo_cartao

    @id_tipo_cartao.setter
    def id_tipo_cartao(self, id_tipo_cartao):
        """
        Sets the id_tipo_cartao of this CartaoEmbossingResponse.
        Apresenta o C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Tipo do Cart\u00C3\u00A3o (id) atribu\u00C3\u00ADdo ao Cart\u00C3\u00A3o.

        :param id_tipo_cartao: The id_tipo_cartao of this CartaoEmbossingResponse.
        :type: int
        """
        self._id_tipo_cartao = id_tipo_cartao

    @property
    def data_geracao(self):
        """
        Gets the data_geracao of this CartaoEmbossingResponse.
        Apresenta a data de emiss\u00C3\u00A3o do Cart\u00C3\u00A3o.

        :return: The data_geracao of this CartaoEmbossingResponse.
        :rtype: str
        """
        return self._data_geracao

    @data_geracao.setter
    def data_geracao(self, data_geracao):
        """
        Sets the data_geracao of this CartaoEmbossingResponse.
        Apresenta a data de emiss\u00C3\u00A3o do Cart\u00C3\u00A3o.

        :param data_geracao: The data_geracao of this CartaoEmbossingResponse.
        :type: str
        """
        self._data_geracao = data_geracao

    @property
    def data_validade(self):
        """
        Gets the data_validade of this CartaoEmbossingResponse.
        Apresenta a data de Validade do Cart\u00C3\u00A3o.

        :return: The data_validade of this CartaoEmbossingResponse.
        :rtype: str
        """
        return self._data_validade

    @data_validade.setter
    def data_validade(self, data_validade):
        """
        Sets the data_validade of this CartaoEmbossingResponse.
        Apresenta a data de Validade do Cart\u00C3\u00A3o.

        :param data_validade: The data_validade of this CartaoEmbossingResponse.
        :type: str
        """
        self._data_validade = data_validade

    @property
    def nome_origem_comercial(self):
        """
        Gets the nome_origem_comercial of this CartaoEmbossingResponse.
        Apresenta o nome da Origem Comercial que realizou o cadastro do Titular da Conta a qual o Cart\u00C3\u00A3o pertence.

        :return: The nome_origem_comercial of this CartaoEmbossingResponse.
        :rtype: str
        """
        return self._nome_origem_comercial

    @nome_origem_comercial.setter
    def nome_origem_comercial(self, nome_origem_comercial):
        """
        Sets the nome_origem_comercial of this CartaoEmbossingResponse.
        Apresenta o nome da Origem Comercial que realizou o cadastro do Titular da Conta a qual o Cart\u00C3\u00A3o pertence.

        :param nome_origem_comercial: The nome_origem_comercial of this CartaoEmbossingResponse.
        :type: str
        """
        self._nome_origem_comercial = nome_origem_comercial

    @property
    def cpf(self):
        """
        Gets the cpf of this CartaoEmbossingResponse.
        Apresenta o CPF do Portador do Cart\u00C3\u00A3o.

        :return: The cpf of this CartaoEmbossingResponse.
        :rtype: str
        """
        return self._cpf

    @cpf.setter
    def cpf(self, cpf):
        """
        Sets the cpf of this CartaoEmbossingResponse.
        Apresenta o CPF do Portador do Cart\u00C3\u00A3o.

        :param cpf: The cpf of this CartaoEmbossingResponse.
        :type: str
        """
        self._cpf = cpf

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

