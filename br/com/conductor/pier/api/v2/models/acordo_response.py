# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class AcordoResponse(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        AcordoResponse - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'int',
            'id_conta': 'int',
            'status_acordo': 'int',
            'valor_acordo': 'float',
            'data_acordo': 'str',
            'quantidade_parcelas': 'int',
            'saldo_atual_final': 'float',
            'dias_em_atraso': 'int'
        }

        self.attribute_map = {
            'id': 'id',
            'id_conta': 'idConta',
            'status_acordo': 'statusAcordo',
            'valor_acordo': 'valorAcordo',
            'data_acordo': 'dataAcordo',
            'quantidade_parcelas': 'quantidadeParcelas',
            'saldo_atual_final': 'saldoAtualFinal',
            'dias_em_atraso': 'diasEmAtraso'
        }

        self._id = None
        self._id_conta = None
        self._status_acordo = None
        self._valor_acordo = None
        self._data_acordo = None
        self._quantidade_parcelas = None
        self._saldo_atual_final = None
        self._dias_em_atraso = None

    @property
    def id(self):
        """
        Gets the id of this AcordoResponse.
        C\u00F3digo de Identifica\u00E7\u00E3o do acordo (id).

        :return: The id of this AcordoResponse.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this AcordoResponse.
        C\u00F3digo de Identifica\u00E7\u00E3o do acordo (id).

        :param id: The id of this AcordoResponse.
        :type: int
        """
        self._id = id

    @property
    def id_conta(self):
        """
        Gets the id_conta of this AcordoResponse.
        C\u00F3digo de Identifica\u00E7\u00E3o da conta.

        :return: The id_conta of this AcordoResponse.
        :rtype: int
        """
        return self._id_conta

    @id_conta.setter
    def id_conta(self, id_conta):
        """
        Sets the id_conta of this AcordoResponse.
        C\u00F3digo de Identifica\u00E7\u00E3o da conta.

        :param id_conta: The id_conta of this AcordoResponse.
        :type: int
        """
        self._id_conta = id_conta

    @property
    def status_acordo(self):
        """
        Gets the status_acordo of this AcordoResponse.
        Status do acordo.

        :return: The status_acordo of this AcordoResponse.
        :rtype: int
        """
        return self._status_acordo

    @status_acordo.setter
    def status_acordo(self, status_acordo):
        """
        Sets the status_acordo of this AcordoResponse.
        Status do acordo.

        :param status_acordo: The status_acordo of this AcordoResponse.
        :type: int
        """
        self._status_acordo = status_acordo

    @property
    def valor_acordo(self):
        """
        Gets the valor_acordo of this AcordoResponse.
        Valor do Acordo.

        :return: The valor_acordo of this AcordoResponse.
        :rtype: float
        """
        return self._valor_acordo

    @valor_acordo.setter
    def valor_acordo(self, valor_acordo):
        """
        Sets the valor_acordo of this AcordoResponse.
        Valor do Acordo.

        :param valor_acordo: The valor_acordo of this AcordoResponse.
        :type: float
        """
        self._valor_acordo = valor_acordo

    @property
    def data_acordo(self):
        """
        Gets the data_acordo of this AcordoResponse.
        Data e Hora do acordo.

        :return: The data_acordo of this AcordoResponse.
        :rtype: str
        """
        return self._data_acordo

    @data_acordo.setter
    def data_acordo(self, data_acordo):
        """
        Sets the data_acordo of this AcordoResponse.
        Data e Hora do acordo.

        :param data_acordo: The data_acordo of this AcordoResponse.
        :type: str
        """
        self._data_acordo = data_acordo

    @property
    def quantidade_parcelas(self):
        """
        Gets the quantidade_parcelas of this AcordoResponse.
        Quantidade de parcelas do acordo.

        :return: The quantidade_parcelas of this AcordoResponse.
        :rtype: int
        """
        return self._quantidade_parcelas

    @quantidade_parcelas.setter
    def quantidade_parcelas(self, quantidade_parcelas):
        """
        Sets the quantidade_parcelas of this AcordoResponse.
        Quantidade de parcelas do acordo.

        :param quantidade_parcelas: The quantidade_parcelas of this AcordoResponse.
        :type: int
        """
        self._quantidade_parcelas = quantidade_parcelas

    @property
    def saldo_atual_final(self):
        """
        Gets the saldo_atual_final of this AcordoResponse.
        Saldo atual final.

        :return: The saldo_atual_final of this AcordoResponse.
        :rtype: float
        """
        return self._saldo_atual_final

    @saldo_atual_final.setter
    def saldo_atual_final(self, saldo_atual_final):
        """
        Sets the saldo_atual_final of this AcordoResponse.
        Saldo atual final.

        :param saldo_atual_final: The saldo_atual_final of this AcordoResponse.
        :type: float
        """
        self._saldo_atual_final = saldo_atual_final

    @property
    def dias_em_atraso(self):
        """
        Gets the dias_em_atraso of this AcordoResponse.
        Dias em atraso.

        :return: The dias_em_atraso of this AcordoResponse.
        :rtype: int
        """
        return self._dias_em_atraso

    @dias_em_atraso.setter
    def dias_em_atraso(self, dias_em_atraso):
        """
        Sets the dias_em_atraso of this AcordoResponse.
        Dias em atraso.

        :param dias_em_atraso: The dias_em_atraso of this AcordoResponse.
        :type: int
        """
        self._dias_em_atraso = dias_em_atraso

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

