# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class OrigemComercialResponse(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        OrigemComercialResponse - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'int',
            'nome': 'str',
            'descricao': 'str',
            'produtos_origem': 'list[ProdutoOrigemResponse]',
            'id_estabelecimento': 'int',
            'id_tipo_origem_comercial': 'int',
            'nome_tipo_origem_comercial': 'str',
            'id_grupo_origem_comercial': 'int',
            'nome_grupo_origem_comercial': 'str',
            'status': 'bool'
        }

        self.attribute_map = {
            'id': 'id',
            'nome': 'nome',
            'descricao': 'descricao',
            'produtos_origem': 'produtosOrigem',
            'id_estabelecimento': 'idEstabelecimento',
            'id_tipo_origem_comercial': 'idTipoOrigemComercial',
            'nome_tipo_origem_comercial': 'nomeTipoOrigemComercial',
            'id_grupo_origem_comercial': 'idGrupoOrigemComercial',
            'nome_grupo_origem_comercial': 'nomeGrupoOrigemComercial',
            'status': 'status'
        }

        self._id = None
        self._nome = None
        self._descricao = None
        self._produtos_origem = None
        self._id_estabelecimento = None
        self._id_tipo_origem_comercial = None
        self._nome_tipo_origem_comercial = None
        self._id_grupo_origem_comercial = None
        self._nome_grupo_origem_comercial = None
        self._status = None

    @property
    def id(self):
        """
        Gets the id of this OrigemComercialResponse.
        C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da Origem Comercial

        :return: The id of this OrigemComercialResponse.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this OrigemComercialResponse.
        C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da Origem Comercial

        :param id: The id of this OrigemComercialResponse.
        :type: int
        """
        self._id = id

    @property
    def nome(self):
        """
        Gets the nome of this OrigemComercialResponse.
        Nome da origem comercial

        :return: The nome of this OrigemComercialResponse.
        :rtype: str
        """
        return self._nome

    @nome.setter
    def nome(self, nome):
        """
        Sets the nome of this OrigemComercialResponse.
        Nome da origem comercial

        :param nome: The nome of this OrigemComercialResponse.
        :type: str
        """
        self._nome = nome

    @property
    def descricao(self):
        """
        Gets the descricao of this OrigemComercialResponse.
        Descri\u00C3\u00A7\u00C3\u00A3o completa do nome da Origem Comercial

        :return: The descricao of this OrigemComercialResponse.
        :rtype: str
        """
        return self._descricao

    @descricao.setter
    def descricao(self, descricao):
        """
        Sets the descricao of this OrigemComercialResponse.
        Descri\u00C3\u00A7\u00C3\u00A3o completa do nome da Origem Comercial

        :param descricao: The descricao of this OrigemComercialResponse.
        :type: str
        """
        self._descricao = descricao

    @property
    def produtos_origem(self):
        """
        Gets the produtos_origem of this OrigemComercialResponse.
        Lista de  ProdutosOrigem associados \u00C3\u00A0 Origem comercial

        :return: The produtos_origem of this OrigemComercialResponse.
        :rtype: list[ProdutoOrigemResponse]
        """
        return self._produtos_origem

    @produtos_origem.setter
    def produtos_origem(self, produtos_origem):
        """
        Sets the produtos_origem of this OrigemComercialResponse.
        Lista de  ProdutosOrigem associados \u00C3\u00A0 Origem comercial

        :param produtos_origem: The produtos_origem of this OrigemComercialResponse.
        :type: list[ProdutoOrigemResponse]
        """
        self._produtos_origem = produtos_origem

    @property
    def id_estabelecimento(self):
        """
        Gets the id_estabelecimento of this OrigemComercialResponse.
        C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o do Estabelecimento

        :return: The id_estabelecimento of this OrigemComercialResponse.
        :rtype: int
        """
        return self._id_estabelecimento

    @id_estabelecimento.setter
    def id_estabelecimento(self, id_estabelecimento):
        """
        Sets the id_estabelecimento of this OrigemComercialResponse.
        C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o do Estabelecimento

        :param id_estabelecimento: The id_estabelecimento of this OrigemComercialResponse.
        :type: int
        """
        self._id_estabelecimento = id_estabelecimento

    @property
    def id_tipo_origem_comercial(self):
        """
        Gets the id_tipo_origem_comercial of this OrigemComercialResponse.
        C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o do Tipo da Origem Comercial

        :return: The id_tipo_origem_comercial of this OrigemComercialResponse.
        :rtype: int
        """
        return self._id_tipo_origem_comercial

    @id_tipo_origem_comercial.setter
    def id_tipo_origem_comercial(self, id_tipo_origem_comercial):
        """
        Sets the id_tipo_origem_comercial of this OrigemComercialResponse.
        C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o do Tipo da Origem Comercial

        :param id_tipo_origem_comercial: The id_tipo_origem_comercial of this OrigemComercialResponse.
        :type: int
        """
        self._id_tipo_origem_comercial = id_tipo_origem_comercial

    @property
    def nome_tipo_origem_comercial(self):
        """
        Gets the nome_tipo_origem_comercial of this OrigemComercialResponse.
        Nome do Tipo da Origem Comercial

        :return: The nome_tipo_origem_comercial of this OrigemComercialResponse.
        :rtype: str
        """
        return self._nome_tipo_origem_comercial

    @nome_tipo_origem_comercial.setter
    def nome_tipo_origem_comercial(self, nome_tipo_origem_comercial):
        """
        Sets the nome_tipo_origem_comercial of this OrigemComercialResponse.
        Nome do Tipo da Origem Comercial

        :param nome_tipo_origem_comercial: The nome_tipo_origem_comercial of this OrigemComercialResponse.
        :type: str
        """
        self._nome_tipo_origem_comercial = nome_tipo_origem_comercial

    @property
    def id_grupo_origem_comercial(self):
        """
        Gets the id_grupo_origem_comercial of this OrigemComercialResponse.
        C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o do Grupo a qual a Origem Comercial pertence

        :return: The id_grupo_origem_comercial of this OrigemComercialResponse.
        :rtype: int
        """
        return self._id_grupo_origem_comercial

    @id_grupo_origem_comercial.setter
    def id_grupo_origem_comercial(self, id_grupo_origem_comercial):
        """
        Sets the id_grupo_origem_comercial of this OrigemComercialResponse.
        C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o do Grupo a qual a Origem Comercial pertence

        :param id_grupo_origem_comercial: The id_grupo_origem_comercial of this OrigemComercialResponse.
        :type: int
        """
        self._id_grupo_origem_comercial = id_grupo_origem_comercial

    @property
    def nome_grupo_origem_comercial(self):
        """
        Gets the nome_grupo_origem_comercial of this OrigemComercialResponse.
        Nome do Grupo a qual a Origem Comercial pertence

        :return: The nome_grupo_origem_comercial of this OrigemComercialResponse.
        :rtype: str
        """
        return self._nome_grupo_origem_comercial

    @nome_grupo_origem_comercial.setter
    def nome_grupo_origem_comercial(self, nome_grupo_origem_comercial):
        """
        Sets the nome_grupo_origem_comercial of this OrigemComercialResponse.
        Nome do Grupo a qual a Origem Comercial pertence

        :param nome_grupo_origem_comercial: The nome_grupo_origem_comercial of this OrigemComercialResponse.
        :type: str
        """
        self._nome_grupo_origem_comercial = nome_grupo_origem_comercial

    @property
    def status(self):
        """
        Gets the status of this OrigemComercialResponse.
        Status da origem comercial

        :return: The status of this OrigemComercialResponse.
        :rtype: bool
        """
        return self._status

    @status.setter
    def status(self, status):
        """
        Sets the status of this OrigemComercialResponse.
        Status da origem comercial

        :param status: The status of this OrigemComercialResponse.
        :type: bool
        """
        self._status = status

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

