# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class ContaDebitoRecorrenteResponse(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        ContaDebitoRecorrenteResponse - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'ativo': 'bool',
            'data_hora_fim': 'str',
            'data_hora_inicio': 'str',
            'data_hora_ultimo_pagamento': 'str',
            'descricao': 'str',
            'id_conta': 'int',
            'id_conta_debito_recorrente': 'int',
            'id_tipo_debito_recorrente': 'int',
            'id_usuario': 'int',
            'login': 'str',
            'numero_parcelas': 'int',
            'origem': 'str'
        }

        self.attribute_map = {
            'ativo': 'ativo',
            'data_hora_fim': 'dataHoraFim',
            'data_hora_inicio': 'dataHoraInicio',
            'data_hora_ultimo_pagamento': 'dataHoraUltimoPagamento',
            'descricao': 'descricao',
            'id_conta': 'idConta',
            'id_conta_debito_recorrente': 'idContaDebitoRecorrente',
            'id_tipo_debito_recorrente': 'idTipoDebitoRecorrente',
            'id_usuario': 'idUsuario',
            'login': 'login',
            'numero_parcelas': 'numeroParcelas',
            'origem': 'origem'
        }

        self._ativo = None
        self._data_hora_fim = None
        self._data_hora_inicio = None
        self._data_hora_ultimo_pagamento = None
        self._descricao = None
        self._id_conta = None
        self._id_conta_debito_recorrente = None
        self._id_tipo_debito_recorrente = None
        self._id_usuario = None
        self._login = None
        self._numero_parcelas = None
        self._origem = None

    @property
    def ativo(self):
        """
        Gets the ativo of this ContaDebitoRecorrenteResponse.
        {{{conta_debito_recorrente_response_ativo_value}}}

        :return: The ativo of this ContaDebitoRecorrenteResponse.
        :rtype: bool
        """
        return self._ativo

    @ativo.setter
    def ativo(self, ativo):
        """
        Sets the ativo of this ContaDebitoRecorrenteResponse.
        {{{conta_debito_recorrente_response_ativo_value}}}

        :param ativo: The ativo of this ContaDebitoRecorrenteResponse.
        :type: bool
        """
        self._ativo = ativo

    @property
    def data_hora_fim(self):
        """
        Gets the data_hora_fim of this ContaDebitoRecorrenteResponse.
        {{{conta_debito_recorrente_response_data_hora_fim_value}}}

        :return: The data_hora_fim of this ContaDebitoRecorrenteResponse.
        :rtype: str
        """
        return self._data_hora_fim

    @data_hora_fim.setter
    def data_hora_fim(self, data_hora_fim):
        """
        Sets the data_hora_fim of this ContaDebitoRecorrenteResponse.
        {{{conta_debito_recorrente_response_data_hora_fim_value}}}

        :param data_hora_fim: The data_hora_fim of this ContaDebitoRecorrenteResponse.
        :type: str
        """
        self._data_hora_fim = data_hora_fim

    @property
    def data_hora_inicio(self):
        """
        Gets the data_hora_inicio of this ContaDebitoRecorrenteResponse.
        {{{conta_debito_recorrente_response_data_hora_inicio_value}}}

        :return: The data_hora_inicio of this ContaDebitoRecorrenteResponse.
        :rtype: str
        """
        return self._data_hora_inicio

    @data_hora_inicio.setter
    def data_hora_inicio(self, data_hora_inicio):
        """
        Sets the data_hora_inicio of this ContaDebitoRecorrenteResponse.
        {{{conta_debito_recorrente_response_data_hora_inicio_value}}}

        :param data_hora_inicio: The data_hora_inicio of this ContaDebitoRecorrenteResponse.
        :type: str
        """
        self._data_hora_inicio = data_hora_inicio

    @property
    def data_hora_ultimo_pagamento(self):
        """
        Gets the data_hora_ultimo_pagamento of this ContaDebitoRecorrenteResponse.
        {{{conta_debito_recorrente_response_data_hora_ultimo_pagamento_value}}}

        :return: The data_hora_ultimo_pagamento of this ContaDebitoRecorrenteResponse.
        :rtype: str
        """
        return self._data_hora_ultimo_pagamento

    @data_hora_ultimo_pagamento.setter
    def data_hora_ultimo_pagamento(self, data_hora_ultimo_pagamento):
        """
        Sets the data_hora_ultimo_pagamento of this ContaDebitoRecorrenteResponse.
        {{{conta_debito_recorrente_response_data_hora_ultimo_pagamento_value}}}

        :param data_hora_ultimo_pagamento: The data_hora_ultimo_pagamento of this ContaDebitoRecorrenteResponse.
        :type: str
        """
        self._data_hora_ultimo_pagamento = data_hora_ultimo_pagamento

    @property
    def descricao(self):
        """
        Gets the descricao of this ContaDebitoRecorrenteResponse.
        {{{conta_debito_recorrente_response_descricao_value}}}

        :return: The descricao of this ContaDebitoRecorrenteResponse.
        :rtype: str
        """
        return self._descricao

    @descricao.setter
    def descricao(self, descricao):
        """
        Sets the descricao of this ContaDebitoRecorrenteResponse.
        {{{conta_debito_recorrente_response_descricao_value}}}

        :param descricao: The descricao of this ContaDebitoRecorrenteResponse.
        :type: str
        """
        self._descricao = descricao

    @property
    def id_conta(self):
        """
        Gets the id_conta of this ContaDebitoRecorrenteResponse.
        {{{conta_debito_recorrente_response_id_conta_value}}}

        :return: The id_conta of this ContaDebitoRecorrenteResponse.
        :rtype: int
        """
        return self._id_conta

    @id_conta.setter
    def id_conta(self, id_conta):
        """
        Sets the id_conta of this ContaDebitoRecorrenteResponse.
        {{{conta_debito_recorrente_response_id_conta_value}}}

        :param id_conta: The id_conta of this ContaDebitoRecorrenteResponse.
        :type: int
        """
        self._id_conta = id_conta

    @property
    def id_conta_debito_recorrente(self):
        """
        Gets the id_conta_debito_recorrente of this ContaDebitoRecorrenteResponse.
        {{{conta_debito_recorrente_response_id_conta_debito_recorrente_value}}}

        :return: The id_conta_debito_recorrente of this ContaDebitoRecorrenteResponse.
        :rtype: int
        """
        return self._id_conta_debito_recorrente

    @id_conta_debito_recorrente.setter
    def id_conta_debito_recorrente(self, id_conta_debito_recorrente):
        """
        Sets the id_conta_debito_recorrente of this ContaDebitoRecorrenteResponse.
        {{{conta_debito_recorrente_response_id_conta_debito_recorrente_value}}}

        :param id_conta_debito_recorrente: The id_conta_debito_recorrente of this ContaDebitoRecorrenteResponse.
        :type: int
        """
        self._id_conta_debito_recorrente = id_conta_debito_recorrente

    @property
    def id_tipo_debito_recorrente(self):
        """
        Gets the id_tipo_debito_recorrente of this ContaDebitoRecorrenteResponse.
        {{{conta_debito_recorrente_response_id_tipo_debito_recorrente_value}}}

        :return: The id_tipo_debito_recorrente of this ContaDebitoRecorrenteResponse.
        :rtype: int
        """
        return self._id_tipo_debito_recorrente

    @id_tipo_debito_recorrente.setter
    def id_tipo_debito_recorrente(self, id_tipo_debito_recorrente):
        """
        Sets the id_tipo_debito_recorrente of this ContaDebitoRecorrenteResponse.
        {{{conta_debito_recorrente_response_id_tipo_debito_recorrente_value}}}

        :param id_tipo_debito_recorrente: The id_tipo_debito_recorrente of this ContaDebitoRecorrenteResponse.
        :type: int
        """
        self._id_tipo_debito_recorrente = id_tipo_debito_recorrente

    @property
    def id_usuario(self):
        """
        Gets the id_usuario of this ContaDebitoRecorrenteResponse.
        {{{conta_debito_recorrente_response_id_usuario_value}}}

        :return: The id_usuario of this ContaDebitoRecorrenteResponse.
        :rtype: int
        """
        return self._id_usuario

    @id_usuario.setter
    def id_usuario(self, id_usuario):
        """
        Sets the id_usuario of this ContaDebitoRecorrenteResponse.
        {{{conta_debito_recorrente_response_id_usuario_value}}}

        :param id_usuario: The id_usuario of this ContaDebitoRecorrenteResponse.
        :type: int
        """
        self._id_usuario = id_usuario

    @property
    def login(self):
        """
        Gets the login of this ContaDebitoRecorrenteResponse.
        {{{conta_debito_recorrente_response_id_login_value}}}

        :return: The login of this ContaDebitoRecorrenteResponse.
        :rtype: str
        """
        return self._login

    @login.setter
    def login(self, login):
        """
        Sets the login of this ContaDebitoRecorrenteResponse.
        {{{conta_debito_recorrente_response_id_login_value}}}

        :param login: The login of this ContaDebitoRecorrenteResponse.
        :type: str
        """
        self._login = login

    @property
    def numero_parcelas(self):
        """
        Gets the numero_parcelas of this ContaDebitoRecorrenteResponse.
        {{{conta_debito_recorrente_response_num_parcelas_value}}}

        :return: The numero_parcelas of this ContaDebitoRecorrenteResponse.
        :rtype: int
        """
        return self._numero_parcelas

    @numero_parcelas.setter
    def numero_parcelas(self, numero_parcelas):
        """
        Sets the numero_parcelas of this ContaDebitoRecorrenteResponse.
        {{{conta_debito_recorrente_response_num_parcelas_value}}}

        :param numero_parcelas: The numero_parcelas of this ContaDebitoRecorrenteResponse.
        :type: int
        """
        self._numero_parcelas = numero_parcelas

    @property
    def origem(self):
        """
        Gets the origem of this ContaDebitoRecorrenteResponse.
        {{{conta_debito_recorrente_response_origem_value}}}

        :return: The origem of this ContaDebitoRecorrenteResponse.
        :rtype: str
        """
        return self._origem

    @origem.setter
    def origem(self, origem):
        """
        Sets the origem of this ContaDebitoRecorrenteResponse.
        {{{conta_debito_recorrente_response_origem_value}}}

        :param origem: The origem of this ContaDebitoRecorrenteResponse.
        :type: str
        """
        self._origem = origem

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

