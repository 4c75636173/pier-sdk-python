# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class ArquivoAUDResponse(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        ArquivoAUDResponse - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'rev': 'int',
            'rev_type': 'int',
            'id': 'int',
            'nome': 'str',
            'id_resposta_acesso_digital': 'str',
            'data_hora_resposta_acesso_digital': 'str',
            'id_resposta_neurotech': 'str',
            'data_hora_resposta_neurotech': 'str',
            'uri': 'str',
            'data_hora_inclusao': 'str',
            'data_hora_alteracao': 'str',
            'extensao': 'str',
            'parametros': 'list[ArquivoParametroAUDResponse]'
        }

        self.attribute_map = {
            'rev': 'rev',
            'rev_type': 'revType',
            'id': 'id',
            'nome': 'nome',
            'id_resposta_acesso_digital': 'idRespostaAcessoDigital',
            'data_hora_resposta_acesso_digital': 'dataHoraRespostaAcessoDigital',
            'id_resposta_neurotech': 'idRespostaNeurotech',
            'data_hora_resposta_neurotech': 'dataHoraRespostaNeurotech',
            'uri': 'uri',
            'data_hora_inclusao': 'dataHoraInclusao',
            'data_hora_alteracao': 'dataHoraAlteracao',
            'extensao': 'extensao',
            'parametros': 'parametros'
        }

        self._rev = None
        self._rev_type = None
        self._id = None
        self._nome = None
        self._id_resposta_acesso_digital = None
        self._data_hora_resposta_acesso_digital = None
        self._id_resposta_neurotech = None
        self._data_hora_resposta_neurotech = None
        self._uri = None
        self._data_hora_inclusao = None
        self._data_hora_alteracao = None
        self._extensao = None
        self._parametros = None

    @property
    def rev(self):
        """
        Gets the rev of this ArquivoAUDResponse.
        Identificador da auditoria arquivo

        :return: The rev of this ArquivoAUDResponse.
        :rtype: int
        """
        return self._rev

    @rev.setter
    def rev(self, rev):
        """
        Sets the rev of this ArquivoAUDResponse.
        Identificador da auditoria arquivo

        :param rev: The rev of this ArquivoAUDResponse.
        :type: int
        """
        self._rev = rev

    @property
    def rev_type(self):
        """
        Gets the rev_type of this ArquivoAUDResponse.
        Identificador do tipo de auditoria (0 - Criado, 1 - Alterado, 2 - Exclu\u00C3\u00ADdo)

        :return: The rev_type of this ArquivoAUDResponse.
        :rtype: int
        """
        return self._rev_type

    @rev_type.setter
    def rev_type(self, rev_type):
        """
        Sets the rev_type of this ArquivoAUDResponse.
        Identificador do tipo de auditoria (0 - Criado, 1 - Alterado, 2 - Exclu\u00C3\u00ADdo)

        :param rev_type: The rev_type of this ArquivoAUDResponse.
        :type: int
        """
        self._rev_type = rev_type

    @property
    def id(self):
        """
        Gets the id of this ArquivoAUDResponse.
        Identificador do arquivo auditado

        :return: The id of this ArquivoAUDResponse.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this ArquivoAUDResponse.
        Identificador do arquivo auditado

        :param id: The id of this ArquivoAUDResponse.
        :type: int
        """
        self._id = id

    @property
    def nome(self):
        """
        Gets the nome of this ArquivoAUDResponse.
        Nome do arquivo auditado

        :return: The nome of this ArquivoAUDResponse.
        :rtype: str
        """
        return self._nome

    @nome.setter
    def nome(self, nome):
        """
        Sets the nome of this ArquivoAUDResponse.
        Nome do arquivo auditado

        :param nome: The nome of this ArquivoAUDResponse.
        :type: str
        """
        self._nome = nome

    @property
    def id_resposta_acesso_digital(self):
        """
        Gets the id_resposta_acesso_digital of this ArquivoAUDResponse.
        Identificador da resposta da Acesso Digital

        :return: The id_resposta_acesso_digital of this ArquivoAUDResponse.
        :rtype: str
        """
        return self._id_resposta_acesso_digital

    @id_resposta_acesso_digital.setter
    def id_resposta_acesso_digital(self, id_resposta_acesso_digital):
        """
        Sets the id_resposta_acesso_digital of this ArquivoAUDResponse.
        Identificador da resposta da Acesso Digital

        :param id_resposta_acesso_digital: The id_resposta_acesso_digital of this ArquivoAUDResponse.
        :type: str
        """
        self._id_resposta_acesso_digital = id_resposta_acesso_digital

    @property
    def data_hora_resposta_acesso_digital(self):
        """
        Gets the data_hora_resposta_acesso_digital of this ArquivoAUDResponse.
        Data de resposta da Acesso Digital

        :return: The data_hora_resposta_acesso_digital of this ArquivoAUDResponse.
        :rtype: str
        """
        return self._data_hora_resposta_acesso_digital

    @data_hora_resposta_acesso_digital.setter
    def data_hora_resposta_acesso_digital(self, data_hora_resposta_acesso_digital):
        """
        Sets the data_hora_resposta_acesso_digital of this ArquivoAUDResponse.
        Data de resposta da Acesso Digital

        :param data_hora_resposta_acesso_digital: The data_hora_resposta_acesso_digital of this ArquivoAUDResponse.
        :type: str
        """
        self._data_hora_resposta_acesso_digital = data_hora_resposta_acesso_digital

    @property
    def id_resposta_neurotech(self):
        """
        Gets the id_resposta_neurotech of this ArquivoAUDResponse.
        Identificador da resposta da Neurotech

        :return: The id_resposta_neurotech of this ArquivoAUDResponse.
        :rtype: str
        """
        return self._id_resposta_neurotech

    @id_resposta_neurotech.setter
    def id_resposta_neurotech(self, id_resposta_neurotech):
        """
        Sets the id_resposta_neurotech of this ArquivoAUDResponse.
        Identificador da resposta da Neurotech

        :param id_resposta_neurotech: The id_resposta_neurotech of this ArquivoAUDResponse.
        :type: str
        """
        self._id_resposta_neurotech = id_resposta_neurotech

    @property
    def data_hora_resposta_neurotech(self):
        """
        Gets the data_hora_resposta_neurotech of this ArquivoAUDResponse.
        Data de resposta da Neurotech

        :return: The data_hora_resposta_neurotech of this ArquivoAUDResponse.
        :rtype: str
        """
        return self._data_hora_resposta_neurotech

    @data_hora_resposta_neurotech.setter
    def data_hora_resposta_neurotech(self, data_hora_resposta_neurotech):
        """
        Sets the data_hora_resposta_neurotech of this ArquivoAUDResponse.
        Data de resposta da Neurotech

        :param data_hora_resposta_neurotech: The data_hora_resposta_neurotech of this ArquivoAUDResponse.
        :type: str
        """
        self._data_hora_resposta_neurotech = data_hora_resposta_neurotech

    @property
    def uri(self):
        """
        Gets the uri of this ArquivoAUDResponse.
        Uri de acesso

        :return: The uri of this ArquivoAUDResponse.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """
        Sets the uri of this ArquivoAUDResponse.
        Uri de acesso

        :param uri: The uri of this ArquivoAUDResponse.
        :type: str
        """
        self._uri = uri

    @property
    def data_hora_inclusao(self):
        """
        Gets the data_hora_inclusao of this ArquivoAUDResponse.
        Data de inclus\u00C3\u00A3o do arquivo auditado

        :return: The data_hora_inclusao of this ArquivoAUDResponse.
        :rtype: str
        """
        return self._data_hora_inclusao

    @data_hora_inclusao.setter
    def data_hora_inclusao(self, data_hora_inclusao):
        """
        Sets the data_hora_inclusao of this ArquivoAUDResponse.
        Data de inclus\u00C3\u00A3o do arquivo auditado

        :param data_hora_inclusao: The data_hora_inclusao of this ArquivoAUDResponse.
        :type: str
        """
        self._data_hora_inclusao = data_hora_inclusao

    @property
    def data_hora_alteracao(self):
        """
        Gets the data_hora_alteracao of this ArquivoAUDResponse.
        Data de altera\u00C3\u00A7\u00C3\u00A3o do arquivo auditado

        :return: The data_hora_alteracao of this ArquivoAUDResponse.
        :rtype: str
        """
        return self._data_hora_alteracao

    @data_hora_alteracao.setter
    def data_hora_alteracao(self, data_hora_alteracao):
        """
        Sets the data_hora_alteracao of this ArquivoAUDResponse.
        Data de altera\u00C3\u00A7\u00C3\u00A3o do arquivo auditado

        :param data_hora_alteracao: The data_hora_alteracao of this ArquivoAUDResponse.
        :type: str
        """
        self._data_hora_alteracao = data_hora_alteracao

    @property
    def extensao(self):
        """
        Gets the extensao of this ArquivoAUDResponse.
        Extens\u00C3\u00A3o do arquivo auditado

        :return: The extensao of this ArquivoAUDResponse.
        :rtype: str
        """
        return self._extensao

    @extensao.setter
    def extensao(self, extensao):
        """
        Sets the extensao of this ArquivoAUDResponse.
        Extens\u00C3\u00A3o do arquivo auditado

        :param extensao: The extensao of this ArquivoAUDResponse.
        :type: str
        """
        self._extensao = extensao

    @property
    def parametros(self):
        """
        Gets the parametros of this ArquivoAUDResponse.
        Lista  de par\u00C3\u00A2metros do arquivo auditado

        :return: The parametros of this ArquivoAUDResponse.
        :rtype: list[ArquivoParametroAUDResponse]
        """
        return self._parametros

    @parametros.setter
    def parametros(self, parametros):
        """
        Sets the parametros of this ArquivoAUDResponse.
        Lista  de par\u00C3\u00A2metros do arquivo auditado

        :param parametros: The parametros of this ArquivoAUDResponse.
        :type: list[ArquivoParametroAUDResponse]
        """
        self._parametros = parametros

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

