# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class DadosCartaoResponse(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        DadosCartaoResponse - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'flag_virtual': 'int',
            'numero_cartao': 'str',
            'data_validade': 'str',
            'cvv2': 'str',
            'nome_plastico': 'str',
            'id_conta': 'int',
            'id_cartao': 'int',
            'numero_agencia': 'int',
            'numero_conta_corente': 'str',
            'id_status_conta': 'int',
            'status_conta': 'str',
            'id_status_cartao': 'int',
            'status_cartao': 'str'
        }

        self.attribute_map = {
            'flag_virtual': 'flagVirtual',
            'numero_cartao': 'numeroCartao',
            'data_validade': 'dataValidade',
            'cvv2': 'cvv2',
            'nome_plastico': 'nomePlastico',
            'id_conta': 'idConta',
            'id_cartao': 'idCartao',
            'numero_agencia': 'numeroAgencia',
            'numero_conta_corente': 'numeroContaCorente',
            'id_status_conta': 'idStatusConta',
            'status_conta': 'statusConta',
            'id_status_cartao': 'idStatusCartao',
            'status_cartao': 'statusCartao'
        }

        self._flag_virtual = None
        self._numero_cartao = None
        self._data_validade = None
        self._cvv2 = None
        self._nome_plastico = None
        self._id_conta = None
        self._id_cartao = None
        self._numero_agencia = None
        self._numero_conta_corente = None
        self._id_status_conta = None
        self._status_conta = None
        self._id_status_cartao = None
        self._status_cartao = None

    @property
    def flag_virtual(self):
        """
        Gets the flag_virtual of this DadosCartaoResponse.


        :return: The flag_virtual of this DadosCartaoResponse.
        :rtype: int
        """
        return self._flag_virtual

    @flag_virtual.setter
    def flag_virtual(self, flag_virtual):
        """
        Sets the flag_virtual of this DadosCartaoResponse.


        :param flag_virtual: The flag_virtual of this DadosCartaoResponse.
        :type: int
        """
        self._flag_virtual = flag_virtual

    @property
    def numero_cartao(self):
        """
        Gets the numero_cartao of this DadosCartaoResponse.
        N\u00FAmero do cart\u00E3o.

        :return: The numero_cartao of this DadosCartaoResponse.
        :rtype: str
        """
        return self._numero_cartao

    @numero_cartao.setter
    def numero_cartao(self, numero_cartao):
        """
        Sets the numero_cartao of this DadosCartaoResponse.
        N\u00FAmero do cart\u00E3o.

        :param numero_cartao: The numero_cartao of this DadosCartaoResponse.
        :type: str
        """
        self._numero_cartao = numero_cartao

    @property
    def data_validade(self):
        """
        Gets the data_validade of this DadosCartaoResponse.
        Data de validade.

        :return: The data_validade of this DadosCartaoResponse.
        :rtype: str
        """
        return self._data_validade

    @data_validade.setter
    def data_validade(self, data_validade):
        """
        Sets the data_validade of this DadosCartaoResponse.
        Data de validade.

        :param data_validade: The data_validade of this DadosCartaoResponse.
        :type: str
        """
        self._data_validade = data_validade

    @property
    def cvv2(self):
        """
        Gets the cvv2 of this DadosCartaoResponse.
        CVV2 do cart\u00E3o.

        :return: The cvv2 of this DadosCartaoResponse.
        :rtype: str
        """
        return self._cvv2

    @cvv2.setter
    def cvv2(self, cvv2):
        """
        Sets the cvv2 of this DadosCartaoResponse.
        CVV2 do cart\u00E3o.

        :param cvv2: The cvv2 of this DadosCartaoResponse.
        :type: str
        """
        self._cvv2 = cvv2

    @property
    def nome_plastico(self):
        """
        Gets the nome_plastico of this DadosCartaoResponse.
        Nome do portador.

        :return: The nome_plastico of this DadosCartaoResponse.
        :rtype: str
        """
        return self._nome_plastico

    @nome_plastico.setter
    def nome_plastico(self, nome_plastico):
        """
        Sets the nome_plastico of this DadosCartaoResponse.
        Nome do portador.

        :param nome_plastico: The nome_plastico of this DadosCartaoResponse.
        :type: str
        """
        self._nome_plastico = nome_plastico

    @property
    def id_conta(self):
        """
        Gets the id_conta of this DadosCartaoResponse.
        Identificador da conta do portador.

        :return: The id_conta of this DadosCartaoResponse.
        :rtype: int
        """
        return self._id_conta

    @id_conta.setter
    def id_conta(self, id_conta):
        """
        Sets the id_conta of this DadosCartaoResponse.
        Identificador da conta do portador.

        :param id_conta: The id_conta of this DadosCartaoResponse.
        :type: int
        """
        self._id_conta = id_conta

    @property
    def id_cartao(self):
        """
        Gets the id_cartao of this DadosCartaoResponse.
        Identificador da cart\u00E3o do portador.

        :return: The id_cartao of this DadosCartaoResponse.
        :rtype: int
        """
        return self._id_cartao

    @id_cartao.setter
    def id_cartao(self, id_cartao):
        """
        Sets the id_cartao of this DadosCartaoResponse.
        Identificador da cart\u00E3o do portador.

        :param id_cartao: The id_cartao of this DadosCartaoResponse.
        :type: int
        """
        self._id_cartao = id_cartao

    @property
    def numero_agencia(self):
        """
        Gets the numero_agencia of this DadosCartaoResponse.
        Apresenta o n\u00FAmero da Ag\u00EAncia a ser impresso no Cart\u00E3o, quando aplic\u00E1vel.

        :return: The numero_agencia of this DadosCartaoResponse.
        :rtype: int
        """
        return self._numero_agencia

    @numero_agencia.setter
    def numero_agencia(self, numero_agencia):
        """
        Sets the numero_agencia of this DadosCartaoResponse.
        Apresenta o n\u00FAmero da Ag\u00EAncia a ser impresso no Cart\u00E3o, quando aplic\u00E1vel.

        :param numero_agencia: The numero_agencia of this DadosCartaoResponse.
        :type: int
        """
        self._numero_agencia = numero_agencia

    @property
    def numero_conta_corente(self):
        """
        Gets the numero_conta_corente of this DadosCartaoResponse.
        Apresenta o n\u00FAmero da Conta Corrente a ser impresso no Cart\u00E3o, quando aplic\u00E1vel.

        :return: The numero_conta_corente of this DadosCartaoResponse.
        :rtype: str
        """
        return self._numero_conta_corente

    @numero_conta_corente.setter
    def numero_conta_corente(self, numero_conta_corente):
        """
        Sets the numero_conta_corente of this DadosCartaoResponse.
        Apresenta o n\u00FAmero da Conta Corrente a ser impresso no Cart\u00E3o, quando aplic\u00E1vel.

        :param numero_conta_corente: The numero_conta_corente of this DadosCartaoResponse.
        :type: str
        """
        self._numero_conta_corente = numero_conta_corente

    @property
    def id_status_conta(self):
        """
        Gets the id_status_conta of this DadosCartaoResponse.
        Status da conta do portador.

        :return: The id_status_conta of this DadosCartaoResponse.
        :rtype: int
        """
        return self._id_status_conta

    @id_status_conta.setter
    def id_status_conta(self, id_status_conta):
        """
        Sets the id_status_conta of this DadosCartaoResponse.
        Status da conta do portador.

        :param id_status_conta: The id_status_conta of this DadosCartaoResponse.
        :type: int
        """
        self._id_status_conta = id_status_conta

    @property
    def status_conta(self):
        """
        Gets the status_conta of this DadosCartaoResponse.
        Descri\u00E7\u00E3o do status da conta do portador.

        :return: The status_conta of this DadosCartaoResponse.
        :rtype: str
        """
        return self._status_conta

    @status_conta.setter
    def status_conta(self, status_conta):
        """
        Sets the status_conta of this DadosCartaoResponse.
        Descri\u00E7\u00E3o do status da conta do portador.

        :param status_conta: The status_conta of this DadosCartaoResponse.
        :type: str
        """
        self._status_conta = status_conta

    @property
    def id_status_cartao(self):
        """
        Gets the id_status_cartao of this DadosCartaoResponse.
        Status do cart\u00E3o.

        :return: The id_status_cartao of this DadosCartaoResponse.
        :rtype: int
        """
        return self._id_status_cartao

    @id_status_cartao.setter
    def id_status_cartao(self, id_status_cartao):
        """
        Sets the id_status_cartao of this DadosCartaoResponse.
        Status do cart\u00E3o.

        :param id_status_cartao: The id_status_cartao of this DadosCartaoResponse.
        :type: int
        """
        self._id_status_cartao = id_status_cartao

    @property
    def status_cartao(self):
        """
        Gets the status_cartao of this DadosCartaoResponse.
        Descri\u00E7\u00E3o do status do cart\u00E3o.

        :return: The status_cartao of this DadosCartaoResponse.
        :rtype: str
        """
        return self._status_cartao

    @status_cartao.setter
    def status_cartao(self, status_cartao):
        """
        Sets the status_cartao of this DadosCartaoResponse.
        Descri\u00E7\u00E3o do status do cart\u00E3o.

        :param status_cartao: The status_cartao of this DadosCartaoResponse.
        :type: str
        """
        self._status_cartao = status_cartao

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

