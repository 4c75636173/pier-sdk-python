# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class TransacaoCorrenteResponse(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        TransacaoCorrenteResponse - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'ultima_parcela_lancada': 'int',
            'id': 'int',
            'id_conta': 'int',
            'id_tipo_registro': 'int',
            'ordem': 'int',
            'id_transacao': 'int',
            'descricao': 'str',
            'status': 'int',
            'descricao_status': 'str',
            'valor': 'float',
            'valor_dolar': 'float',
            'quantidade_parcelas': 'int',
            'valor_parcela': 'float',
            'data_evento': 'str',
            'estabelecimento': 'str',
            'flag_credito': 'int',
            'tipo_estabelecimento': 'str',
            'id_grupo_mcc': 'int',
            'flag_solicitou_contestacao': 'int'
        }

        self.attribute_map = {
            'ultima_parcela_lancada': 'ultimaParcelaLancada',
            'id': 'id',
            'id_conta': 'idConta',
            'id_tipo_registro': 'idTipoRegistro',
            'ordem': 'ordem',
            'id_transacao': 'idTransacao',
            'descricao': 'descricao',
            'status': 'status',
            'descricao_status': 'descricaoStatus',
            'valor': 'valor',
            'valor_dolar': 'valorDolar',
            'quantidade_parcelas': 'quantidadeParcelas',
            'valor_parcela': 'valorParcela',
            'data_evento': 'dataEvento',
            'estabelecimento': 'estabelecimento',
            'flag_credito': 'flagCredito',
            'tipo_estabelecimento': 'tipoEstabelecimento',
            'id_grupo_mcc': 'idGrupoMCC',
            'flag_solicitou_contestacao': 'flagSolicitouContestacao'
        }

        self._ultima_parcela_lancada = None
        self._id = None
        self._id_conta = None
        self._id_tipo_registro = None
        self._ordem = None
        self._id_transacao = None
        self._descricao = None
        self._status = None
        self._descricao_status = None
        self._valor = None
        self._valor_dolar = None
        self._quantidade_parcelas = None
        self._valor_parcela = None
        self._data_evento = None
        self._estabelecimento = None
        self._flag_credito = None
        self._tipo_estabelecimento = None
        self._id_grupo_mcc = None
        self._flag_solicitou_contestacao = None

    @property
    def ultima_parcela_lancada(self):
        """
        Gets the ultima_parcela_lancada of this TransacaoCorrenteResponse.


        :return: The ultima_parcela_lancada of this TransacaoCorrenteResponse.
        :rtype: int
        """
        return self._ultima_parcela_lancada

    @ultima_parcela_lancada.setter
    def ultima_parcela_lancada(self, ultima_parcela_lancada):
        """
        Sets the ultima_parcela_lancada of this TransacaoCorrenteResponse.


        :param ultima_parcela_lancada: The ultima_parcela_lancada of this TransacaoCorrenteResponse.
        :type: int
        """
        self._ultima_parcela_lancada = ultima_parcela_lancada

    @property
    def id(self):
        """
        Gets the id of this TransacaoCorrenteResponse.
        C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da timeline (idTimeline).

        :return: The id of this TransacaoCorrenteResponse.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this TransacaoCorrenteResponse.
        C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da timeline (idTimeline).

        :param id: The id of this TransacaoCorrenteResponse.
        :type: int
        """
        self._id = id

    @property
    def id_conta(self):
        """
        Gets the id_conta of this TransacaoCorrenteResponse.
        C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta (id).

        :return: The id_conta of this TransacaoCorrenteResponse.
        :rtype: int
        """
        return self._id_conta

    @id_conta.setter
    def id_conta(self, id_conta):
        """
        Sets the id_conta of this TransacaoCorrenteResponse.
        C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta (id).

        :param id_conta: The id_conta of this TransacaoCorrenteResponse.
        :type: int
        """
        self._id_conta = id_conta

    @property
    def id_tipo_registro(self):
        """
        Gets the id_tipo_registro of this TransacaoCorrenteResponse.
        C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o do tipo de transacao (id).

        :return: The id_tipo_registro of this TransacaoCorrenteResponse.
        :rtype: int
        """
        return self._id_tipo_registro

    @id_tipo_registro.setter
    def id_tipo_registro(self, id_tipo_registro):
        """
        Sets the id_tipo_registro of this TransacaoCorrenteResponse.
        C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o do tipo de transacao (id).

        :param id_tipo_registro: The id_tipo_registro of this TransacaoCorrenteResponse.
        :type: int
        """
        self._id_tipo_registro = id_tipo_registro

    @property
    def ordem(self):
        """
        Gets the ordem of this TransacaoCorrenteResponse.
        Representa\u00C3\u00A7\u00C3\u00A3o da ordena\u00C3\u00A7\u00C3\u00A3o da transacao (id).

        :return: The ordem of this TransacaoCorrenteResponse.
        :rtype: int
        """
        return self._ordem

    @ordem.setter
    def ordem(self, ordem):
        """
        Sets the ordem of this TransacaoCorrenteResponse.
        Representa\u00C3\u00A7\u00C3\u00A3o da ordena\u00C3\u00A7\u00C3\u00A3o da transacao (id).

        :param ordem: The ordem of this TransacaoCorrenteResponse.
        :type: int
        """
        self._ordem = ordem

    @property
    def id_transacao(self):
        """
        Gets the id_transacao of this TransacaoCorrenteResponse.
        C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da transacao (id).

        :return: The id_transacao of this TransacaoCorrenteResponse.
        :rtype: int
        """
        return self._id_transacao

    @id_transacao.setter
    def id_transacao(self, id_transacao):
        """
        Sets the id_transacao of this TransacaoCorrenteResponse.
        C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da transacao (id).

        :param id_transacao: The id_transacao of this TransacaoCorrenteResponse.
        :type: int
        """
        self._id_transacao = id_transacao

    @property
    def descricao(self):
        """
        Gets the descricao of this TransacaoCorrenteResponse.
        Atributo que representa a descri\u00C3\u00A7\u00C3\u00A3o da transa\u00C3\u00A7\u00C3\u00A3o.

        :return: The descricao of this TransacaoCorrenteResponse.
        :rtype: str
        """
        return self._descricao

    @descricao.setter
    def descricao(self, descricao):
        """
        Sets the descricao of this TransacaoCorrenteResponse.
        Atributo que representa a descri\u00C3\u00A7\u00C3\u00A3o da transa\u00C3\u00A7\u00C3\u00A3o.

        :param descricao: The descricao of this TransacaoCorrenteResponse.
        :type: str
        """
        self._descricao = descricao

    @property
    def status(self):
        """
        Gets the status of this TransacaoCorrenteResponse.
        Atributo que representa o c\u00C3\u00B3digo identificador do status da transa\u00C3\u00A7\u00C3\u00A3o.

        :return: The status of this TransacaoCorrenteResponse.
        :rtype: int
        """
        return self._status

    @status.setter
    def status(self, status):
        """
        Sets the status of this TransacaoCorrenteResponse.
        Atributo que representa o c\u00C3\u00B3digo identificador do status da transa\u00C3\u00A7\u00C3\u00A3o.

        :param status: The status of this TransacaoCorrenteResponse.
        :type: int
        """
        self._status = status

    @property
    def descricao_status(self):
        """
        Gets the descricao_status of this TransacaoCorrenteResponse.
        Atributo que representa a descri\u00C3\u00A7\u00C3\u00A3o do status da transa\u00C3\u00A7\u00C3\u00A3o.

        :return: The descricao_status of this TransacaoCorrenteResponse.
        :rtype: str
        """
        return self._descricao_status

    @descricao_status.setter
    def descricao_status(self, descricao_status):
        """
        Sets the descricao_status of this TransacaoCorrenteResponse.
        Atributo que representa a descri\u00C3\u00A7\u00C3\u00A3o do status da transa\u00C3\u00A7\u00C3\u00A3o.

        :param descricao_status: The descricao_status of this TransacaoCorrenteResponse.
        :type: str
        """
        self._descricao_status = descricao_status

    @property
    def valor(self):
        """
        Gets the valor of this TransacaoCorrenteResponse.
        Atributo que representa o valor da transa\u00C3\u00A7\u00C3\u00A3o.

        :return: The valor of this TransacaoCorrenteResponse.
        :rtype: float
        """
        return self._valor

    @valor.setter
    def valor(self, valor):
        """
        Sets the valor of this TransacaoCorrenteResponse.
        Atributo que representa o valor da transa\u00C3\u00A7\u00C3\u00A3o.

        :param valor: The valor of this TransacaoCorrenteResponse.
        :type: float
        """
        self._valor = valor

    @property
    def valor_dolar(self):
        """
        Gets the valor_dolar of this TransacaoCorrenteResponse.
        Atributo que representa o valor em D\u00C3\u00B3lar da transa\u00C3\u00A7\u00C3\u00A3o.

        :return: The valor_dolar of this TransacaoCorrenteResponse.
        :rtype: float
        """
        return self._valor_dolar

    @valor_dolar.setter
    def valor_dolar(self, valor_dolar):
        """
        Sets the valor_dolar of this TransacaoCorrenteResponse.
        Atributo que representa o valor em D\u00C3\u00B3lar da transa\u00C3\u00A7\u00C3\u00A3o.

        :param valor_dolar: The valor_dolar of this TransacaoCorrenteResponse.
        :type: float
        """
        self._valor_dolar = valor_dolar

    @property
    def quantidade_parcelas(self):
        """
        Gets the quantidade_parcelas of this TransacaoCorrenteResponse.
        Atributo que representa a quantidade de parcelas da transa\u00C3\u00A7\u00C3\u00A3o.

        :return: The quantidade_parcelas of this TransacaoCorrenteResponse.
        :rtype: int
        """
        return self._quantidade_parcelas

    @quantidade_parcelas.setter
    def quantidade_parcelas(self, quantidade_parcelas):
        """
        Sets the quantidade_parcelas of this TransacaoCorrenteResponse.
        Atributo que representa a quantidade de parcelas da transa\u00C3\u00A7\u00C3\u00A3o.

        :param quantidade_parcelas: The quantidade_parcelas of this TransacaoCorrenteResponse.
        :type: int
        """
        self._quantidade_parcelas = quantidade_parcelas

    @property
    def valor_parcela(self):
        """
        Gets the valor_parcela of this TransacaoCorrenteResponse.
        Atributo que representa o valor da parcela da transa\u00C3\u00A7\u00C3\u00A3o.

        :return: The valor_parcela of this TransacaoCorrenteResponse.
        :rtype: float
        """
        return self._valor_parcela

    @valor_parcela.setter
    def valor_parcela(self, valor_parcela):
        """
        Sets the valor_parcela of this TransacaoCorrenteResponse.
        Atributo que representa o valor da parcela da transa\u00C3\u00A7\u00C3\u00A3o.

        :param valor_parcela: The valor_parcela of this TransacaoCorrenteResponse.
        :type: float
        """
        self._valor_parcela = valor_parcela

    @property
    def data_evento(self):
        """
        Gets the data_evento of this TransacaoCorrenteResponse.
        Atributo que representa a data de envio da transa\u00C3\u00A7\u00C3\u00A3o.

        :return: The data_evento of this TransacaoCorrenteResponse.
        :rtype: str
        """
        return self._data_evento

    @data_evento.setter
    def data_evento(self, data_evento):
        """
        Sets the data_evento of this TransacaoCorrenteResponse.
        Atributo que representa a data de envio da transa\u00C3\u00A7\u00C3\u00A3o.

        :param data_evento: The data_evento of this TransacaoCorrenteResponse.
        :type: str
        """
        self._data_evento = data_evento

    @property
    def estabelecimento(self):
        """
        Gets the estabelecimento of this TransacaoCorrenteResponse.
        Atributo que representa o estabelecimento da transa\u00C3\u00A7\u00C3\u00A3o.

        :return: The estabelecimento of this TransacaoCorrenteResponse.
        :rtype: str
        """
        return self._estabelecimento

    @estabelecimento.setter
    def estabelecimento(self, estabelecimento):
        """
        Sets the estabelecimento of this TransacaoCorrenteResponse.
        Atributo que representa o estabelecimento da transa\u00C3\u00A7\u00C3\u00A3o.

        :param estabelecimento: The estabelecimento of this TransacaoCorrenteResponse.
        :type: str
        """
        self._estabelecimento = estabelecimento

    @property
    def flag_credito(self):
        """
        Gets the flag_credito of this TransacaoCorrenteResponse.
        Atributo que identifica se a transa\u00C3\u00A7\u00C3\u00A3o \u00C3\u00A9 um cr\u00C3\u00A9dito ou d\u00C3\u00A9bito.

        :return: The flag_credito of this TransacaoCorrenteResponse.
        :rtype: int
        """
        return self._flag_credito

    @flag_credito.setter
    def flag_credito(self, flag_credito):
        """
        Sets the flag_credito of this TransacaoCorrenteResponse.
        Atributo que identifica se a transa\u00C3\u00A7\u00C3\u00A3o \u00C3\u00A9 um cr\u00C3\u00A9dito ou d\u00C3\u00A9bito.

        :param flag_credito: The flag_credito of this TransacaoCorrenteResponse.
        :type: int
        """
        self._flag_credito = flag_credito

    @property
    def tipo_estabelecimento(self):
        """
        Gets the tipo_estabelecimento of this TransacaoCorrenteResponse.
        Atributo que representa o tipo de estabelecimento da transa\u00C3\u00A7\u00C3\u00A3o.

        :return: The tipo_estabelecimento of this TransacaoCorrenteResponse.
        :rtype: str
        """
        return self._tipo_estabelecimento

    @tipo_estabelecimento.setter
    def tipo_estabelecimento(self, tipo_estabelecimento):
        """
        Sets the tipo_estabelecimento of this TransacaoCorrenteResponse.
        Atributo que representa o tipo de estabelecimento da transa\u00C3\u00A7\u00C3\u00A3o.

        :param tipo_estabelecimento: The tipo_estabelecimento of this TransacaoCorrenteResponse.
        :type: str
        """
        self._tipo_estabelecimento = tipo_estabelecimento

    @property
    def id_grupo_mcc(self):
        """
        Gets the id_grupo_mcc of this TransacaoCorrenteResponse.
        Atributo que representa o grupo MCC da transa\u00C3\u00A7\u00C3\u00A3o.

        :return: The id_grupo_mcc of this TransacaoCorrenteResponse.
        :rtype: int
        """
        return self._id_grupo_mcc

    @id_grupo_mcc.setter
    def id_grupo_mcc(self, id_grupo_mcc):
        """
        Sets the id_grupo_mcc of this TransacaoCorrenteResponse.
        Atributo que representa o grupo MCC da transa\u00C3\u00A7\u00C3\u00A3o.

        :param id_grupo_mcc: The id_grupo_mcc of this TransacaoCorrenteResponse.
        :type: int
        """
        self._id_grupo_mcc = id_grupo_mcc

    @property
    def flag_solicitou_contestacao(self):
        """
        Gets the flag_solicitou_contestacao of this TransacaoCorrenteResponse.
        Atributo que identifica se o portador solicitou contesta\u00C3\u00A7\u00C3\u00A3o da transa\u00C3\u00A7\u00C3\u00A3o.

        :return: The flag_solicitou_contestacao of this TransacaoCorrenteResponse.
        :rtype: int
        """
        return self._flag_solicitou_contestacao

    @flag_solicitou_contestacao.setter
    def flag_solicitou_contestacao(self, flag_solicitou_contestacao):
        """
        Sets the flag_solicitou_contestacao of this TransacaoCorrenteResponse.
        Atributo que identifica se o portador solicitou contesta\u00C3\u00A7\u00C3\u00A3o da transa\u00C3\u00A7\u00C3\u00A3o.

        :param flag_solicitou_contestacao: The flag_solicitou_contestacao of this TransacaoCorrenteResponse.
        :type: int
        """
        self._flag_solicitou_contestacao = flag_solicitou_contestacao

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

