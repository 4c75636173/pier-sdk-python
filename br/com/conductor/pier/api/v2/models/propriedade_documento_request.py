# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class PropriedadeDocumentoRequest(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        PropriedadeDocumentoRequest - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'chave': 'str',
            'valor': 'str',
            'detalhes_tipo': 'str',
            'flag_indice': 'bool'
        }

        self.attribute_map = {
            'chave': 'chave',
            'valor': 'valor',
            'detalhes_tipo': 'detalhesTipo',
            'flag_indice': 'flagIndice'
        }

        self._chave = None
        self._valor = None
        self._detalhes_tipo = None
        self._flag_indice = None

    @property
    def chave(self):
        """
        Gets the chave of this PropriedadeDocumentoRequest.
        {{{propriedade_documento_request_chave_value}}}

        :return: The chave of this PropriedadeDocumentoRequest.
        :rtype: str
        """
        return self._chave

    @chave.setter
    def chave(self, chave):
        """
        Sets the chave of this PropriedadeDocumentoRequest.
        {{{propriedade_documento_request_chave_value}}}

        :param chave: The chave of this PropriedadeDocumentoRequest.
        :type: str
        """
        self._chave = chave

    @property
    def valor(self):
        """
        Gets the valor of this PropriedadeDocumentoRequest.
        {{{propriedade_documento_request_valor_value}}}

        :return: The valor of this PropriedadeDocumentoRequest.
        :rtype: str
        """
        return self._valor

    @valor.setter
    def valor(self, valor):
        """
        Sets the valor of this PropriedadeDocumentoRequest.
        {{{propriedade_documento_request_valor_value}}}

        :param valor: The valor of this PropriedadeDocumentoRequest.
        :type: str
        """
        self._valor = valor

    @property
    def detalhes_tipo(self):
        """
        Gets the detalhes_tipo of this PropriedadeDocumentoRequest.
        {{{propriedade_documento_request_detalhes_tipo_value}}}

        :return: The detalhes_tipo of this PropriedadeDocumentoRequest.
        :rtype: str
        """
        return self._detalhes_tipo

    @detalhes_tipo.setter
    def detalhes_tipo(self, detalhes_tipo):
        """
        Sets the detalhes_tipo of this PropriedadeDocumentoRequest.
        {{{propriedade_documento_request_detalhes_tipo_value}}}

        :param detalhes_tipo: The detalhes_tipo of this PropriedadeDocumentoRequest.
        :type: str
        """
        allowed_values = ["IMAGEM", "TEXTO", "NUMERO"]
        if detalhes_tipo not in allowed_values:
            raise ValueError(
                "Invalid value for `detalhes_tipo`, must be one of {0}"
                .format(allowed_values)
            )
        self._detalhes_tipo = detalhes_tipo

    @property
    def flag_indice(self):
        """
        Gets the flag_indice of this PropriedadeDocumentoRequest.
        {{{propriedade_documento_request_flag_indice_value}}}

        :return: The flag_indice of this PropriedadeDocumentoRequest.
        :rtype: bool
        """
        return self._flag_indice

    @flag_indice.setter
    def flag_indice(self, flag_indice):
        """
        Sets the flag_indice of this PropriedadeDocumentoRequest.
        {{{propriedade_documento_request_flag_indice_value}}}

        :param flag_indice: The flag_indice of this PropriedadeDocumentoRequest.
        :type: bool
        """
        self._flag_indice = flag_indice

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

