# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class FaturaResponse(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        FaturaResponse - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'int',
            'id_conta': 'int',
            'id_produto': 'int',
            'data_vencimento': 'datetime',
            'saldo_fatura_anterior': 'float',
            'saldo_multa': 'float',
            'saldo_compras': 'float',
            'saldo_pagamentos': 'float',
            'saldo_tarifas': 'float',
            'saldo_debitos': 'float',
            'saldo_creditos': 'float',
            'saldo_atual_final': 'float',
            'valor_minimo_fatura': 'float',
            'flag_emite_fatura': 'int'
        }

        self.attribute_map = {
            'id': 'id',
            'id_conta': 'idConta',
            'id_produto': 'idProduto',
            'data_vencimento': 'dataVencimento',
            'saldo_fatura_anterior': 'saldoFaturaAnterior',
            'saldo_multa': 'saldoMulta',
            'saldo_compras': 'saldoCompras',
            'saldo_pagamentos': 'saldoPagamentos',
            'saldo_tarifas': 'saldoTarifas',
            'saldo_debitos': 'saldoDebitos',
            'saldo_creditos': 'saldoCreditos',
            'saldo_atual_final': 'saldoAtualFinal',
            'valor_minimo_fatura': 'valorMinimoFatura',
            'flag_emite_fatura': 'flagEmiteFatura'
        }

        self._id = None
        self._id_conta = None
        self._id_produto = None
        self._data_vencimento = None
        self._saldo_fatura_anterior = None
        self._saldo_multa = None
        self._saldo_compras = None
        self._saldo_pagamentos = None
        self._saldo_tarifas = None
        self._saldo_debitos = None
        self._saldo_creditos = None
        self._saldo_atual_final = None
        self._valor_minimo_fatura = None
        self._flag_emite_fatura = None

    @property
    def id(self):
        """
        Gets the id of this FaturaResponse.
        C\u00C3\u00B3digo identificador da fatura.

        :return: The id of this FaturaResponse.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this FaturaResponse.
        C\u00C3\u00B3digo identificador da fatura.

        :param id: The id of this FaturaResponse.
        :type: int
        """
        self._id = id

    @property
    def id_conta(self):
        """
        Gets the id_conta of this FaturaResponse.
        C\u00C3\u00B3digo identificador da conta.

        :return: The id_conta of this FaturaResponse.
        :rtype: int
        """
        return self._id_conta

    @id_conta.setter
    def id_conta(self, id_conta):
        """
        Sets the id_conta of this FaturaResponse.
        C\u00C3\u00B3digo identificador da conta.

        :param id_conta: The id_conta of this FaturaResponse.
        :type: int
        """
        self._id_conta = id_conta

    @property
    def id_produto(self):
        """
        Gets the id_produto of this FaturaResponse.
        C\u00C3\u00B3digo identificador do produto.

        :return: The id_produto of this FaturaResponse.
        :rtype: int
        """
        return self._id_produto

    @id_produto.setter
    def id_produto(self, id_produto):
        """
        Sets the id_produto of this FaturaResponse.
        C\u00C3\u00B3digo identificador do produto.

        :param id_produto: The id_produto of this FaturaResponse.
        :type: int
        """
        self._id_produto = id_produto

    @property
    def data_vencimento(self):
        """
        Gets the data_vencimento of this FaturaResponse.
        Data de vencimento da fatura.

        :return: The data_vencimento of this FaturaResponse.
        :rtype: datetime
        """
        return self._data_vencimento

    @data_vencimento.setter
    def data_vencimento(self, data_vencimento):
        """
        Sets the data_vencimento of this FaturaResponse.
        Data de vencimento da fatura.

        :param data_vencimento: The data_vencimento of this FaturaResponse.
        :type: datetime
        """
        self._data_vencimento = data_vencimento

    @property
    def saldo_fatura_anterior(self):
        """
        Gets the saldo_fatura_anterior of this FaturaResponse.
        Saldo da fatura anterior.

        :return: The saldo_fatura_anterior of this FaturaResponse.
        :rtype: float
        """
        return self._saldo_fatura_anterior

    @saldo_fatura_anterior.setter
    def saldo_fatura_anterior(self, saldo_fatura_anterior):
        """
        Sets the saldo_fatura_anterior of this FaturaResponse.
        Saldo da fatura anterior.

        :param saldo_fatura_anterior: The saldo_fatura_anterior of this FaturaResponse.
        :type: float
        """
        self._saldo_fatura_anterior = saldo_fatura_anterior

    @property
    def saldo_multa(self):
        """
        Gets the saldo_multa of this FaturaResponse.
        Saldo total da Multa lan\u00C3\u00A7ada na Fatura atual.

        :return: The saldo_multa of this FaturaResponse.
        :rtype: float
        """
        return self._saldo_multa

    @saldo_multa.setter
    def saldo_multa(self, saldo_multa):
        """
        Sets the saldo_multa of this FaturaResponse.
        Saldo total da Multa lan\u00C3\u00A7ada na Fatura atual.

        :param saldo_multa: The saldo_multa of this FaturaResponse.
        :type: float
        """
        self._saldo_multa = saldo_multa

    @property
    def saldo_compras(self):
        """
        Gets the saldo_compras of this FaturaResponse.
        Saldo total das compras lan\u00C3\u00A7adas na fatura atual.

        :return: The saldo_compras of this FaturaResponse.
        :rtype: float
        """
        return self._saldo_compras

    @saldo_compras.setter
    def saldo_compras(self, saldo_compras):
        """
        Sets the saldo_compras of this FaturaResponse.
        Saldo total das compras lan\u00C3\u00A7adas na fatura atual.

        :param saldo_compras: The saldo_compras of this FaturaResponse.
        :type: float
        """
        self._saldo_compras = saldo_compras

    @property
    def saldo_pagamentos(self):
        """
        Gets the saldo_pagamentos of this FaturaResponse.
        Saldo total dos pagamentos lan\u00C3\u00A7ados na fatura atual.

        :return: The saldo_pagamentos of this FaturaResponse.
        :rtype: float
        """
        return self._saldo_pagamentos

    @saldo_pagamentos.setter
    def saldo_pagamentos(self, saldo_pagamentos):
        """
        Sets the saldo_pagamentos of this FaturaResponse.
        Saldo total dos pagamentos lan\u00C3\u00A7ados na fatura atual.

        :param saldo_pagamentos: The saldo_pagamentos of this FaturaResponse.
        :type: float
        """
        self._saldo_pagamentos = saldo_pagamentos

    @property
    def saldo_tarifas(self):
        """
        Gets the saldo_tarifas of this FaturaResponse.
        Saldo total das tarifas lan\u00C3\u00A7adas na fatura atual.

        :return: The saldo_tarifas of this FaturaResponse.
        :rtype: float
        """
        return self._saldo_tarifas

    @saldo_tarifas.setter
    def saldo_tarifas(self, saldo_tarifas):
        """
        Sets the saldo_tarifas of this FaturaResponse.
        Saldo total das tarifas lan\u00C3\u00A7adas na fatura atual.

        :param saldo_tarifas: The saldo_tarifas of this FaturaResponse.
        :type: float
        """
        self._saldo_tarifas = saldo_tarifas

    @property
    def saldo_debitos(self):
        """
        Gets the saldo_debitos of this FaturaResponse.
        Saldo total dos d\u00C3\u00A9bitos lan\u00C3\u00A7ados na fatura atual.

        :return: The saldo_debitos of this FaturaResponse.
        :rtype: float
        """
        return self._saldo_debitos

    @saldo_debitos.setter
    def saldo_debitos(self, saldo_debitos):
        """
        Sets the saldo_debitos of this FaturaResponse.
        Saldo total dos d\u00C3\u00A9bitos lan\u00C3\u00A7ados na fatura atual.

        :param saldo_debitos: The saldo_debitos of this FaturaResponse.
        :type: float
        """
        self._saldo_debitos = saldo_debitos

    @property
    def saldo_creditos(self):
        """
        Gets the saldo_creditos of this FaturaResponse.
        Saldo total dos cr\u00C3\u00A9dito lan\u00C3\u00A7ados na fatura atual.

        :return: The saldo_creditos of this FaturaResponse.
        :rtype: float
        """
        return self._saldo_creditos

    @saldo_creditos.setter
    def saldo_creditos(self, saldo_creditos):
        """
        Sets the saldo_creditos of this FaturaResponse.
        Saldo total dos cr\u00C3\u00A9dito lan\u00C3\u00A7ados na fatura atual.

        :param saldo_creditos: The saldo_creditos of this FaturaResponse.
        :type: float
        """
        self._saldo_creditos = saldo_creditos

    @property
    def saldo_atual_final(self):
        """
        Gets the saldo_atual_final of this FaturaResponse.
        Salto total devedor da fatura atual.

        :return: The saldo_atual_final of this FaturaResponse.
        :rtype: float
        """
        return self._saldo_atual_final

    @saldo_atual_final.setter
    def saldo_atual_final(self, saldo_atual_final):
        """
        Sets the saldo_atual_final of this FaturaResponse.
        Salto total devedor da fatura atual.

        :param saldo_atual_final: The saldo_atual_final of this FaturaResponse.
        :type: float
        """
        self._saldo_atual_final = saldo_atual_final

    @property
    def valor_minimo_fatura(self):
        """
        Gets the valor_minimo_fatura of this FaturaResponse.
        Valor m\u00C3\u00ADnimo para pagamento da fatura.

        :return: The valor_minimo_fatura of this FaturaResponse.
        :rtype: float
        """
        return self._valor_minimo_fatura

    @valor_minimo_fatura.setter
    def valor_minimo_fatura(self, valor_minimo_fatura):
        """
        Sets the valor_minimo_fatura of this FaturaResponse.
        Valor m\u00C3\u00ADnimo para pagamento da fatura.

        :param valor_minimo_fatura: The valor_minimo_fatura of this FaturaResponse.
        :type: float
        """
        self._valor_minimo_fatura = valor_minimo_fatura

    @property
    def flag_emite_fatura(self):
        """
        Gets the flag_emite_fatura of this FaturaResponse.
        Quando ativa, indica que fora emitida uma fatura.

        :return: The flag_emite_fatura of this FaturaResponse.
        :rtype: int
        """
        return self._flag_emite_fatura

    @flag_emite_fatura.setter
    def flag_emite_fatura(self, flag_emite_fatura):
        """
        Sets the flag_emite_fatura of this FaturaResponse.
        Quando ativa, indica que fora emitida uma fatura.

        :param flag_emite_fatura: The flag_emite_fatura of this FaturaResponse.
        :type: int
        """
        self._flag_emite_fatura = flag_emite_fatura

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

