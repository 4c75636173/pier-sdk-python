# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class MaquinetaResponse(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        MaquinetaResponse - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'int',
            'id_estabelecimento': 'int',
            'id_tipo_maquineta': 'int',
            'valor': 'float',
            'data_hora_implantacao': 'str',
            'data_hora_cadastramento': 'str',
            'terminal': 'str',
            'usuario_apl': 'str'
        }

        self.attribute_map = {
            'id': 'id',
            'id_estabelecimento': 'idEstabelecimento',
            'id_tipo_maquineta': 'idTipoMaquineta',
            'valor': 'valor',
            'data_hora_implantacao': 'dataHoraImplantacao',
            'data_hora_cadastramento': 'dataHoraCadastramento',
            'terminal': 'terminal',
            'usuario_apl': 'usuarioApl'
        }

        self._id = None
        self._id_estabelecimento = None
        self._id_tipo_maquineta = None
        self._valor = None
        self._data_hora_implantacao = None
        self._data_hora_cadastramento = None
        self._terminal = None
        self._usuario_apl = None

    @property
    def id(self):
        """
        Gets the id of this MaquinetaResponse.
        C\u00F3digo de Identifica\u00E7\u00E3o da Maquineta.

        :return: The id of this MaquinetaResponse.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this MaquinetaResponse.
        C\u00F3digo de Identifica\u00E7\u00E3o da Maquineta.

        :param id: The id of this MaquinetaResponse.
        :type: int
        """
        self._id = id

    @property
    def id_estabelecimento(self):
        """
        Gets the id_estabelecimento of this MaquinetaResponse.
        C\u00F3digo de Identifica\u00E7\u00E3o do EStabelecimento.

        :return: The id_estabelecimento of this MaquinetaResponse.
        :rtype: int
        """
        return self._id_estabelecimento

    @id_estabelecimento.setter
    def id_estabelecimento(self, id_estabelecimento):
        """
        Sets the id_estabelecimento of this MaquinetaResponse.
        C\u00F3digo de Identifica\u00E7\u00E3o do EStabelecimento.

        :param id_estabelecimento: The id_estabelecimento of this MaquinetaResponse.
        :type: int
        """
        self._id_estabelecimento = id_estabelecimento

    @property
    def id_tipo_maquineta(self):
        """
        Gets the id_tipo_maquineta of this MaquinetaResponse.
        C\u00F3digo de Identifica\u00E7\u00E3o do Tipo Maquineta.

        :return: The id_tipo_maquineta of this MaquinetaResponse.
        :rtype: int
        """
        return self._id_tipo_maquineta

    @id_tipo_maquineta.setter
    def id_tipo_maquineta(self, id_tipo_maquineta):
        """
        Sets the id_tipo_maquineta of this MaquinetaResponse.
        C\u00F3digo de Identifica\u00E7\u00E3o do Tipo Maquineta.

        :param id_tipo_maquineta: The id_tipo_maquineta of this MaquinetaResponse.
        :type: int
        """
        self._id_tipo_maquineta = id_tipo_maquineta

    @property
    def valor(self):
        """
        Gets the valor of this MaquinetaResponse.
        Valor de manuten\u00E7\u00E3o da Maquineta.

        :return: The valor of this MaquinetaResponse.
        :rtype: float
        """
        return self._valor

    @valor.setter
    def valor(self, valor):
        """
        Sets the valor of this MaquinetaResponse.
        Valor de manuten\u00E7\u00E3o da Maquineta.

        :param valor: The valor of this MaquinetaResponse.
        :type: float
        """
        self._valor = valor

    @property
    def data_hora_implantacao(self):
        """
        Gets the data_hora_implantacao of this MaquinetaResponse.
        Data de implanta\u00E7\u00E3o da Maquineta.

        :return: The data_hora_implantacao of this MaquinetaResponse.
        :rtype: str
        """
        return self._data_hora_implantacao

    @data_hora_implantacao.setter
    def data_hora_implantacao(self, data_hora_implantacao):
        """
        Sets the data_hora_implantacao of this MaquinetaResponse.
        Data de implanta\u00E7\u00E3o da Maquineta.

        :param data_hora_implantacao: The data_hora_implantacao of this MaquinetaResponse.
        :type: str
        """
        self._data_hora_implantacao = data_hora_implantacao

    @property
    def data_hora_cadastramento(self):
        """
        Gets the data_hora_cadastramento of this MaquinetaResponse.
        Data de cadastramento da Maquineta.

        :return: The data_hora_cadastramento of this MaquinetaResponse.
        :rtype: str
        """
        return self._data_hora_cadastramento

    @data_hora_cadastramento.setter
    def data_hora_cadastramento(self, data_hora_cadastramento):
        """
        Sets the data_hora_cadastramento of this MaquinetaResponse.
        Data de cadastramento da Maquineta.

        :param data_hora_cadastramento: The data_hora_cadastramento of this MaquinetaResponse.
        :type: str
        """
        self._data_hora_cadastramento = data_hora_cadastramento

    @property
    def terminal(self):
        """
        Gets the terminal of this MaquinetaResponse.
        N\u00FAmero do terminal vinculado a Maquineta.

        :return: The terminal of this MaquinetaResponse.
        :rtype: str
        """
        return self._terminal

    @terminal.setter
    def terminal(self, terminal):
        """
        Sets the terminal of this MaquinetaResponse.
        N\u00FAmero do terminal vinculado a Maquineta.

        :param terminal: The terminal of this MaquinetaResponse.
        :type: str
        """
        self._terminal = terminal

    @property
    def usuario_apl(self):
        """
        Gets the usuario_apl of this MaquinetaResponse.
        Usu\u00E1rio da aplica\u00E7\u00E3o.

        :return: The usuario_apl of this MaquinetaResponse.
        :rtype: str
        """
        return self._usuario_apl

    @usuario_apl.setter
    def usuario_apl(self, usuario_apl):
        """
        Sets the usuario_apl of this MaquinetaResponse.
        Usu\u00E1rio da aplica\u00E7\u00E3o.

        :param usuario_apl: The usuario_apl of this MaquinetaResponse.
        :type: str
        """
        self._usuario_apl = usuario_apl

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

