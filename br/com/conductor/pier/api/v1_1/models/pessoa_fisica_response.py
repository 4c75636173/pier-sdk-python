# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class PessoaFisicaResponse(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        PessoaFisicaResponse - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'bairro': 'str',
            'cep': 'str',
            'cidade': 'str',
            'complemento_logradouro': 'str',
            'cpf': 'str',
            'data_emissao_identidade': 'str',
            'data_nascimento': 'str',
            'dddcelular': 'str',
            'dddtelefone': 'str',
            'endereco': 'str',
            'id_pessoa_fisica': 'int',
            'identidade': 'str',
            'nome': 'str',
            'numero_celular': 'str',
            'numero_logradouro': 'int',
            'numero_telefone': 'str',
            'orgao_emissor': 'str',
            'sexo': 'str',
            'uf': 'str'
        }

        self.attribute_map = {
            'bairro': 'bairro',
            'cep': 'cep',
            'cidade': 'cidade',
            'complemento_logradouro': 'complementoLogradouro',
            'cpf': 'cpf',
            'data_emissao_identidade': 'dataEmissaoIdentidade',
            'data_nascimento': 'dataNascimento',
            'dddcelular': 'dddcelular',
            'dddtelefone': 'dddtelefone',
            'endereco': 'endereco',
            'id_pessoa_fisica': 'idPessoaFisica',
            'identidade': 'identidade',
            'nome': 'nome',
            'numero_celular': 'numeroCelular',
            'numero_logradouro': 'numeroLogradouro',
            'numero_telefone': 'numeroTelefone',
            'orgao_emissor': 'orgaoEmissor',
            'sexo': 'sexo',
            'uf': 'uf'
        }

        self._bairro = None
        self._cep = None
        self._cidade = None
        self._complemento_logradouro = None
        self._cpf = None
        self._data_emissao_identidade = None
        self._data_nascimento = None
        self._dddcelular = None
        self._dddtelefone = None
        self._endereco = None
        self._id_pessoa_fisica = None
        self._identidade = None
        self._nome = None
        self._numero_celular = None
        self._numero_logradouro = None
        self._numero_telefone = None
        self._orgao_emissor = None
        self._sexo = None
        self._uf = None

    @property
    def bairro(self):
        """
        Gets the bairro of this PessoaFisicaResponse.


        :return: The bairro of this PessoaFisicaResponse.
        :rtype: str
        """
        return self._bairro

    @bairro.setter
    def bairro(self, bairro):
        """
        Sets the bairro of this PessoaFisicaResponse.


        :param bairro: The bairro of this PessoaFisicaResponse.
        :type: str
        """
        self._bairro = bairro

    @property
    def cep(self):
        """
        Gets the cep of this PessoaFisicaResponse.


        :return: The cep of this PessoaFisicaResponse.
        :rtype: str
        """
        return self._cep

    @cep.setter
    def cep(self, cep):
        """
        Sets the cep of this PessoaFisicaResponse.


        :param cep: The cep of this PessoaFisicaResponse.
        :type: str
        """
        self._cep = cep

    @property
    def cidade(self):
        """
        Gets the cidade of this PessoaFisicaResponse.


        :return: The cidade of this PessoaFisicaResponse.
        :rtype: str
        """
        return self._cidade

    @cidade.setter
    def cidade(self, cidade):
        """
        Sets the cidade of this PessoaFisicaResponse.


        :param cidade: The cidade of this PessoaFisicaResponse.
        :type: str
        """
        self._cidade = cidade

    @property
    def complemento_logradouro(self):
        """
        Gets the complemento_logradouro of this PessoaFisicaResponse.


        :return: The complemento_logradouro of this PessoaFisicaResponse.
        :rtype: str
        """
        return self._complemento_logradouro

    @complemento_logradouro.setter
    def complemento_logradouro(self, complemento_logradouro):
        """
        Sets the complemento_logradouro of this PessoaFisicaResponse.


        :param complemento_logradouro: The complemento_logradouro of this PessoaFisicaResponse.
        :type: str
        """
        self._complemento_logradouro = complemento_logradouro

    @property
    def cpf(self):
        """
        Gets the cpf of this PessoaFisicaResponse.


        :return: The cpf of this PessoaFisicaResponse.
        :rtype: str
        """
        return self._cpf

    @cpf.setter
    def cpf(self, cpf):
        """
        Sets the cpf of this PessoaFisicaResponse.


        :param cpf: The cpf of this PessoaFisicaResponse.
        :type: str
        """
        self._cpf = cpf

    @property
    def data_emissao_identidade(self):
        """
        Gets the data_emissao_identidade of this PessoaFisicaResponse.


        :return: The data_emissao_identidade of this PessoaFisicaResponse.
        :rtype: str
        """
        return self._data_emissao_identidade

    @data_emissao_identidade.setter
    def data_emissao_identidade(self, data_emissao_identidade):
        """
        Sets the data_emissao_identidade of this PessoaFisicaResponse.


        :param data_emissao_identidade: The data_emissao_identidade of this PessoaFisicaResponse.
        :type: str
        """
        self._data_emissao_identidade = data_emissao_identidade

    @property
    def data_nascimento(self):
        """
        Gets the data_nascimento of this PessoaFisicaResponse.


        :return: The data_nascimento of this PessoaFisicaResponse.
        :rtype: str
        """
        return self._data_nascimento

    @data_nascimento.setter
    def data_nascimento(self, data_nascimento):
        """
        Sets the data_nascimento of this PessoaFisicaResponse.


        :param data_nascimento: The data_nascimento of this PessoaFisicaResponse.
        :type: str
        """
        self._data_nascimento = data_nascimento

    @property
    def dddcelular(self):
        """
        Gets the dddcelular of this PessoaFisicaResponse.


        :return: The dddcelular of this PessoaFisicaResponse.
        :rtype: str
        """
        return self._dddcelular

    @dddcelular.setter
    def dddcelular(self, dddcelular):
        """
        Sets the dddcelular of this PessoaFisicaResponse.


        :param dddcelular: The dddcelular of this PessoaFisicaResponse.
        :type: str
        """
        self._dddcelular = dddcelular

    @property
    def dddtelefone(self):
        """
        Gets the dddtelefone of this PessoaFisicaResponse.


        :return: The dddtelefone of this PessoaFisicaResponse.
        :rtype: str
        """
        return self._dddtelefone

    @dddtelefone.setter
    def dddtelefone(self, dddtelefone):
        """
        Sets the dddtelefone of this PessoaFisicaResponse.


        :param dddtelefone: The dddtelefone of this PessoaFisicaResponse.
        :type: str
        """
        self._dddtelefone = dddtelefone

    @property
    def endereco(self):
        """
        Gets the endereco of this PessoaFisicaResponse.


        :return: The endereco of this PessoaFisicaResponse.
        :rtype: str
        """
        return self._endereco

    @endereco.setter
    def endereco(self, endereco):
        """
        Sets the endereco of this PessoaFisicaResponse.


        :param endereco: The endereco of this PessoaFisicaResponse.
        :type: str
        """
        self._endereco = endereco

    @property
    def id_pessoa_fisica(self):
        """
        Gets the id_pessoa_fisica of this PessoaFisicaResponse.


        :return: The id_pessoa_fisica of this PessoaFisicaResponse.
        :rtype: int
        """
        return self._id_pessoa_fisica

    @id_pessoa_fisica.setter
    def id_pessoa_fisica(self, id_pessoa_fisica):
        """
        Sets the id_pessoa_fisica of this PessoaFisicaResponse.


        :param id_pessoa_fisica: The id_pessoa_fisica of this PessoaFisicaResponse.
        :type: int
        """
        self._id_pessoa_fisica = id_pessoa_fisica

    @property
    def identidade(self):
        """
        Gets the identidade of this PessoaFisicaResponse.


        :return: The identidade of this PessoaFisicaResponse.
        :rtype: str
        """
        return self._identidade

    @identidade.setter
    def identidade(self, identidade):
        """
        Sets the identidade of this PessoaFisicaResponse.


        :param identidade: The identidade of this PessoaFisicaResponse.
        :type: str
        """
        self._identidade = identidade

    @property
    def nome(self):
        """
        Gets the nome of this PessoaFisicaResponse.


        :return: The nome of this PessoaFisicaResponse.
        :rtype: str
        """
        return self._nome

    @nome.setter
    def nome(self, nome):
        """
        Sets the nome of this PessoaFisicaResponse.


        :param nome: The nome of this PessoaFisicaResponse.
        :type: str
        """
        self._nome = nome

    @property
    def numero_celular(self):
        """
        Gets the numero_celular of this PessoaFisicaResponse.


        :return: The numero_celular of this PessoaFisicaResponse.
        :rtype: str
        """
        return self._numero_celular

    @numero_celular.setter
    def numero_celular(self, numero_celular):
        """
        Sets the numero_celular of this PessoaFisicaResponse.


        :param numero_celular: The numero_celular of this PessoaFisicaResponse.
        :type: str
        """
        self._numero_celular = numero_celular

    @property
    def numero_logradouro(self):
        """
        Gets the numero_logradouro of this PessoaFisicaResponse.


        :return: The numero_logradouro of this PessoaFisicaResponse.
        :rtype: int
        """
        return self._numero_logradouro

    @numero_logradouro.setter
    def numero_logradouro(self, numero_logradouro):
        """
        Sets the numero_logradouro of this PessoaFisicaResponse.


        :param numero_logradouro: The numero_logradouro of this PessoaFisicaResponse.
        :type: int
        """
        self._numero_logradouro = numero_logradouro

    @property
    def numero_telefone(self):
        """
        Gets the numero_telefone of this PessoaFisicaResponse.


        :return: The numero_telefone of this PessoaFisicaResponse.
        :rtype: str
        """
        return self._numero_telefone

    @numero_telefone.setter
    def numero_telefone(self, numero_telefone):
        """
        Sets the numero_telefone of this PessoaFisicaResponse.


        :param numero_telefone: The numero_telefone of this PessoaFisicaResponse.
        :type: str
        """
        self._numero_telefone = numero_telefone

    @property
    def orgao_emissor(self):
        """
        Gets the orgao_emissor of this PessoaFisicaResponse.


        :return: The orgao_emissor of this PessoaFisicaResponse.
        :rtype: str
        """
        return self._orgao_emissor

    @orgao_emissor.setter
    def orgao_emissor(self, orgao_emissor):
        """
        Sets the orgao_emissor of this PessoaFisicaResponse.


        :param orgao_emissor: The orgao_emissor of this PessoaFisicaResponse.
        :type: str
        """
        self._orgao_emissor = orgao_emissor

    @property
    def sexo(self):
        """
        Gets the sexo of this PessoaFisicaResponse.


        :return: The sexo of this PessoaFisicaResponse.
        :rtype: str
        """
        return self._sexo

    @sexo.setter
    def sexo(self, sexo):
        """
        Sets the sexo of this PessoaFisicaResponse.


        :param sexo: The sexo of this PessoaFisicaResponse.
        :type: str
        """
        self._sexo = sexo

    @property
    def uf(self):
        """
        Gets the uf of this PessoaFisicaResponse.


        :return: The uf of this PessoaFisicaResponse.
        :rtype: str
        """
        return self._uf

    @uf.setter
    def uf(self, uf):
        """
        Sets the uf of this PessoaFisicaResponse.


        :param uf: The uf of this PessoaFisicaResponse.
        :type: str
        """
        self._uf = uf

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

