# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class Saldos(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        Saldos - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'int',
            'saldo_disponivel_compra': 'float',
            'saldo_disponivel_compra_internacional': 'float',
            'saldo_disponivel_externo': 'float',
            'saldo_disponivel_extra': 'float',
            'saldo_disponivel_global': 'float',
            'saldo_disponivel_mensal': 'float',
            'saldo_disponivel_parcelado': 'float',
            'saldo_disponivel_parcelas': 'float',
            'saldo_disponivel_saque': 'float',
            'saldo_disponivel_saque_internacional': 'float',
            'saldo_pontos_fidelidade': 'float'
        }

        self.attribute_map = {
            'id': 'id',
            'saldo_disponivel_compra': 'saldoDisponivelCompra',
            'saldo_disponivel_compra_internacional': 'saldoDisponivelCompraInternacional',
            'saldo_disponivel_externo': 'saldoDisponivelExterno',
            'saldo_disponivel_extra': 'saldoDisponivelExtra',
            'saldo_disponivel_global': 'saldoDisponivelGlobal',
            'saldo_disponivel_mensal': 'saldoDisponivelMensal',
            'saldo_disponivel_parcelado': 'saldoDisponivelParcelado',
            'saldo_disponivel_parcelas': 'saldoDisponivelParcelas',
            'saldo_disponivel_saque': 'saldoDisponivelSaque',
            'saldo_disponivel_saque_internacional': 'saldoDisponivelSaqueInternacional',
            'saldo_pontos_fidelidade': 'saldoPontosFidelidade'
        }

        self._id = None
        self._saldo_disponivel_compra = None
        self._saldo_disponivel_compra_internacional = None
        self._saldo_disponivel_externo = None
        self._saldo_disponivel_extra = None
        self._saldo_disponivel_global = None
        self._saldo_disponivel_mensal = None
        self._saldo_disponivel_parcelado = None
        self._saldo_disponivel_parcelas = None
        self._saldo_disponivel_saque = None
        self._saldo_disponivel_saque_internacional = None
        self._saldo_pontos_fidelidade = None

    @property
    def id(self):
        """
        Gets the id of this Saldos.
        C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Limite Disponibilidade (id).

        :return: The id of this Saldos.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this Saldos.
        C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Limite Disponibilidade (id).

        :param id: The id of this Saldos.
        :type: int
        """
        self._id = id

    @property
    def saldo_disponivel_compra(self):
        """
        Gets the saldo_disponivel_compra of this Saldos.


        :return: The saldo_disponivel_compra of this Saldos.
        :rtype: float
        """
        return self._saldo_disponivel_compra

    @saldo_disponivel_compra.setter
    def saldo_disponivel_compra(self, saldo_disponivel_compra):
        """
        Sets the saldo_disponivel_compra of this Saldos.


        :param saldo_disponivel_compra: The saldo_disponivel_compra of this Saldos.
        :type: float
        """
        self._saldo_disponivel_compra = saldo_disponivel_compra

    @property
    def saldo_disponivel_compra_internacional(self):
        """
        Gets the saldo_disponivel_compra_internacional of this Saldos.


        :return: The saldo_disponivel_compra_internacional of this Saldos.
        :rtype: float
        """
        return self._saldo_disponivel_compra_internacional

    @saldo_disponivel_compra_internacional.setter
    def saldo_disponivel_compra_internacional(self, saldo_disponivel_compra_internacional):
        """
        Sets the saldo_disponivel_compra_internacional of this Saldos.


        :param saldo_disponivel_compra_internacional: The saldo_disponivel_compra_internacional of this Saldos.
        :type: float
        """
        self._saldo_disponivel_compra_internacional = saldo_disponivel_compra_internacional

    @property
    def saldo_disponivel_externo(self):
        """
        Gets the saldo_disponivel_externo of this Saldos.


        :return: The saldo_disponivel_externo of this Saldos.
        :rtype: float
        """
        return self._saldo_disponivel_externo

    @saldo_disponivel_externo.setter
    def saldo_disponivel_externo(self, saldo_disponivel_externo):
        """
        Sets the saldo_disponivel_externo of this Saldos.


        :param saldo_disponivel_externo: The saldo_disponivel_externo of this Saldos.
        :type: float
        """
        self._saldo_disponivel_externo = saldo_disponivel_externo

    @property
    def saldo_disponivel_extra(self):
        """
        Gets the saldo_disponivel_extra of this Saldos.


        :return: The saldo_disponivel_extra of this Saldos.
        :rtype: float
        """
        return self._saldo_disponivel_extra

    @saldo_disponivel_extra.setter
    def saldo_disponivel_extra(self, saldo_disponivel_extra):
        """
        Sets the saldo_disponivel_extra of this Saldos.


        :param saldo_disponivel_extra: The saldo_disponivel_extra of this Saldos.
        :type: float
        """
        self._saldo_disponivel_extra = saldo_disponivel_extra

    @property
    def saldo_disponivel_global(self):
        """
        Gets the saldo_disponivel_global of this Saldos.
        Campo que 

        :return: The saldo_disponivel_global of this Saldos.
        :rtype: float
        """
        return self._saldo_disponivel_global

    @saldo_disponivel_global.setter
    def saldo_disponivel_global(self, saldo_disponivel_global):
        """
        Sets the saldo_disponivel_global of this Saldos.
        Campo que 

        :param saldo_disponivel_global: The saldo_disponivel_global of this Saldos.
        :type: float
        """
        self._saldo_disponivel_global = saldo_disponivel_global

    @property
    def saldo_disponivel_mensal(self):
        """
        Gets the saldo_disponivel_mensal of this Saldos.


        :return: The saldo_disponivel_mensal of this Saldos.
        :rtype: float
        """
        return self._saldo_disponivel_mensal

    @saldo_disponivel_mensal.setter
    def saldo_disponivel_mensal(self, saldo_disponivel_mensal):
        """
        Sets the saldo_disponivel_mensal of this Saldos.


        :param saldo_disponivel_mensal: The saldo_disponivel_mensal of this Saldos.
        :type: float
        """
        self._saldo_disponivel_mensal = saldo_disponivel_mensal

    @property
    def saldo_disponivel_parcelado(self):
        """
        Gets the saldo_disponivel_parcelado of this Saldos.


        :return: The saldo_disponivel_parcelado of this Saldos.
        :rtype: float
        """
        return self._saldo_disponivel_parcelado

    @saldo_disponivel_parcelado.setter
    def saldo_disponivel_parcelado(self, saldo_disponivel_parcelado):
        """
        Sets the saldo_disponivel_parcelado of this Saldos.


        :param saldo_disponivel_parcelado: The saldo_disponivel_parcelado of this Saldos.
        :type: float
        """
        self._saldo_disponivel_parcelado = saldo_disponivel_parcelado

    @property
    def saldo_disponivel_parcelas(self):
        """
        Gets the saldo_disponivel_parcelas of this Saldos.


        :return: The saldo_disponivel_parcelas of this Saldos.
        :rtype: float
        """
        return self._saldo_disponivel_parcelas

    @saldo_disponivel_parcelas.setter
    def saldo_disponivel_parcelas(self, saldo_disponivel_parcelas):
        """
        Sets the saldo_disponivel_parcelas of this Saldos.


        :param saldo_disponivel_parcelas: The saldo_disponivel_parcelas of this Saldos.
        :type: float
        """
        self._saldo_disponivel_parcelas = saldo_disponivel_parcelas

    @property
    def saldo_disponivel_saque(self):
        """
        Gets the saldo_disponivel_saque of this Saldos.


        :return: The saldo_disponivel_saque of this Saldos.
        :rtype: float
        """
        return self._saldo_disponivel_saque

    @saldo_disponivel_saque.setter
    def saldo_disponivel_saque(self, saldo_disponivel_saque):
        """
        Sets the saldo_disponivel_saque of this Saldos.


        :param saldo_disponivel_saque: The saldo_disponivel_saque of this Saldos.
        :type: float
        """
        self._saldo_disponivel_saque = saldo_disponivel_saque

    @property
    def saldo_disponivel_saque_internacional(self):
        """
        Gets the saldo_disponivel_saque_internacional of this Saldos.


        :return: The saldo_disponivel_saque_internacional of this Saldos.
        :rtype: float
        """
        return self._saldo_disponivel_saque_internacional

    @saldo_disponivel_saque_internacional.setter
    def saldo_disponivel_saque_internacional(self, saldo_disponivel_saque_internacional):
        """
        Sets the saldo_disponivel_saque_internacional of this Saldos.


        :param saldo_disponivel_saque_internacional: The saldo_disponivel_saque_internacional of this Saldos.
        :type: float
        """
        self._saldo_disponivel_saque_internacional = saldo_disponivel_saque_internacional

    @property
    def saldo_pontos_fidelidade(self):
        """
        Gets the saldo_pontos_fidelidade of this Saldos.


        :return: The saldo_pontos_fidelidade of this Saldos.
        :rtype: float
        """
        return self._saldo_pontos_fidelidade

    @saldo_pontos_fidelidade.setter
    def saldo_pontos_fidelidade(self, saldo_pontos_fidelidade):
        """
        Sets the saldo_pontos_fidelidade of this Saldos.


        :param saldo_pontos_fidelidade: The saldo_pontos_fidelidade of this Saldos.
        :type: float
        """
        self._saldo_pontos_fidelidade = saldo_pontos_fidelidade

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

