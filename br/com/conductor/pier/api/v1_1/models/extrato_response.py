# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class ExtratoResponse(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        ExtratoResponse - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'cartao': 'str',
            'chip': 'str',
            'cidade_uf_pais': 'str',
            'codigo_autorizacao': 'str',
            'codigo_moeda': 'str',
            'codigo_moeda_destino': 'str',
            'cotacao_dolar': 'float',
            'credito': 'float',
            'data_compra': 'str',
            'data_cotacao_dolar': 'datetime',
            'data_entrada_compra': 'str',
            'data_transacao_utc': 'str',
            'debito': 'float',
            'descricao_modo_entrada': 'str',
            'descricao_transacao': 'str',
            'encargos_financeiros': 'float',
            'historico': 'str',
            'id_evento_externo': 'int',
            'id_tipo_transacao': 'int',
            'id_transacao': 'int',
            'mcc': 'int',
            'nome_estab_visa': 'str',
            'nome_plastico': 'str',
            'numero_estabelecimento': 'int',
            'origem': 'str',
            'taxa_embarque': 'float',
            'tipo_evento': 'str',
            'valor_dolar': 'float'
        }

        self.attribute_map = {
            'cartao': 'cartao',
            'chip': 'chip',
            'cidade_uf_pais': 'cidadeUFPais',
            'codigo_autorizacao': 'codigoAutorizacao',
            'codigo_moeda': 'codigoMoeda',
            'codigo_moeda_destino': 'codigoMoedaDestino',
            'cotacao_dolar': 'cotacaoDolar',
            'credito': 'credito',
            'data_compra': 'dataCompra',
            'data_cotacao_dolar': 'dataCotacaoDolar',
            'data_entrada_compra': 'dataEntradaCompra',
            'data_transacao_utc': 'dataTransacaoUTC',
            'debito': 'debito',
            'descricao_modo_entrada': 'descricaoModoEntrada',
            'descricao_transacao': 'descricaoTransacao',
            'encargos_financeiros': 'encargosFinanceiros',
            'historico': 'historico',
            'id_evento_externo': 'idEventoExterno',
            'id_tipo_transacao': 'idTipoTransacao',
            'id_transacao': 'idTransacao',
            'mcc': 'mcc',
            'nome_estab_visa': 'nomeEstabVisa',
            'nome_plastico': 'nomePlastico',
            'numero_estabelecimento': 'numeroEstabelecimento',
            'origem': 'origem',
            'taxa_embarque': 'taxaEmbarque',
            'tipo_evento': 'tipoEvento',
            'valor_dolar': 'valorDolar'
        }

        self._cartao = None
        self._chip = None
        self._cidade_uf_pais = None
        self._codigo_autorizacao = None
        self._codigo_moeda = None
        self._codigo_moeda_destino = None
        self._cotacao_dolar = None
        self._credito = None
        self._data_compra = None
        self._data_cotacao_dolar = None
        self._data_entrada_compra = None
        self._data_transacao_utc = None
        self._debito = None
        self._descricao_modo_entrada = None
        self._descricao_transacao = None
        self._encargos_financeiros = None
        self._historico = None
        self._id_evento_externo = None
        self._id_tipo_transacao = None
        self._id_transacao = None
        self._mcc = None
        self._nome_estab_visa = None
        self._nome_plastico = None
        self._numero_estabelecimento = None
        self._origem = None
        self._taxa_embarque = None
        self._tipo_evento = None
        self._valor_dolar = None

    @property
    def cartao(self):
        """
        Gets the cartao of this ExtratoResponse.


        :return: The cartao of this ExtratoResponse.
        :rtype: str
        """
        return self._cartao

    @cartao.setter
    def cartao(self, cartao):
        """
        Sets the cartao of this ExtratoResponse.


        :param cartao: The cartao of this ExtratoResponse.
        :type: str
        """
        self._cartao = cartao

    @property
    def chip(self):
        """
        Gets the chip of this ExtratoResponse.


        :return: The chip of this ExtratoResponse.
        :rtype: str
        """
        return self._chip

    @chip.setter
    def chip(self, chip):
        """
        Sets the chip of this ExtratoResponse.


        :param chip: The chip of this ExtratoResponse.
        :type: str
        """
        self._chip = chip

    @property
    def cidade_uf_pais(self):
        """
        Gets the cidade_uf_pais of this ExtratoResponse.


        :return: The cidade_uf_pais of this ExtratoResponse.
        :rtype: str
        """
        return self._cidade_uf_pais

    @cidade_uf_pais.setter
    def cidade_uf_pais(self, cidade_uf_pais):
        """
        Sets the cidade_uf_pais of this ExtratoResponse.


        :param cidade_uf_pais: The cidade_uf_pais of this ExtratoResponse.
        :type: str
        """
        self._cidade_uf_pais = cidade_uf_pais

    @property
    def codigo_autorizacao(self):
        """
        Gets the codigo_autorizacao of this ExtratoResponse.


        :return: The codigo_autorizacao of this ExtratoResponse.
        :rtype: str
        """
        return self._codigo_autorizacao

    @codigo_autorizacao.setter
    def codigo_autorizacao(self, codigo_autorizacao):
        """
        Sets the codigo_autorizacao of this ExtratoResponse.


        :param codigo_autorizacao: The codigo_autorizacao of this ExtratoResponse.
        :type: str
        """
        self._codigo_autorizacao = codigo_autorizacao

    @property
    def codigo_moeda(self):
        """
        Gets the codigo_moeda of this ExtratoResponse.


        :return: The codigo_moeda of this ExtratoResponse.
        :rtype: str
        """
        return self._codigo_moeda

    @codigo_moeda.setter
    def codigo_moeda(self, codigo_moeda):
        """
        Sets the codigo_moeda of this ExtratoResponse.


        :param codigo_moeda: The codigo_moeda of this ExtratoResponse.
        :type: str
        """
        self._codigo_moeda = codigo_moeda

    @property
    def codigo_moeda_destino(self):
        """
        Gets the codigo_moeda_destino of this ExtratoResponse.


        :return: The codigo_moeda_destino of this ExtratoResponse.
        :rtype: str
        """
        return self._codigo_moeda_destino

    @codigo_moeda_destino.setter
    def codigo_moeda_destino(self, codigo_moeda_destino):
        """
        Sets the codigo_moeda_destino of this ExtratoResponse.


        :param codigo_moeda_destino: The codigo_moeda_destino of this ExtratoResponse.
        :type: str
        """
        self._codigo_moeda_destino = codigo_moeda_destino

    @property
    def cotacao_dolar(self):
        """
        Gets the cotacao_dolar of this ExtratoResponse.


        :return: The cotacao_dolar of this ExtratoResponse.
        :rtype: float
        """
        return self._cotacao_dolar

    @cotacao_dolar.setter
    def cotacao_dolar(self, cotacao_dolar):
        """
        Sets the cotacao_dolar of this ExtratoResponse.


        :param cotacao_dolar: The cotacao_dolar of this ExtratoResponse.
        :type: float
        """
        self._cotacao_dolar = cotacao_dolar

    @property
    def credito(self):
        """
        Gets the credito of this ExtratoResponse.


        :return: The credito of this ExtratoResponse.
        :rtype: float
        """
        return self._credito

    @credito.setter
    def credito(self, credito):
        """
        Sets the credito of this ExtratoResponse.


        :param credito: The credito of this ExtratoResponse.
        :type: float
        """
        self._credito = credito

    @property
    def data_compra(self):
        """
        Gets the data_compra of this ExtratoResponse.


        :return: The data_compra of this ExtratoResponse.
        :rtype: str
        """
        return self._data_compra

    @data_compra.setter
    def data_compra(self, data_compra):
        """
        Sets the data_compra of this ExtratoResponse.


        :param data_compra: The data_compra of this ExtratoResponse.
        :type: str
        """
        self._data_compra = data_compra

    @property
    def data_cotacao_dolar(self):
        """
        Gets the data_cotacao_dolar of this ExtratoResponse.


        :return: The data_cotacao_dolar of this ExtratoResponse.
        :rtype: datetime
        """
        return self._data_cotacao_dolar

    @data_cotacao_dolar.setter
    def data_cotacao_dolar(self, data_cotacao_dolar):
        """
        Sets the data_cotacao_dolar of this ExtratoResponse.


        :param data_cotacao_dolar: The data_cotacao_dolar of this ExtratoResponse.
        :type: datetime
        """
        self._data_cotacao_dolar = data_cotacao_dolar

    @property
    def data_entrada_compra(self):
        """
        Gets the data_entrada_compra of this ExtratoResponse.


        :return: The data_entrada_compra of this ExtratoResponse.
        :rtype: str
        """
        return self._data_entrada_compra

    @data_entrada_compra.setter
    def data_entrada_compra(self, data_entrada_compra):
        """
        Sets the data_entrada_compra of this ExtratoResponse.


        :param data_entrada_compra: The data_entrada_compra of this ExtratoResponse.
        :type: str
        """
        self._data_entrada_compra = data_entrada_compra

    @property
    def data_transacao_utc(self):
        """
        Gets the data_transacao_utc of this ExtratoResponse.


        :return: The data_transacao_utc of this ExtratoResponse.
        :rtype: str
        """
        return self._data_transacao_utc

    @data_transacao_utc.setter
    def data_transacao_utc(self, data_transacao_utc):
        """
        Sets the data_transacao_utc of this ExtratoResponse.


        :param data_transacao_utc: The data_transacao_utc of this ExtratoResponse.
        :type: str
        """
        self._data_transacao_utc = data_transacao_utc

    @property
    def debito(self):
        """
        Gets the debito of this ExtratoResponse.


        :return: The debito of this ExtratoResponse.
        :rtype: float
        """
        return self._debito

    @debito.setter
    def debito(self, debito):
        """
        Sets the debito of this ExtratoResponse.


        :param debito: The debito of this ExtratoResponse.
        :type: float
        """
        self._debito = debito

    @property
    def descricao_modo_entrada(self):
        """
        Gets the descricao_modo_entrada of this ExtratoResponse.


        :return: The descricao_modo_entrada of this ExtratoResponse.
        :rtype: str
        """
        return self._descricao_modo_entrada

    @descricao_modo_entrada.setter
    def descricao_modo_entrada(self, descricao_modo_entrada):
        """
        Sets the descricao_modo_entrada of this ExtratoResponse.


        :param descricao_modo_entrada: The descricao_modo_entrada of this ExtratoResponse.
        :type: str
        """
        self._descricao_modo_entrada = descricao_modo_entrada

    @property
    def descricao_transacao(self):
        """
        Gets the descricao_transacao of this ExtratoResponse.


        :return: The descricao_transacao of this ExtratoResponse.
        :rtype: str
        """
        return self._descricao_transacao

    @descricao_transacao.setter
    def descricao_transacao(self, descricao_transacao):
        """
        Sets the descricao_transacao of this ExtratoResponse.


        :param descricao_transacao: The descricao_transacao of this ExtratoResponse.
        :type: str
        """
        self._descricao_transacao = descricao_transacao

    @property
    def encargos_financeiros(self):
        """
        Gets the encargos_financeiros of this ExtratoResponse.


        :return: The encargos_financeiros of this ExtratoResponse.
        :rtype: float
        """
        return self._encargos_financeiros

    @encargos_financeiros.setter
    def encargos_financeiros(self, encargos_financeiros):
        """
        Sets the encargos_financeiros of this ExtratoResponse.


        :param encargos_financeiros: The encargos_financeiros of this ExtratoResponse.
        :type: float
        """
        self._encargos_financeiros = encargos_financeiros

    @property
    def historico(self):
        """
        Gets the historico of this ExtratoResponse.


        :return: The historico of this ExtratoResponse.
        :rtype: str
        """
        return self._historico

    @historico.setter
    def historico(self, historico):
        """
        Sets the historico of this ExtratoResponse.


        :param historico: The historico of this ExtratoResponse.
        :type: str
        """
        self._historico = historico

    @property
    def id_evento_externo(self):
        """
        Gets the id_evento_externo of this ExtratoResponse.


        :return: The id_evento_externo of this ExtratoResponse.
        :rtype: int
        """
        return self._id_evento_externo

    @id_evento_externo.setter
    def id_evento_externo(self, id_evento_externo):
        """
        Sets the id_evento_externo of this ExtratoResponse.


        :param id_evento_externo: The id_evento_externo of this ExtratoResponse.
        :type: int
        """
        self._id_evento_externo = id_evento_externo

    @property
    def id_tipo_transacao(self):
        """
        Gets the id_tipo_transacao of this ExtratoResponse.


        :return: The id_tipo_transacao of this ExtratoResponse.
        :rtype: int
        """
        return self._id_tipo_transacao

    @id_tipo_transacao.setter
    def id_tipo_transacao(self, id_tipo_transacao):
        """
        Sets the id_tipo_transacao of this ExtratoResponse.


        :param id_tipo_transacao: The id_tipo_transacao of this ExtratoResponse.
        :type: int
        """
        self._id_tipo_transacao = id_tipo_transacao

    @property
    def id_transacao(self):
        """
        Gets the id_transacao of this ExtratoResponse.


        :return: The id_transacao of this ExtratoResponse.
        :rtype: int
        """
        return self._id_transacao

    @id_transacao.setter
    def id_transacao(self, id_transacao):
        """
        Sets the id_transacao of this ExtratoResponse.


        :param id_transacao: The id_transacao of this ExtratoResponse.
        :type: int
        """
        self._id_transacao = id_transacao

    @property
    def mcc(self):
        """
        Gets the mcc of this ExtratoResponse.


        :return: The mcc of this ExtratoResponse.
        :rtype: int
        """
        return self._mcc

    @mcc.setter
    def mcc(self, mcc):
        """
        Sets the mcc of this ExtratoResponse.


        :param mcc: The mcc of this ExtratoResponse.
        :type: int
        """
        self._mcc = mcc

    @property
    def nome_estab_visa(self):
        """
        Gets the nome_estab_visa of this ExtratoResponse.


        :return: The nome_estab_visa of this ExtratoResponse.
        :rtype: str
        """
        return self._nome_estab_visa

    @nome_estab_visa.setter
    def nome_estab_visa(self, nome_estab_visa):
        """
        Sets the nome_estab_visa of this ExtratoResponse.


        :param nome_estab_visa: The nome_estab_visa of this ExtratoResponse.
        :type: str
        """
        self._nome_estab_visa = nome_estab_visa

    @property
    def nome_plastico(self):
        """
        Gets the nome_plastico of this ExtratoResponse.


        :return: The nome_plastico of this ExtratoResponse.
        :rtype: str
        """
        return self._nome_plastico

    @nome_plastico.setter
    def nome_plastico(self, nome_plastico):
        """
        Sets the nome_plastico of this ExtratoResponse.


        :param nome_plastico: The nome_plastico of this ExtratoResponse.
        :type: str
        """
        self._nome_plastico = nome_plastico

    @property
    def numero_estabelecimento(self):
        """
        Gets the numero_estabelecimento of this ExtratoResponse.


        :return: The numero_estabelecimento of this ExtratoResponse.
        :rtype: int
        """
        return self._numero_estabelecimento

    @numero_estabelecimento.setter
    def numero_estabelecimento(self, numero_estabelecimento):
        """
        Sets the numero_estabelecimento of this ExtratoResponse.


        :param numero_estabelecimento: The numero_estabelecimento of this ExtratoResponse.
        :type: int
        """
        self._numero_estabelecimento = numero_estabelecimento

    @property
    def origem(self):
        """
        Gets the origem of this ExtratoResponse.


        :return: The origem of this ExtratoResponse.
        :rtype: str
        """
        return self._origem

    @origem.setter
    def origem(self, origem):
        """
        Sets the origem of this ExtratoResponse.


        :param origem: The origem of this ExtratoResponse.
        :type: str
        """
        self._origem = origem

    @property
    def taxa_embarque(self):
        """
        Gets the taxa_embarque of this ExtratoResponse.


        :return: The taxa_embarque of this ExtratoResponse.
        :rtype: float
        """
        return self._taxa_embarque

    @taxa_embarque.setter
    def taxa_embarque(self, taxa_embarque):
        """
        Sets the taxa_embarque of this ExtratoResponse.


        :param taxa_embarque: The taxa_embarque of this ExtratoResponse.
        :type: float
        """
        self._taxa_embarque = taxa_embarque

    @property
    def tipo_evento(self):
        """
        Gets the tipo_evento of this ExtratoResponse.


        :return: The tipo_evento of this ExtratoResponse.
        :rtype: str
        """
        return self._tipo_evento

    @tipo_evento.setter
    def tipo_evento(self, tipo_evento):
        """
        Sets the tipo_evento of this ExtratoResponse.


        :param tipo_evento: The tipo_evento of this ExtratoResponse.
        :type: str
        """
        self._tipo_evento = tipo_evento

    @property
    def valor_dolar(self):
        """
        Gets the valor_dolar of this ExtratoResponse.


        :return: The valor_dolar of this ExtratoResponse.
        :rtype: float
        """
        return self._valor_dolar

    @valor_dolar.setter
    def valor_dolar(self, valor_dolar):
        """
        Sets the valor_dolar of this ExtratoResponse.


        :param valor_dolar: The valor_dolar of this ExtratoResponse.
        :type: float
        """
        self._valor_dolar = valor_dolar

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

