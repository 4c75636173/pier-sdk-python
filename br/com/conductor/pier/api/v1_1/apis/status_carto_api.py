# coding: utf-8

"""
StatusCartoApi.py
Copyright 2016 SmartBear Software

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
"""

from __future__ import absolute_import

import sys
import os

# python 2 and python 3 compatibility library
from six import iteritems

from ..configuration import Configuration
from ..api_client import ApiClient


class StatusCartoApi(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    Ref: https://github.com/swagger-api/swagger-codegen
    """

    def __init__(self, api_client=None):
        config = Configuration()
        if api_client:
            self.api_client = api_client
        else:
            if not config.api_client:
                config.api_client = ApiClient()
            self.api_client = config.api_client

    def consultar_status_cartao_using_get(self, id_status_cartao, **kwargs):
        """
        Apresenta os dados de um determinado Status Cart\u00C3\u00A3o 
        Este m\u00C3\u00A9todo permite consultar os par\u00C3\u00A2metros de um determinado Status de Cart\u00C3\u00A3o a partir do seu c\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o (id).  

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.consultar_status_cartao_using_get(id_status_cartao, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param int id_status_cartao: C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Est\u00C3\u00A1gio de Entrega do Cart\u00C3\u00A3o (id). (required)
        :return: EstgioCarto
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['id_status_cartao']
        all_params.append('callback')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method consultar_status_cartao_using_get" % key
                )
            params[key] = val
        del params['kwargs']

        # verify the required parameter 'id_status_cartao' is set
        if ('id_status_cartao' not in params) or (params['id_status_cartao'] is None):
            raise ValueError("Missing the required parameter `id_status_cartao` when calling `consultar_status_cartao_using_get`")

        resource_path = '/api/status-cartoes/{id_status_cartao}'.replace('{format}', 'json')
        path_params = {}
        if 'id_status_cartao' in params:
            path_params['id_status_cartao'] = params['id_status_cartao']

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept(['application/json'])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type(['application/json'])

        # Authentication setting
        auth_settings = ['access_token']

        response = self.api_client.call_api(resource_path, 'GET',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='EstgioCarto',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'))
        return response

    def listar_status_cartoes_using_get(self, **kwargs):
        """
        Lista as op\u00C3\u00A7\u00C3\u00B5es de Status do Cart\u00C3\u00A3o 
        Este m\u00C3\u00A9todo permite que sejam listadas as possibilidades de Status que podem ser atribu\u00C3\u00ADdas aos Cart\u00C3\u00B5es.

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.listar_status_cartoes_using_get(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param int id_status_cartao: C\u00C3\u00B3digo de Identifica\u00C3\u00A7\u00C3\u00A3o do Status do Cart\u00C3\u00A3o (id).
        :param str nome: Nome atribu\u00C3\u00ADdo ao Status de Entrega do Cart\u00C3\u00A3o.
        :param int id_status_destino_desbloqueio: Indica qual o idStatusCartao que deve ser atribu\u00C3\u00ADdo a um idCartao quando ele for desbloqueado.
        :param str cancela_conta: Indica que Cart\u00C3\u00B5es com este idStatusCartao podem ter a sua conta Cancelada.
        :param str permite_desbloqueio: Indica que Cart\u00C3\u00B5es com este idStatusCartao podem ser Desbloqueados.
        :param int page: P\u00C3\u00A1gina solicitada (Default = 0)
        :param int limit: Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 100, Max = 100)
        :return: ListaDeStatusCartes
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['id_status_cartao', 'nome', 'id_status_destino_desbloqueio', 'cancela_conta', 'permite_desbloqueio', 'page', 'limit']
        all_params.append('callback')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method listar_status_cartoes_using_get" % key
                )
            params[key] = val
        del params['kwargs']


        resource_path = '/api/status-cartoes'.replace('{format}', 'json')
        path_params = {}

        query_params = {}
        if 'id_status_cartao' in params:
            query_params['id_status_cartao'] = params['id_status_cartao']
        if 'nome' in params:
            query_params['nome'] = params['nome']
        if 'id_status_destino_desbloqueio' in params:
            query_params['id_status_destino_desbloqueio'] = params['id_status_destino_desbloqueio']
        if 'cancela_conta' in params:
            query_params['cancela_conta'] = params['cancela_conta']
        if 'permite_desbloqueio' in params:
            query_params['permite_desbloqueio'] = params['permite_desbloqueio']
        if 'page' in params:
            query_params['page'] = params['page']
        if 'limit' in params:
            query_params['limit'] = params['limit']

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept(['application/json'])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type(['application/json'])

        # Authentication setting
        auth_settings = ['access_token']

        response = self.api_client.call_api(resource_path, 'GET',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='ListaDeStatusCartes',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'))
        return response
